This is mpi4py.info, produced by makeinfo version 7.1 from mpi4py.texi.

     MPI for Python 4.0.3, Feb 13, 2025

     Lisandro Dalcin

     Copyright © 2025, Lisandro Dalcin

INFO-DIR-SECTION Miscellaneous
START-INFO-DIR-ENTRY
* mpi4py: (mpi4py.info). MPI for Python.
END-INFO-DIR-ENTRY


   Generated by Sphinx 8.1.3.


File: mpi4py.info,  Node: Top,  Next: Introduction,  Up: (dir)

MPI for Python
**************

     MPI for Python 4.0.3, Feb 13, 2025

     Lisandro Dalcin

     Copyright © 2025, Lisandro Dalcin

Abstract
========

'MPI for Python' provides Python bindings for the 'Message Passing
Interface' (MPI) standard, allowing Python applications to exploit
multiple processors on workstations, clusters and supercomputers.

This package builds on the MPI specification and provides an object
oriented interface resembling the MPI-2 C++ bindings.  It supports
point-to-point (sends, receives) and collective (broadcasts, scatters,
gathers) communication of any 'picklable' Python object, as well as
efficient communication of Python objects exposing the Python buffer
interface (e.g.  NumPy arrays and builtin bytes/array/memoryview
objects).

* Menu:

* Introduction::
* Overview::
* Tutorial::
* mpi4py::
* mpi4py.MPI: mpi4py MPI.
* mpi4py.typing: mpi4py typing.
* mpi4py.futures: mpi4py futures.
* mpi4py.util: mpi4py util.
* mpi4py.run: mpi4py run.
* mpi4py.bench: mpi4py bench.
* Reference::
* Citation: Citation<2>.
* Installation::
* Development::
* Guidelines::
* LICENSE::
* CHANGES::
* Python Module Index::
* Index::

 -- The Detailed Node Listing --

Introduction

* What is MPI?::
* What is Python?::
* Related Projects::

Overview

* Communicating Python Objects and Array Data::
* Communicators::
* Point-to-Point Communications::
* Collective Communications::
* Support for GPU-aware MPI::
* Dynamic Process Management::
* One-Sided Communications::
* Parallel Input/Output::
* Environmental Management::

Point-to-Point Communications

* Blocking Communications::
* Nonblocking Communications::
* Persistent Communications::

Environmental Management

* Initialization and Exit::
* Implementation Information::
* Timers::
* Error Handling::

Tutorial

* Running Python scripts with MPI::
* Point-to-Point Communication::
* Collective Communication::
* Input/Output (MPI-IO): Input/Output MPI-IO.
* Dynamic Process Management: Dynamic Process Management<2>.
* GPU-aware MPI + Python GPU arrays::
* One-Sided Communication (RMA): One-Sided Communication RMA.
* Wrapping with SWIG::
* Wrapping with F2Py::

mpi4py

* Runtime configuration options::
* Environment variables::
* Miscellaneous functions::

mpi4py.MPI

* Classes::
* Functions::
* Attributes::

mpi4py.futures

* MPIPoolExecutor::
* MPICommExecutor::
* Command line::
* Parallel tasks::
* Utilities::
* Examples::
* Citation::

Examples

* Computing the Julia set::
* Computing Pi (parallel task): Computing Pi parallel task.

mpi4py.util

* mpi4py.util.dtlib: mpi4py util dtlib.
* mpi4py.util.pkl5: mpi4py util pkl5.
* mpi4py.util.pool: mpi4py util pool.
* mpi4py.util.sync: mpi4py util sync.

mpi4py.util.pkl5

* Examples: Examples<2>.

mpi4py.util.sync

* Sequential execution::
* Global counter::
* Mutual exclusion::
* Condition variable::
* Semaphore object::
* Examples: Examples<3>.

mpi4py.run

* Exceptions and deadlocks::
* Command line: Command line<2>.

Reference

* mpi4py.MPI: mpi4py MPI<2>.

mpi4py.MPI

* mpi4py.MPI.BottomType: mpi4py MPI BottomType.
* mpi4py.MPI.BufferAutomaticType: mpi4py MPI BufferAutomaticType.
* mpi4py.MPI.Cartcomm: mpi4py MPI Cartcomm.
* mpi4py.MPI.Comm: mpi4py MPI Comm.
* mpi4py.MPI.Datatype: mpi4py MPI Datatype.
* mpi4py.MPI.Distgraphcomm: mpi4py MPI Distgraphcomm.
* mpi4py.MPI.Errhandler: mpi4py MPI Errhandler.
* mpi4py.MPI.File: mpi4py MPI File.
* mpi4py.MPI.Graphcomm: mpi4py MPI Graphcomm.
* mpi4py.MPI.Grequest: mpi4py MPI Grequest.
* mpi4py.MPI.Group: mpi4py MPI Group.
* mpi4py.MPI.InPlaceType: mpi4py MPI InPlaceType.
* mpi4py.MPI.Info: mpi4py MPI Info.
* mpi4py.MPI.Intercomm: mpi4py MPI Intercomm.
* mpi4py.MPI.Intracomm: mpi4py MPI Intracomm.
* mpi4py.MPI.Message: mpi4py MPI Message.
* mpi4py.MPI.Op: mpi4py MPI Op.
* mpi4py.MPI.Pickle: mpi4py MPI Pickle.
* mpi4py.MPI.Prequest: mpi4py MPI Prequest.
* mpi4py.MPI.Request: mpi4py MPI Request.
* mpi4py.MPI.Session: mpi4py MPI Session.
* mpi4py.MPI.Status: mpi4py MPI Status.
* mpi4py.MPI.Topocomm: mpi4py MPI Topocomm.
* mpi4py.MPI.Win: mpi4py MPI Win.
* mpi4py.MPI.buffer: mpi4py MPI buffer.
* mpi4py.MPI.memory: mpi4py MPI memory.
* mpi4py.MPI.Exception: mpi4py MPI Exception.
* mpi4py.MPI.Add_error_class: mpi4py MPI Add_error_class.
* mpi4py.MPI.Add_error_code: mpi4py MPI Add_error_code.
* mpi4py.MPI.Add_error_string: mpi4py MPI Add_error_string.
* mpi4py.MPI.Aint_add: mpi4py MPI Aint_add.
* mpi4py.MPI.Aint_diff: mpi4py MPI Aint_diff.
* mpi4py.MPI.Alloc_mem: mpi4py MPI Alloc_mem.
* mpi4py.MPI.Attach_buffer: mpi4py MPI Attach_buffer.
* mpi4py.MPI.Close_port: mpi4py MPI Close_port.
* mpi4py.MPI.Compute_dims: mpi4py MPI Compute_dims.
* mpi4py.MPI.Detach_buffer: mpi4py MPI Detach_buffer.
* mpi4py.MPI.Finalize: mpi4py MPI Finalize.
* mpi4py.MPI.Flush_buffer: mpi4py MPI Flush_buffer.
* mpi4py.MPI.Free_mem: mpi4py MPI Free_mem.
* mpi4py.MPI.Get_address: mpi4py MPI Get_address.
* mpi4py.MPI.Get_error_class: mpi4py MPI Get_error_class.
* mpi4py.MPI.Get_error_string: mpi4py MPI Get_error_string.
* mpi4py.MPI.Get_hw_resource_info: mpi4py MPI Get_hw_resource_info.
* mpi4py.MPI.Get_library_version: mpi4py MPI Get_library_version.
* mpi4py.MPI.Get_processor_name: mpi4py MPI Get_processor_name.
* mpi4py.MPI.Get_version: mpi4py MPI Get_version.
* mpi4py.MPI.Iflush_buffer: mpi4py MPI Iflush_buffer.
* mpi4py.MPI.Init: mpi4py MPI Init.
* mpi4py.MPI.Init_thread: mpi4py MPI Init_thread.
* mpi4py.MPI.Is_finalized: mpi4py MPI Is_finalized.
* mpi4py.MPI.Is_initialized: mpi4py MPI Is_initialized.
* mpi4py.MPI.Is_thread_main: mpi4py MPI Is_thread_main.
* mpi4py.MPI.Lookup_name: mpi4py MPI Lookup_name.
* mpi4py.MPI.Open_port: mpi4py MPI Open_port.
* mpi4py.MPI.Pcontrol: mpi4py MPI Pcontrol.
* mpi4py.MPI.Publish_name: mpi4py MPI Publish_name.
* mpi4py.MPI.Query_thread: mpi4py MPI Query_thread.
* mpi4py.MPI.Register_datarep: mpi4py MPI Register_datarep.
* mpi4py.MPI.Remove_error_class: mpi4py MPI Remove_error_class.
* mpi4py.MPI.Remove_error_code: mpi4py MPI Remove_error_code.
* mpi4py.MPI.Remove_error_string: mpi4py MPI Remove_error_string.
* mpi4py.MPI.Unpublish_name: mpi4py MPI Unpublish_name.
* mpi4py.MPI.Wtick: mpi4py MPI Wtick.
* mpi4py.MPI.Wtime: mpi4py MPI Wtime.
* mpi4py.MPI.get_vendor: mpi4py MPI get_vendor.
* mpi4py.MPI.UNDEFINED: mpi4py MPI UNDEFINED.
* mpi4py.MPI.ANY_SOURCE: mpi4py MPI ANY_SOURCE.
* mpi4py.MPI.ANY_TAG: mpi4py MPI ANY_TAG.
* mpi4py.MPI.PROC_NULL: mpi4py MPI PROC_NULL.
* mpi4py.MPI.ROOT: mpi4py MPI ROOT.
* mpi4py.MPI.BOTTOM: mpi4py MPI BOTTOM.
* mpi4py.MPI.IN_PLACE: mpi4py MPI IN_PLACE.
* mpi4py.MPI.KEYVAL_INVALID: mpi4py MPI KEYVAL_INVALID.
* mpi4py.MPI.TAG_UB: mpi4py MPI TAG_UB.
* mpi4py.MPI.IO: mpi4py MPI IO.
* mpi4py.MPI.WTIME_IS_GLOBAL: mpi4py MPI WTIME_IS_GLOBAL.
* mpi4py.MPI.UNIVERSE_SIZE: mpi4py MPI UNIVERSE_SIZE.
* mpi4py.MPI.APPNUM: mpi4py MPI APPNUM.
* mpi4py.MPI.LASTUSEDCODE: mpi4py MPI LASTUSEDCODE.
* mpi4py.MPI.WIN_BASE: mpi4py MPI WIN_BASE.
* mpi4py.MPI.WIN_SIZE: mpi4py MPI WIN_SIZE.
* mpi4py.MPI.WIN_DISP_UNIT: mpi4py MPI WIN_DISP_UNIT.
* mpi4py.MPI.WIN_CREATE_FLAVOR: mpi4py MPI WIN_CREATE_FLAVOR.
* mpi4py.MPI.WIN_FLAVOR: mpi4py MPI WIN_FLAVOR.
* mpi4py.MPI.WIN_MODEL: mpi4py MPI WIN_MODEL.
* mpi4py.MPI.SUCCESS: mpi4py MPI SUCCESS.
* mpi4py.MPI.ERR_LASTCODE: mpi4py MPI ERR_LASTCODE.
* mpi4py.MPI.ERR_TYPE: mpi4py MPI ERR_TYPE.
* mpi4py.MPI.ERR_REQUEST: mpi4py MPI ERR_REQUEST.
* mpi4py.MPI.ERR_OP: mpi4py MPI ERR_OP.
* mpi4py.MPI.ERR_GROUP: mpi4py MPI ERR_GROUP.
* mpi4py.MPI.ERR_INFO: mpi4py MPI ERR_INFO.
* mpi4py.MPI.ERR_ERRHANDLER: mpi4py MPI ERR_ERRHANDLER.
* mpi4py.MPI.ERR_SESSION: mpi4py MPI ERR_SESSION.
* mpi4py.MPI.ERR_COMM: mpi4py MPI ERR_COMM.
* mpi4py.MPI.ERR_WIN: mpi4py MPI ERR_WIN.
* mpi4py.MPI.ERR_FILE: mpi4py MPI ERR_FILE.
* mpi4py.MPI.ERR_BUFFER: mpi4py MPI ERR_BUFFER.
* mpi4py.MPI.ERR_COUNT: mpi4py MPI ERR_COUNT.
* mpi4py.MPI.ERR_TAG: mpi4py MPI ERR_TAG.
* mpi4py.MPI.ERR_RANK: mpi4py MPI ERR_RANK.
* mpi4py.MPI.ERR_ROOT: mpi4py MPI ERR_ROOT.
* mpi4py.MPI.ERR_TRUNCATE: mpi4py MPI ERR_TRUNCATE.
* mpi4py.MPI.ERR_IN_STATUS: mpi4py MPI ERR_IN_STATUS.
* mpi4py.MPI.ERR_PENDING: mpi4py MPI ERR_PENDING.
* mpi4py.MPI.ERR_TOPOLOGY: mpi4py MPI ERR_TOPOLOGY.
* mpi4py.MPI.ERR_DIMS: mpi4py MPI ERR_DIMS.
* mpi4py.MPI.ERR_ARG: mpi4py MPI ERR_ARG.
* mpi4py.MPI.ERR_OTHER: mpi4py MPI ERR_OTHER.
* mpi4py.MPI.ERR_UNKNOWN: mpi4py MPI ERR_UNKNOWN.
* mpi4py.MPI.ERR_INTERN: mpi4py MPI ERR_INTERN.
* mpi4py.MPI.ERR_KEYVAL: mpi4py MPI ERR_KEYVAL.
* mpi4py.MPI.ERR_NO_MEM: mpi4py MPI ERR_NO_MEM.
* mpi4py.MPI.ERR_INFO_KEY: mpi4py MPI ERR_INFO_KEY.
* mpi4py.MPI.ERR_INFO_VALUE: mpi4py MPI ERR_INFO_VALUE.
* mpi4py.MPI.ERR_INFO_NOKEY: mpi4py MPI ERR_INFO_NOKEY.
* mpi4py.MPI.ERR_SPAWN: mpi4py MPI ERR_SPAWN.
* mpi4py.MPI.ERR_PORT: mpi4py MPI ERR_PORT.
* mpi4py.MPI.ERR_SERVICE: mpi4py MPI ERR_SERVICE.
* mpi4py.MPI.ERR_NAME: mpi4py MPI ERR_NAME.
* mpi4py.MPI.ERR_PROC_ABORTED: mpi4py MPI ERR_PROC_ABORTED.
* mpi4py.MPI.ERR_BASE: mpi4py MPI ERR_BASE.
* mpi4py.MPI.ERR_SIZE: mpi4py MPI ERR_SIZE.
* mpi4py.MPI.ERR_DISP: mpi4py MPI ERR_DISP.
* mpi4py.MPI.ERR_ASSERT: mpi4py MPI ERR_ASSERT.
* mpi4py.MPI.ERR_LOCKTYPE: mpi4py MPI ERR_LOCKTYPE.
* mpi4py.MPI.ERR_RMA_CONFLICT: mpi4py MPI ERR_RMA_CONFLICT.
* mpi4py.MPI.ERR_RMA_SYNC: mpi4py MPI ERR_RMA_SYNC.
* mpi4py.MPI.ERR_RMA_RANGE: mpi4py MPI ERR_RMA_RANGE.
* mpi4py.MPI.ERR_RMA_ATTACH: mpi4py MPI ERR_RMA_ATTACH.
* mpi4py.MPI.ERR_RMA_SHARED: mpi4py MPI ERR_RMA_SHARED.
* mpi4py.MPI.ERR_RMA_FLAVOR: mpi4py MPI ERR_RMA_FLAVOR.
* mpi4py.MPI.ERR_BAD_FILE: mpi4py MPI ERR_BAD_FILE.
* mpi4py.MPI.ERR_NO_SUCH_FILE: mpi4py MPI ERR_NO_SUCH_FILE.
* mpi4py.MPI.ERR_FILE_EXISTS: mpi4py MPI ERR_FILE_EXISTS.
* mpi4py.MPI.ERR_FILE_IN_USE: mpi4py MPI ERR_FILE_IN_USE.
* mpi4py.MPI.ERR_AMODE: mpi4py MPI ERR_AMODE.
* mpi4py.MPI.ERR_ACCESS: mpi4py MPI ERR_ACCESS.
* mpi4py.MPI.ERR_READ_ONLY: mpi4py MPI ERR_READ_ONLY.
* mpi4py.MPI.ERR_NO_SPACE: mpi4py MPI ERR_NO_SPACE.
* mpi4py.MPI.ERR_QUOTA: mpi4py MPI ERR_QUOTA.
* mpi4py.MPI.ERR_NOT_SAME: mpi4py MPI ERR_NOT_SAME.
* mpi4py.MPI.ERR_IO: mpi4py MPI ERR_IO.
* mpi4py.MPI.ERR_UNSUPPORTED_OPERATION: mpi4py MPI ERR_UNSUPPORTED_OPERATION.
* mpi4py.MPI.ERR_UNSUPPORTED_DATAREP: mpi4py MPI ERR_UNSUPPORTED_DATAREP.
* mpi4py.MPI.ERR_CONVERSION: mpi4py MPI ERR_CONVERSION.
* mpi4py.MPI.ERR_DUP_DATAREP: mpi4py MPI ERR_DUP_DATAREP.
* mpi4py.MPI.ERR_VALUE_TOO_LARGE: mpi4py MPI ERR_VALUE_TOO_LARGE.
* mpi4py.MPI.ERR_REVOKED: mpi4py MPI ERR_REVOKED.
* mpi4py.MPI.ERR_PROC_FAILED: mpi4py MPI ERR_PROC_FAILED.
* mpi4py.MPI.ERR_PROC_FAILED_PENDING: mpi4py MPI ERR_PROC_FAILED_PENDING.
* mpi4py.MPI.ORDER_C: mpi4py MPI ORDER_C.
* mpi4py.MPI.ORDER_FORTRAN: mpi4py MPI ORDER_FORTRAN.
* mpi4py.MPI.ORDER_F: mpi4py MPI ORDER_F.
* mpi4py.MPI.TYPECLASS_INTEGER: mpi4py MPI TYPECLASS_INTEGER.
* mpi4py.MPI.TYPECLASS_REAL: mpi4py MPI TYPECLASS_REAL.
* mpi4py.MPI.TYPECLASS_COMPLEX: mpi4py MPI TYPECLASS_COMPLEX.
* mpi4py.MPI.DISTRIBUTE_NONE: mpi4py MPI DISTRIBUTE_NONE.
* mpi4py.MPI.DISTRIBUTE_BLOCK: mpi4py MPI DISTRIBUTE_BLOCK.
* mpi4py.MPI.DISTRIBUTE_CYCLIC: mpi4py MPI DISTRIBUTE_CYCLIC.
* mpi4py.MPI.DISTRIBUTE_DFLT_DARG: mpi4py MPI DISTRIBUTE_DFLT_DARG.
* mpi4py.MPI.COMBINER_NAMED: mpi4py MPI COMBINER_NAMED.
* mpi4py.MPI.COMBINER_DUP: mpi4py MPI COMBINER_DUP.
* mpi4py.MPI.COMBINER_CONTIGUOUS: mpi4py MPI COMBINER_CONTIGUOUS.
* mpi4py.MPI.COMBINER_VECTOR: mpi4py MPI COMBINER_VECTOR.
* mpi4py.MPI.COMBINER_HVECTOR: mpi4py MPI COMBINER_HVECTOR.
* mpi4py.MPI.COMBINER_INDEXED: mpi4py MPI COMBINER_INDEXED.
* mpi4py.MPI.COMBINER_HINDEXED: mpi4py MPI COMBINER_HINDEXED.
* mpi4py.MPI.COMBINER_INDEXED_BLOCK: mpi4py MPI COMBINER_INDEXED_BLOCK.
* mpi4py.MPI.COMBINER_HINDEXED_BLOCK: mpi4py MPI COMBINER_HINDEXED_BLOCK.
* mpi4py.MPI.COMBINER_STRUCT: mpi4py MPI COMBINER_STRUCT.
* mpi4py.MPI.COMBINER_SUBARRAY: mpi4py MPI COMBINER_SUBARRAY.
* mpi4py.MPI.COMBINER_DARRAY: mpi4py MPI COMBINER_DARRAY.
* mpi4py.MPI.COMBINER_RESIZED: mpi4py MPI COMBINER_RESIZED.
* mpi4py.MPI.COMBINER_VALUE_INDEX: mpi4py MPI COMBINER_VALUE_INDEX.
* mpi4py.MPI.COMBINER_F90_INTEGER: mpi4py MPI COMBINER_F90_INTEGER.
* mpi4py.MPI.COMBINER_F90_REAL: mpi4py MPI COMBINER_F90_REAL.
* mpi4py.MPI.COMBINER_F90_COMPLEX: mpi4py MPI COMBINER_F90_COMPLEX.
* mpi4py.MPI.F_SOURCE: mpi4py MPI F_SOURCE.
* mpi4py.MPI.F_TAG: mpi4py MPI F_TAG.
* mpi4py.MPI.F_ERROR: mpi4py MPI F_ERROR.
* mpi4py.MPI.F_STATUS_SIZE: mpi4py MPI F_STATUS_SIZE.
* mpi4py.MPI.IDENT: mpi4py MPI IDENT.
* mpi4py.MPI.CONGRUENT: mpi4py MPI CONGRUENT.
* mpi4py.MPI.SIMILAR: mpi4py MPI SIMILAR.
* mpi4py.MPI.UNEQUAL: mpi4py MPI UNEQUAL.
* mpi4py.MPI.CART: mpi4py MPI CART.
* mpi4py.MPI.GRAPH: mpi4py MPI GRAPH.
* mpi4py.MPI.DIST_GRAPH: mpi4py MPI DIST_GRAPH.
* mpi4py.MPI.UNWEIGHTED: mpi4py MPI UNWEIGHTED.
* mpi4py.MPI.WEIGHTS_EMPTY: mpi4py MPI WEIGHTS_EMPTY.
* mpi4py.MPI.COMM_TYPE_SHARED: mpi4py MPI COMM_TYPE_SHARED.
* mpi4py.MPI.COMM_TYPE_HW_GUIDED: mpi4py MPI COMM_TYPE_HW_GUIDED.
* mpi4py.MPI.COMM_TYPE_HW_UNGUIDED: mpi4py MPI COMM_TYPE_HW_UNGUIDED.
* mpi4py.MPI.COMM_TYPE_RESOURCE_GUIDED: mpi4py MPI COMM_TYPE_RESOURCE_GUIDED.
* mpi4py.MPI.BSEND_OVERHEAD: mpi4py MPI BSEND_OVERHEAD.
* mpi4py.MPI.BUFFER_AUTOMATIC: mpi4py MPI BUFFER_AUTOMATIC.
* mpi4py.MPI.WIN_FLAVOR_CREATE: mpi4py MPI WIN_FLAVOR_CREATE.
* mpi4py.MPI.WIN_FLAVOR_ALLOCATE: mpi4py MPI WIN_FLAVOR_ALLOCATE.
* mpi4py.MPI.WIN_FLAVOR_DYNAMIC: mpi4py MPI WIN_FLAVOR_DYNAMIC.
* mpi4py.MPI.WIN_FLAVOR_SHARED: mpi4py MPI WIN_FLAVOR_SHARED.
* mpi4py.MPI.WIN_SEPARATE: mpi4py MPI WIN_SEPARATE.
* mpi4py.MPI.WIN_UNIFIED: mpi4py MPI WIN_UNIFIED.
* mpi4py.MPI.MODE_NOCHECK: mpi4py MPI MODE_NOCHECK.
* mpi4py.MPI.MODE_NOSTORE: mpi4py MPI MODE_NOSTORE.
* mpi4py.MPI.MODE_NOPUT: mpi4py MPI MODE_NOPUT.
* mpi4py.MPI.MODE_NOPRECEDE: mpi4py MPI MODE_NOPRECEDE.
* mpi4py.MPI.MODE_NOSUCCEED: mpi4py MPI MODE_NOSUCCEED.
* mpi4py.MPI.LOCK_EXCLUSIVE: mpi4py MPI LOCK_EXCLUSIVE.
* mpi4py.MPI.LOCK_SHARED: mpi4py MPI LOCK_SHARED.
* mpi4py.MPI.MODE_RDONLY: mpi4py MPI MODE_RDONLY.
* mpi4py.MPI.MODE_WRONLY: mpi4py MPI MODE_WRONLY.
* mpi4py.MPI.MODE_RDWR: mpi4py MPI MODE_RDWR.
* mpi4py.MPI.MODE_CREATE: mpi4py MPI MODE_CREATE.
* mpi4py.MPI.MODE_EXCL: mpi4py MPI MODE_EXCL.
* mpi4py.MPI.MODE_DELETE_ON_CLOSE: mpi4py MPI MODE_DELETE_ON_CLOSE.
* mpi4py.MPI.MODE_UNIQUE_OPEN: mpi4py MPI MODE_UNIQUE_OPEN.
* mpi4py.MPI.MODE_SEQUENTIAL: mpi4py MPI MODE_SEQUENTIAL.
* mpi4py.MPI.MODE_APPEND: mpi4py MPI MODE_APPEND.
* mpi4py.MPI.SEEK_SET: mpi4py MPI SEEK_SET.
* mpi4py.MPI.SEEK_CUR: mpi4py MPI SEEK_CUR.
* mpi4py.MPI.SEEK_END: mpi4py MPI SEEK_END.
* mpi4py.MPI.DISPLACEMENT_CURRENT: mpi4py MPI DISPLACEMENT_CURRENT.
* mpi4py.MPI.DISP_CUR: mpi4py MPI DISP_CUR.
* mpi4py.MPI.THREAD_SINGLE: mpi4py MPI THREAD_SINGLE.
* mpi4py.MPI.THREAD_FUNNELED: mpi4py MPI THREAD_FUNNELED.
* mpi4py.MPI.THREAD_SERIALIZED: mpi4py MPI THREAD_SERIALIZED.
* mpi4py.MPI.THREAD_MULTIPLE: mpi4py MPI THREAD_MULTIPLE.
* mpi4py.MPI.VERSION: mpi4py MPI VERSION.
* mpi4py.MPI.SUBVERSION: mpi4py MPI SUBVERSION.
* mpi4py.MPI.MAX_PROCESSOR_NAME: mpi4py MPI MAX_PROCESSOR_NAME.
* mpi4py.MPI.MAX_ERROR_STRING: mpi4py MPI MAX_ERROR_STRING.
* mpi4py.MPI.MAX_PORT_NAME: mpi4py MPI MAX_PORT_NAME.
* mpi4py.MPI.MAX_INFO_KEY: mpi4py MPI MAX_INFO_KEY.
* mpi4py.MPI.MAX_INFO_VAL: mpi4py MPI MAX_INFO_VAL.
* mpi4py.MPI.MAX_OBJECT_NAME: mpi4py MPI MAX_OBJECT_NAME.
* mpi4py.MPI.MAX_DATAREP_STRING: mpi4py MPI MAX_DATAREP_STRING.
* mpi4py.MPI.MAX_LIBRARY_VERSION_STRING: mpi4py MPI MAX_LIBRARY_VERSION_STRING.
* mpi4py.MPI.MAX_PSET_NAME_LEN: mpi4py MPI MAX_PSET_NAME_LEN.
* mpi4py.MPI.MAX_STRINGTAG_LEN: mpi4py MPI MAX_STRINGTAG_LEN.
* mpi4py.MPI.DATATYPE_NULL: mpi4py MPI DATATYPE_NULL.
* mpi4py.MPI.PACKED: mpi4py MPI PACKED.
* mpi4py.MPI.BYTE: mpi4py MPI BYTE.
* mpi4py.MPI.AINT: mpi4py MPI AINT.
* mpi4py.MPI.OFFSET: mpi4py MPI OFFSET.
* mpi4py.MPI.COUNT: mpi4py MPI COUNT.
* mpi4py.MPI.CHAR: mpi4py MPI CHAR.
* mpi4py.MPI.WCHAR: mpi4py MPI WCHAR.
* mpi4py.MPI.SIGNED_CHAR: mpi4py MPI SIGNED_CHAR.
* mpi4py.MPI.SHORT: mpi4py MPI SHORT.
* mpi4py.MPI.INT: mpi4py MPI INT.
* mpi4py.MPI.LONG: mpi4py MPI LONG.
* mpi4py.MPI.LONG_LONG: mpi4py MPI LONG_LONG.
* mpi4py.MPI.UNSIGNED_CHAR: mpi4py MPI UNSIGNED_CHAR.
* mpi4py.MPI.UNSIGNED_SHORT: mpi4py MPI UNSIGNED_SHORT.
* mpi4py.MPI.UNSIGNED: mpi4py MPI UNSIGNED.
* mpi4py.MPI.UNSIGNED_LONG: mpi4py MPI UNSIGNED_LONG.
* mpi4py.MPI.UNSIGNED_LONG_LONG: mpi4py MPI UNSIGNED_LONG_LONG.
* mpi4py.MPI.FLOAT: mpi4py MPI FLOAT.
* mpi4py.MPI.DOUBLE: mpi4py MPI DOUBLE.
* mpi4py.MPI.LONG_DOUBLE: mpi4py MPI LONG_DOUBLE.
* mpi4py.MPI.C_BOOL: mpi4py MPI C_BOOL.
* mpi4py.MPI.INT8_T: mpi4py MPI INT8_T.
* mpi4py.MPI.INT16_T: mpi4py MPI INT16_T.
* mpi4py.MPI.INT32_T: mpi4py MPI INT32_T.
* mpi4py.MPI.INT64_T: mpi4py MPI INT64_T.
* mpi4py.MPI.UINT8_T: mpi4py MPI UINT8_T.
* mpi4py.MPI.UINT16_T: mpi4py MPI UINT16_T.
* mpi4py.MPI.UINT32_T: mpi4py MPI UINT32_T.
* mpi4py.MPI.UINT64_T: mpi4py MPI UINT64_T.
* mpi4py.MPI.C_COMPLEX: mpi4py MPI C_COMPLEX.
* mpi4py.MPI.C_FLOAT_COMPLEX: mpi4py MPI C_FLOAT_COMPLEX.
* mpi4py.MPI.C_DOUBLE_COMPLEX: mpi4py MPI C_DOUBLE_COMPLEX.
* mpi4py.MPI.C_LONG_DOUBLE_COMPLEX: mpi4py MPI C_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_BOOL: mpi4py MPI CXX_BOOL.
* mpi4py.MPI.CXX_FLOAT_COMPLEX: mpi4py MPI CXX_FLOAT_COMPLEX.
* mpi4py.MPI.CXX_DOUBLE_COMPLEX: mpi4py MPI CXX_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.SHORT_INT: mpi4py MPI SHORT_INT.
* mpi4py.MPI.INT_INT: mpi4py MPI INT_INT.
* mpi4py.MPI.TWOINT: mpi4py MPI TWOINT.
* mpi4py.MPI.LONG_INT: mpi4py MPI LONG_INT.
* mpi4py.MPI.FLOAT_INT: mpi4py MPI FLOAT_INT.
* mpi4py.MPI.DOUBLE_INT: mpi4py MPI DOUBLE_INT.
* mpi4py.MPI.LONG_DOUBLE_INT: mpi4py MPI LONG_DOUBLE_INT.
* mpi4py.MPI.CHARACTER: mpi4py MPI CHARACTER.
* mpi4py.MPI.LOGICAL: mpi4py MPI LOGICAL.
* mpi4py.MPI.INTEGER: mpi4py MPI INTEGER.
* mpi4py.MPI.REAL: mpi4py MPI REAL.
* mpi4py.MPI.DOUBLE_PRECISION: mpi4py MPI DOUBLE_PRECISION.
* mpi4py.MPI.COMPLEX: mpi4py MPI COMPLEX.
* mpi4py.MPI.DOUBLE_COMPLEX: mpi4py MPI DOUBLE_COMPLEX.
* mpi4py.MPI.LOGICAL1: mpi4py MPI LOGICAL1.
* mpi4py.MPI.LOGICAL2: mpi4py MPI LOGICAL2.
* mpi4py.MPI.LOGICAL4: mpi4py MPI LOGICAL4.
* mpi4py.MPI.LOGICAL8: mpi4py MPI LOGICAL8.
* mpi4py.MPI.INTEGER1: mpi4py MPI INTEGER1.
* mpi4py.MPI.INTEGER2: mpi4py MPI INTEGER2.
* mpi4py.MPI.INTEGER4: mpi4py MPI INTEGER4.
* mpi4py.MPI.INTEGER8: mpi4py MPI INTEGER8.
* mpi4py.MPI.INTEGER16: mpi4py MPI INTEGER16.
* mpi4py.MPI.REAL2: mpi4py MPI REAL2.
* mpi4py.MPI.REAL4: mpi4py MPI REAL4.
* mpi4py.MPI.REAL8: mpi4py MPI REAL8.
* mpi4py.MPI.REAL16: mpi4py MPI REAL16.
* mpi4py.MPI.COMPLEX4: mpi4py MPI COMPLEX4.
* mpi4py.MPI.COMPLEX8: mpi4py MPI COMPLEX8.
* mpi4py.MPI.COMPLEX16: mpi4py MPI COMPLEX16.
* mpi4py.MPI.COMPLEX32: mpi4py MPI COMPLEX32.
* mpi4py.MPI.UNSIGNED_INT: mpi4py MPI UNSIGNED_INT.
* mpi4py.MPI.SIGNED_SHORT: mpi4py MPI SIGNED_SHORT.
* mpi4py.MPI.SIGNED_INT: mpi4py MPI SIGNED_INT.
* mpi4py.MPI.SIGNED_LONG: mpi4py MPI SIGNED_LONG.
* mpi4py.MPI.SIGNED_LONG_LONG: mpi4py MPI SIGNED_LONG_LONG.
* mpi4py.MPI.BOOL: mpi4py MPI BOOL.
* mpi4py.MPI.SINT8_T: mpi4py MPI SINT8_T.
* mpi4py.MPI.SINT16_T: mpi4py MPI SINT16_T.
* mpi4py.MPI.SINT32_T: mpi4py MPI SINT32_T.
* mpi4py.MPI.SINT64_T: mpi4py MPI SINT64_T.
* mpi4py.MPI.F_BOOL: mpi4py MPI F_BOOL.
* mpi4py.MPI.F_INT: mpi4py MPI F_INT.
* mpi4py.MPI.F_FLOAT: mpi4py MPI F_FLOAT.
* mpi4py.MPI.F_DOUBLE: mpi4py MPI F_DOUBLE.
* mpi4py.MPI.F_COMPLEX: mpi4py MPI F_COMPLEX.
* mpi4py.MPI.F_FLOAT_COMPLEX: mpi4py MPI F_FLOAT_COMPLEX.
* mpi4py.MPI.F_DOUBLE_COMPLEX: mpi4py MPI F_DOUBLE_COMPLEX.
* mpi4py.MPI.REQUEST_NULL: mpi4py MPI REQUEST_NULL.
* mpi4py.MPI.MESSAGE_NULL: mpi4py MPI MESSAGE_NULL.
* mpi4py.MPI.MESSAGE_NO_PROC: mpi4py MPI MESSAGE_NO_PROC.
* mpi4py.MPI.OP_NULL: mpi4py MPI OP_NULL.
* mpi4py.MPI.MAX: mpi4py MPI MAX.
* mpi4py.MPI.MIN: mpi4py MPI MIN.
* mpi4py.MPI.SUM: mpi4py MPI SUM.
* mpi4py.MPI.PROD: mpi4py MPI PROD.
* mpi4py.MPI.LAND: mpi4py MPI LAND.
* mpi4py.MPI.BAND: mpi4py MPI BAND.
* mpi4py.MPI.LOR: mpi4py MPI LOR.
* mpi4py.MPI.BOR: mpi4py MPI BOR.
* mpi4py.MPI.LXOR: mpi4py MPI LXOR.
* mpi4py.MPI.BXOR: mpi4py MPI BXOR.
* mpi4py.MPI.MAXLOC: mpi4py MPI MAXLOC.
* mpi4py.MPI.MINLOC: mpi4py MPI MINLOC.
* mpi4py.MPI.REPLACE: mpi4py MPI REPLACE.
* mpi4py.MPI.NO_OP: mpi4py MPI NO_OP.
* mpi4py.MPI.GROUP_NULL: mpi4py MPI GROUP_NULL.
* mpi4py.MPI.GROUP_EMPTY: mpi4py MPI GROUP_EMPTY.
* mpi4py.MPI.INFO_NULL: mpi4py MPI INFO_NULL.
* mpi4py.MPI.INFO_ENV: mpi4py MPI INFO_ENV.
* mpi4py.MPI.ERRHANDLER_NULL: mpi4py MPI ERRHANDLER_NULL.
* mpi4py.MPI.ERRORS_RETURN: mpi4py MPI ERRORS_RETURN.
* mpi4py.MPI.ERRORS_ABORT: mpi4py MPI ERRORS_ABORT.
* mpi4py.MPI.ERRORS_ARE_FATAL: mpi4py MPI ERRORS_ARE_FATAL.
* mpi4py.MPI.SESSION_NULL: mpi4py MPI SESSION_NULL.
* mpi4py.MPI.COMM_NULL: mpi4py MPI COMM_NULL.
* mpi4py.MPI.COMM_SELF: mpi4py MPI COMM_SELF.
* mpi4py.MPI.COMM_WORLD: mpi4py MPI COMM_WORLD.
* mpi4py.MPI.WIN_NULL: mpi4py MPI WIN_NULL.
* mpi4py.MPI.FILE_NULL: mpi4py MPI FILE_NULL.
* mpi4py.MPI.pickle: mpi4py MPI pickle.

Installation

* Build backends::
* Using pip::
* Using conda::
* Linux::
* macOS::
* Windows::

Build backends

* Using setuptools::
* Using scikit-build-core::
* Using meson-python::

Development

* Prerequisites::
* Building::
* Installing::
* Testing::

Guidelines

* Fair play::

Fair play

* Summary::
* Motivation::
* Scope::
* Fair play rules::

CHANGES

* Release 4.0.3 [2025-02-13]: Release 4 0 3 [2025-02-13].
* Release 4.0.2 [2025-02-01]: Release 4 0 2 [2025-02-01].
* Release 4.0.1 [2024-10-11]: Release 4 0 1 [2024-10-11].
* Release 4.0.0 [2024-07-28]: Release 4 0 0 [2024-07-28].
* Release 3.1.6 [2024-04-14]: Release 3 1 6 [2024-04-14].
* Release 3.1.5 [2023-10-04]: Release 3 1 5 [2023-10-04].
* Release 3.1.4 [2022-11-02]: Release 3 1 4 [2022-11-02].
* Release 3.1.3 [2021-11-25]: Release 3 1 3 [2021-11-25].
* Release 3.1.2 [2021-11-04]: Release 3 1 2 [2021-11-04].
* Release 3.1.1 [2021-08-14]: Release 3 1 1 [2021-08-14].
* Release 3.1.0 [2021-08-12]: Release 3 1 0 [2021-08-12].
* Release 3.0.3 [2019-11-04]: Release 3 0 3 [2019-11-04].
* Release 3.0.2 [2019-06-11]: Release 3 0 2 [2019-06-11].
* Release 3.0.1 [2019-02-15]: Release 3 0 1 [2019-02-15].
* Release 3.0.0 [2017-11-08]: Release 3 0 0 [2017-11-08].
* Release 2.0.0 [2015-10-18]: Release 2 0 0 [2015-10-18].
* Release 1.3.1 [2013-08-07]: Release 1 3 1 [2013-08-07].
* Release 1.3 [2012-01-20]: Release 1 3 [2012-01-20].
* Release 1.2.2 [2010-09-13]: Release 1 2 2 [2010-09-13].
* Release 1.2.1 [2010-02-26]: Release 1 2 1 [2010-02-26].
* Release 1.2 [2009-12-29]: Release 1 2 [2009-12-29].
* Release 1.1.0 [2009-06-06]: Release 1 1 0 [2009-06-06].
* Release 1.0.0 [2009-03-20]: Release 1 0 0 [2009-03-20].



File: mpi4py.info,  Node: Introduction,  Next: Overview,  Prev: Top,  Up: Top

1 Introduction
**************

Over the last years, high performance computing has become an affordable
resource to many more researchers in the scientific community than ever
before.  The conjunction of quality open source software and commodity
hardware strongly influenced the now widespread popularity of Beowulf(1)
class clusters and cluster of workstations.

Among many parallel computational models, message-passing has proven to
be an effective one.  This paradigm is specially suited for (but not
limited to) distributed memory architectures and is used in today’s most
demanding scientific and engineering application related to modeling,
simulation, design, and signal processing.  However, portable
message-passing parallel programming used to be a nightmare in the past
because of the many incompatible options developers were faced to.
Fortunately, this situation definitely changed after the MPI Forum
released its standard specification.

High performance computing is traditionally associated with software
development using compiled languages.  However, in typical applications
programs, only a small part of the code is time-critical enough to
require the efficiency of compiled languages.  The rest of the code is
generally related to memory management, error handling, input/output,
and user interaction, and those are usually the most error prone and
time-consuming lines of code to write and debug in the whole development
process.  Interpreted high-level languages can be really advantageous
for this kind of tasks.

For implementing general-purpose numerical computations, MATLAB (2) is
the dominant interpreted programming language.  In the open source side,
Octave and Scilab are well known, freely distributed software packages
providing compatibility with the MATLAB language.  In this work, we
present MPI for Python, a new package enabling applications to exploit
multiple processors using standard MPI “look and feel” in Python
scripts.

* Menu:

* What is MPI?::
* What is Python?::
* Related Projects::

   ---------- Footnotes ----------

   (1) https://www.beowulf.org/

   (2) MATLAB is a registered trademark of The MathWorks, Inc.


File: mpi4py.info,  Node: What is MPI?,  Next: What is Python?,  Up: Introduction

1.1 What is MPI?
================

MPI(1), *note [mpi-using]: 10. *note [mpi-ref]: 11. the 'Message Passing
Interface', is a standardized and portable message-passing system
designed to function on a wide variety of parallel computers.  The
standard defines the syntax and semantics of library routines and allows
users to write portable programs in the main scientific programming
languages (Fortran, C, or C++).

Since its release, the MPI specification *note [mpi-std1]: 12. *note
[mpi-std2]: 13. has become the leading standard for message-passing
libraries for parallel computers.  Implementations are available from
vendors of high-performance computers and from well known open source
projects like MPICH(2) *note [mpi-mpich]: 14. and Open MPI(3) *note
[mpi-openmpi]: 15.

   ---------- Footnotes ----------

   (1) https://www.mpi-forum.org/

   (2) https://www.mpich.org/

   (3) https://www.open-mpi.org/


File: mpi4py.info,  Node: What is Python?,  Next: Related Projects,  Prev: What is MPI?,  Up: Introduction

1.2 What is Python?
===================

Python(1) is a modern, easy to learn, powerful programming language.  It
has efficient high-level data structures and a simple but effective
approach to object-oriented programming with dynamic typing and dynamic
binding.  It supports modules and packages, which encourages program
modularity and code reuse.  Python’s elegant syntax, together with its
interpreted nature, make it an ideal language for scripting and rapid
application development in many areas on most platforms.

The Python interpreter and the extensive standard library are available
in source or binary form without charge for all major platforms, and can
be freely distributed.  It is easily extended with new functions and
data types implemented in C or C++.  Python is also suitable as an
extension language for customizable applications.

Python is an ideal candidate for writing the higher-level parts of
large-scale scientific applications *note [Hinsen97]: 17. and driving
simulations in parallel architectures *note [Beazley97]: 18. like
clusters of PC’s or SMP’s.  Python codes are quickly developed, easily
maintained, and can achieve a high degree of integration with other
libraries written in compiled languages.

   ---------- Footnotes ----------

   (1) https://www.python.org/


File: mpi4py.info,  Node: Related Projects,  Prev: What is Python?,  Up: Introduction

1.3 Related Projects
====================

As this work started and evolved, some ideas were borrowed from well
known MPI and Python related open source projects from the Internet.

   * OOMPI(1)

        + It has no relation with Python, but is an excellent object
          oriented approach to MPI.

        + It is a C++ class library specification layered on top of the
          C bindings that encapsulates MPI into a functional class
          hierarchy.

        + It provides a flexible and intuitive interface by adding some
          abstractions, like 'Ports' and 'Messages', which enrich and
          simplify the syntax.

   * Pypar(2)

        + Its interface is rather minimal.  There is no support for
          communicators or process topologies.

        + It does not require the Python interpreter to be modified or
          recompiled, but does not permit interactive parallel runs.

        + General ('picklable') Python objects of any type can be
          communicated.  There is good support for numeric arrays,
          practically full MPI bandwidth can be achieved.

   * pyMPI(3)

        + It rebuilds the Python interpreter providing a built-in module
          for message passing.  It does permit interactive parallel
          runs, which are useful for learning and debugging.

        + It provides an interface suitable for basic parallel
          programming.  There is not full support for defining new
          communicators or process topologies.

        + General (picklable) Python objects can be messaged between
          processors.  There is native support for numeric arrays.

   * Scientific Python(4)

        + It provides a collection of Python modules that are useful for
          scientific computing.

        + There is an interface to MPI and BSP ('Bulk Synchronous
          Parallel programming').

        + The interface is simple but incomplete and does not resemble
          the MPI specification.  There is support for numeric arrays.

Additionally, we would like to mention some available tools for
scientific computing and software development with Python.

   + NumPy(5) is a package that provides array manipulation and
     computational capabilities similar to those found in IDL, MATLAB,
     or Octave.  Using NumPy, it is possible to write many efficient
     numerical data processing applications directly in Python without
     using any C, C++ or Fortran code.

   + SciPy(6) is an open source library of scientific tools for Python,
     gathering a variety of high level science and engineering modules
     together as a single package.  It includes modules for graphics and
     plotting, optimization, integration, special functions, signal and
     image processing, genetic algorithms, ODE solvers, and others.

   + Cython(7) is a language that makes writing C extensions for the
     Python language as easy as Python itself.  The Cython language is
     very close to the Python language, but Cython additionally supports
     calling C functions and declaring C types on variables and class
     attributes.  This allows the compiler to generate very efficient C
     code from Cython code.  This makes Cython the ideal language for
     wrapping for external C libraries, and for fast C modules that
     speed up the execution of Python code.

   + SWIG(8) is a software development tool that connects programs
     written in C and C++ with a variety of high-level programming
     languages like Perl, Tcl/Tk, Ruby and Python.  Issuing header files
     to SWIG is the simplest approach to interfacing C/C++ libraries
     from a Python module.

(mpi-std1) MPI Forum.  MPI: A Message Passing Interface Standard.
International Journal of Supercomputer Applications, volume 8, number
3-4, pages 159-416, 1994.

(mpi-std2) MPI Forum.  MPI: A Message Passing Interface Standard.  High
Performance Computing Applications, volume 12, number 1-2, pages 1-299,
1998.

(mpi-using) William Gropp, Ewing Lusk, and Anthony Skjellum.  Using MPI:
portable parallel programming with the message-passing interface.  MIT
Press, 1994.

(mpi-ref) Mark Snir, Steve Otto, Steven Huss-Lederman, David Walker, and
Jack Dongarra.  MPI - The Complete Reference, volume 1, The MPI Core.
MIT Press, 2nd.  edition, 1998.

(mpi-mpich) W. Gropp, E. Lusk, N. Doss, and A. Skjellum.  A
high-performance, portable implementation of the MPI message passing
interface standard.  Parallel Computing, 22(6):789-828, September 1996.

(mpi-openmpi) Edgar Gabriel, Graham E. Fagg, George Bosilca, Thara
Angskun, Jack J. Dongarra, Jeffrey M. Squyres, Vishal Sahay, Prabhanjan
Kambadur, Brian Barrett, Andrew Lumsdaine, Ralph H. Castain, David J.
Daniel, Richard L. Graham, and Timothy S. Woodall.  Open MPI: Goals,
Concept, and Design of a Next Generation MPI Implementation.  In
Proceedings, 11th European PVM/MPI Users’ Group Meeting, Budapest,
Hungary, September 2004.

(Hinsen97) Konrad Hinsen.  The Molecular Modelling Toolkit: a case study
of a large scientific application in Python.  In Proceedings of the 6th
International Python Conference, pages 29-35, San Jose, Ca., October
1997.

(Beazley97) David M. Beazley and Peter S. Lomdahl.  Feeding a
large-scale physics application to Python.  In Proceedings of the 6th
International Python Conference, pages 21-29, San Jose, Ca., October
1997.

   ---------- Footnotes ----------

   (1) 
https://web.archive.org/web/20100614170656/http://www.osl.iu.edu/research/oompi/overview.php

   (2) https://github.com/daleroberts/pypar

   (3) https://sourceforge.net/projects/pympi/

   (4) http://dirac.cnrs-orleans.fr/ScientificPython.html

   (5) https://numpy.org/

   (6) https://scipy.org/

   (7) https://cython.org/

   (8) https://www.swig.org/


File: mpi4py.info,  Node: Overview,  Next: Tutorial,  Prev: Introduction,  Up: Top

2 Overview
**********

MPI for Python provides an object oriented approach to message passing
which grounds on the standard MPI-2 C++ bindings.  The interface was
designed with focus in translating MPI syntax and semantics of standard
MPI-2 bindings for C++ to Python.  Any user of the standard C/C++ MPI
bindings should be able to use this module without need of learning a
new interface.

* Menu:

* Communicating Python Objects and Array Data::
* Communicators::
* Point-to-Point Communications::
* Collective Communications::
* Support for GPU-aware MPI::
* Dynamic Process Management::
* One-Sided Communications::
* Parallel Input/Output::
* Environmental Management::


File: mpi4py.info,  Node: Communicating Python Objects and Array Data,  Next: Communicators,  Up: Overview

2.1 Communicating Python Objects and Array Data
===============================================

The Python standard library supports different mechanisms for data
persistence.  Many of them rely on disk storage, but 'pickling' and
'marshaling' can also work with memory buffers.

The pickle(1) modules provide user-extensible facilities to serialize
general Python objects using ASCII or binary formats.  The marshal(2)
module provides facilities to serialize built-in Python objects using a
binary format specific to Python, but independent of machine
architecture issues.

'MPI for Python' can communicate any built-in or user-defined Python
object taking advantage of the features provided by the pickle(3)
module.  These facilities will be routinely used to build binary
representations of objects to communicate (at sending processes), and
restoring them back (at receiving processes).

Although simple and general, the serialization approach (i.e.,
'pickling' and 'unpickling') previously discussed imposes important
overheads in memory as well as processor usage, especially in the
scenario of objects with large memory footprints being communicated.
Pickling general Python objects, ranging from primitive or container
built-in types to user-defined classes, necessarily requires computer
resources.  Processing is also needed for dispatching the appropriate
serialization method (that depends on the type of the object) and doing
the actual packing.  Additional memory is always needed, and if its
total amount is not known 'a priori', many reallocations can occur.
Indeed, in the case of large numeric arrays, this is certainly
unacceptable and precludes communication of objects occupying half or
more of the available memory resources.

'MPI for Python' supports direct communication of any object exporting
the single-segment buffer interface.  This interface is a standard
Python mechanism provided by some types (e.g., strings and numeric
arrays), allowing access in the C side to a contiguous memory buffer
(i.e., address and length) containing the relevant data.  This feature,
in conjunction with the capability of constructing user-defined MPI
datatypes describing complicated memory layouts, enables the
implementation of many algorithms involving multidimensional numeric
arrays (e.g., image processing, fast Fourier transforms, finite
difference schemes on structured Cartesian grids) directly in Python,
with negligible overhead, and almost as fast as compiled Fortran, C, or
C++ codes.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pickle.html#module-pickle

   (2) https://docs.python.org/3/library/marshal.html#module-marshal

   (3) https://docs.python.org/3/library/pickle.html#module-pickle


File: mpi4py.info,  Node: Communicators,  Next: Point-to-Point Communications,  Prev: Communicating Python Objects and Array Data,  Up: Overview

2.2 Communicators
=================

In 'MPI for Python', *note Comm: 1e. is the base class of communicators.
The *note Intracomm: 1f. and *note Intercomm: 20. classes are subclasses
of the *note Comm: 1e. class.  The *note Comm.Is_inter: 21. method (and
*note Comm.Is_intra: 22, provided for convenience but not part of the
MPI specification) is defined for communicator objects and can be used
to determine the particular communicator class.

The two predefined intracommunicator instances are available: *note
COMM_SELF: 23. and *note COMM_WORLD: 24.  From them, new communicators
can be created as needed.

The number of processes in a communicator and the calling process rank
can be respectively obtained with methods *note Comm.Get_size: 25. and
*note Comm.Get_rank: 26.  The associated process group can be retrieved
from a communicator by calling the *note Comm.Get_group: 27. method,
which returns an instance of the *note Group: 28. class.  Set operations
with *note Group: 28. objects like like *note Group.Union: 29, *note
Group.Intersection: 2a. and *note Group.Difference: 2b. are fully
supported, as well as the creation of new communicators from these
groups using *note Comm.Create: 2c. and *note Intracomm.Create_group:
2d.

New communicator instances can be obtained with the *note Comm.Clone:
2e, *note Comm.Dup: 2f. and *note Comm.Split: 30. methods, as well
methods *note Intracomm.Create_intercomm: 31. and *note Intercomm.Merge:
32.

Virtual topologies (*note Cartcomm: 33, *note Graphcomm: 34. and *note
Distgraphcomm: 35. classes, which are specializations of the *note
Intracomm: 1f. class) are fully supported.  New instances can be
obtained from intracommunicator instances with factory methods *note
Intracomm.Create_cart: 36. and *note Intracomm.Create_graph: 37.


File: mpi4py.info,  Node: Point-to-Point Communications,  Next: Collective Communications,  Prev: Communicators,  Up: Overview

2.3 Point-to-Point Communications
=================================

Point to point communication is a fundamental capability of message
passing systems.  This mechanism enables the transmission of data
between a pair of processes, one side sending, the other receiving.

MPI provides a set of 'send' and 'receive' functions allowing the
communication of 'typed' data with an associated 'tag'.  The type
information enables the conversion of data representation from one
architecture to another in the case of heterogeneous computing
environments; additionally, it allows the representation of
non-contiguous data layouts and user-defined datatypes, thus avoiding
the overhead of (otherwise unavoidable) packing/unpacking operations.
The tag information allows selectivity of messages at the receiving end.

* Menu:

* Blocking Communications::
* Nonblocking Communications::
* Persistent Communications::


File: mpi4py.info,  Node: Blocking Communications,  Next: Nonblocking Communications,  Up: Point-to-Point Communications

2.3.1 Blocking Communications
-----------------------------

MPI provides basic send and receive functions that are 'blocking'.
These functions block the caller until the data buffers involved in the
communication can be safely reused by the application program.

In 'MPI for Python', the *note Comm.Send: 3a, *note Comm.Recv: 3b. and
*note Comm.Sendrecv: 3c. methods of communicator objects provide support
for blocking point-to-point communications within *note Intracomm: 1f.
and *note Intercomm: 20. instances.  These methods can communicate
memory buffers.  The variants *note Comm.send: 3d, *note Comm.recv: 3e.
and *note Comm.sendrecv: 3f. can communicate general Python objects.


File: mpi4py.info,  Node: Nonblocking Communications,  Next: Persistent Communications,  Prev: Blocking Communications,  Up: Point-to-Point Communications

2.3.2 Nonblocking Communications
--------------------------------

On many systems, performance can be significantly increased by
overlapping communication and computation.  This is particularly true on
systems where communication can be executed autonomously by an
intelligent, dedicated communication controller.

MPI provides 'nonblocking' send and receive functions.  They allow the
possible overlap of communication and computation.  Non-blocking
communication always come in two parts: posting functions, which begin
the requested operation; and test-for-completion functions, which allow
to discover whether the requested operation has completed.

In 'MPI for Python', the *note Comm.Isend: 41. and *note Comm.Irecv: 42.
methods initiate send and receive operations, respectively.  These
methods return a *note Request: 43. instance, uniquely identifying the
started operation.  Its completion can be managed using the *note
Request.Test: 44, *note Request.Wait: 45. and *note Request.Cancel: 46.
methods.  The management of *note Request: 43. objects and associated
memory buffers involved in communication requires a careful, rather
low-level coordination.  Users must ensure that objects exposing their
memory buffers are not accessed at the Python level while they are
involved in nonblocking message-passing operations.


File: mpi4py.info,  Node: Persistent Communications,  Prev: Nonblocking Communications,  Up: Point-to-Point Communications

2.3.3 Persistent Communications
-------------------------------

Often a communication with the same argument list is repeatedly executed
within an inner loop.  In such cases, communication can be further
optimized by using persistent communication, a particular case of
nonblocking communication allowing the reduction of the overhead between
processes and communication controllers.  Furthermore , this kind of
optimization can also alleviate the extra call overheads associated to
interpreted, dynamic languages like Python.

In 'MPI for Python', the *note Comm.Send_init: 48. and *note
Comm.Recv_init: 49. methods create persistent requests for a send and
receive operation, respectively.  These methods return an instance of
the *note Prequest: 4a. class, a subclass of the *note Request: 43.
class.  The actual communication can be effectively started using the
*note Prequest.Start: 4b. method, and its completion can be managed as
previously described.


File: mpi4py.info,  Node: Collective Communications,  Next: Support for GPU-aware MPI,  Prev: Point-to-Point Communications,  Up: Overview

2.4 Collective Communications
=============================

Collective communications allow the transmittal of data between multiple
processes of a group simultaneously.  The syntax and semantics of
collective functions is consistent with point-to-point communication.
Collective functions communicate 'typed' data, but messages are not
paired with an associated 'tag'; selectivity of messages is implied in
the calling order.  Additionally, collective functions come in blocking
versions only.

The more commonly used collective communication operations are the
following.

   * Barrier synchronization across all group members.

   * Global communication functions

        + Broadcast data from one member to all members of a group.

        + Gather data from all members to one member of a group.

        + Scatter data from one member to all members of a group.

   * Global reduction operations such as sum, maximum, minimum, etc.

In 'MPI for Python', the *note Comm.Bcast: 4d, *note Comm.Scatter: 4e,
*note Comm.Gather: 4f, *note Comm.Allgather: 50, *note Comm.Alltoall:
51. methods provide support for collective communications of memory
buffers.  The lower-case variants *note Comm.bcast: 52, *note
Comm.scatter: 53, *note Comm.gather: 54, *note Comm.allgather: 55. and
*note Comm.alltoall: 56. can communicate general Python objects.  The
vector variants (which can communicate different amounts of data to each
process) *note Comm.Scatterv: 57, *note Comm.Gatherv: 58, *note
Comm.Allgatherv: 59, *note Comm.Alltoallv: 5a. and *note Comm.Alltoallw:
5b. are also supported, they can only communicate objects exposing
memory buffers.

Global reduction operations on memory buffers are accessible through the
*note Comm.Reduce: 5c, *note Comm.Reduce_scatter: 5d, *note
Comm.Allreduce: 5e, *note Intracomm.Scan: 5f. and *note
Intracomm.Exscan: 60. methods.  The lower-case variants *note
Comm.reduce: 61, *note Comm.allreduce: 62, *note Intracomm.scan: 63. and
*note Intracomm.exscan: 64. can communicate general Python objects;
however, the actual required reduction computations are performed
sequentially at some process.  All the predefined (i.e., *note SUM: 65,
*note PROD: 66, *note MAX: 67, etc.)  reduction operations can be
applied.


File: mpi4py.info,  Node: Support for GPU-aware MPI,  Next: Dynamic Process Management,  Prev: Collective Communications,  Up: Overview

2.5 Support for GPU-aware MPI
=============================

Several MPI implementations, including Open MPI and MVAPICH, support
passing GPU pointers to MPI calls to avoid explicit data movement
between host and device.  On the Python side, support for handling GPU
arrays have been implemented in many libraries related GPU computation
such as CuPy(1), Numba(2), PyTorch(3), and PyArrow(4).  To maximize
interoperability across library boundaries, two kinds of zero-copy data
exchange protocols have been defined and agreed upon: DLPack(5) and CUDA
Array Interface (CAI)(6).

'MPI for Python' provides an experimental support for GPU-aware MPI.
This feature requires:

  1. mpi4py is built against a GPU-aware MPI library.

  2. The Python GPU arrays are compliant with either of the protocols.

See the *note Tutorial: 69. section for further information.  We note
that

   * Whether or not a MPI call can work for GPU arrays depends on the
     underlying MPI implementation, not on mpi4py.

   * This support is currently experimental and subject to change in the
     future.

   ---------- Footnotes ----------

   (1) https://cupy.dev/

   (2) https://numba.pydata.org/

   (3) https://pytorch.org/

   (4) https://arrow.apache.org/docs/python/

   (5) https://dmlc.github.io/dlpack/latest/python_spec.html#python-spec

   (6) 
https://numba.readthedocs.io/en/stable/cuda/cuda_array_interface.html#cuda-array-interface


File: mpi4py.info,  Node: Dynamic Process Management,  Next: One-Sided Communications,  Prev: Support for GPU-aware MPI,  Up: Overview

2.6 Dynamic Process Management
==============================

In the context of the MPI-1 specification, a parallel application is
static; that is, no processes can be added to or deleted from a running
application after it has been started.  Fortunately, this limitation was
addressed in MPI-2.  The new specification added a process management
model providing a basic interface between an application and external
resources and process managers.

This MPI-2 extension can be really useful, especially for sequential
applications built on top of parallel modules, or parallel applications
with a client/server model.  The MPI-2 process model provides a
mechanism to create new processes and establish communication between
them and the existing MPI application.  It also provides mechanisms to
establish communication between two existing MPI applications, even when
one did not 'start' the other.

In 'MPI for Python', new independent process groups can be created by
calling the *note Intracomm.Spawn: 6b. method within an
intracommunicator.  This call returns a new intercommunicator (i.e., an
*note Intercomm: 20. instance) at the parent process group.  The child
process group can retrieve the matching intercommunicator by calling the
*note Comm.Get_parent: 6c. class method.  At each side, the new
intercommunicator can be used to perform point to point and collective
communications between the parent and child groups of processes.

Alternatively, disjoint groups of processes can establish communication
using a client/server approach.  Any server application must first call
the *note Open_port: 6d. function to open a 'port' and the *note
Publish_name: 6e. function to publish a provided 'service', and next
call the *note Intracomm.Accept: 6f. method.  Any client applications
can first find a published 'service' by calling the *note Lookup_name:
70. function, which returns the 'port' where a server can be contacted;
and next call the *note Intracomm.Connect: 71. method.  Both *note
Intracomm.Accept: 6f. and *note Intracomm.Connect: 71. methods return an
*note Intercomm: 20. instance.  When connection between client/server
processes is no longer needed, all of them must cooperatively call the
*note Comm.Disconnect: 72. method.  Additionally, server applications
should release resources by calling the *note Unpublish_name: 73. and
*note Close_port: 74. functions.


File: mpi4py.info,  Node: One-Sided Communications,  Next: Parallel Input/Output,  Prev: Dynamic Process Management,  Up: Overview

2.7 One-Sided Communications
============================

One-sided communications (also called 'Remote Memory Access', 'RMA')
supplements the traditional two-sided, send/receive based MPI
communication model with a one-sided, put/get based interface.
One-sided communication that can take advantage of the capabilities of
highly specialized network hardware.  Additionally, this extension
lowers latency and software overhead in applications written using a
shared-memory-like paradigm.

The MPI specification revolves around the use of objects called
'windows'; they intuitively specify regions of a process’s memory that
have been made available for remote read and write operations.  The
published memory blocks can be accessed through three functions for put
(remote send), get (remote write), and accumulate (remote update or
reduction) data items.  A much larger number of functions support
different synchronization styles; the semantics of these synchronization
operations are fairly complex.

In 'MPI for Python', one-sided operations are available by using
instances of the *note Win: 76. class.  New window objects are created
by calling the *note Win.Create: 77. method at all processes within a
communicator and specifying a memory buffer .  When a window instance is
no longer needed, the *note Win.Free: 78. method should be called.

The three one-sided MPI operations for remote write, read and reduction
are available through calling the methods *note Win.Put: 79, *note
Win.Get: 7a, and *note Win.Accumulate: 7b. respectively within a *note
Win: 76. instance.  These methods need an integer rank identifying the
target process and an integer offset relative the base address of the
remote memory block being accessed.

The one-sided operations read, write, and reduction are implicitly
nonblocking, and must be synchronized by using two primary modes.
Active target synchronization requires the origin process to call the
*note Win.Start: 7c. and *note Win.Complete: 7d. methods at the origin
process, and target process cooperates by calling the *note Win.Post:
7e. and *note Win.Wait: 7f. methods.  There is also a collective variant
provided by the *note Win.Fence: 80. method.  Passive target
synchronization is more lenient, only the origin process calls the *note
Win.Lock: 81. and *note Win.Unlock: 82. methods.  Locks are used to
protect remote accesses to the locked remote window and to protect local
load/store accesses to a locked local window.


File: mpi4py.info,  Node: Parallel Input/Output,  Next: Environmental Management,  Prev: One-Sided Communications,  Up: Overview

2.8 Parallel Input/Output
=========================

The POSIX standard provides a model of a widely portable file system.
However, the optimization needed for parallel input/output cannot be
achieved with this generic interface.  In order to ensure efficiency and
scalability, the underlying parallel input/output system must provide a
high-level interface supporting partitioning of file data among
processes and a collective interface supporting complete transfers of
global data structures between process memories and files.
Additionally, further efficiencies can be gained via support for
asynchronous input/output, strided accesses to data, and control over
physical file layout on storage devices.  This scenario motivated the
inclusion in the MPI-2 standard of a custom interface in order to
support more elaborated parallel input/output operations.

The MPI specification for parallel input/output revolves around the use
objects called 'files'.  As defined by MPI, files are not just
contiguous byte streams.  Instead, they are regarded as ordered
collections of 'typed' data items.  MPI supports sequential or random
access to any integral set of these items.  Furthermore, files are
opened collectively by a group of processes.

The common patterns for accessing a shared file (broadcast, scatter,
gather, reduction) is expressed by using user-defined datatypes.
Compared to the communication patterns of point-to-point and collective
communications, this approach has the advantage of added flexibility and
expressiveness.  Data access operations (read and write) are defined for
different kinds of positioning (using explicit offsets, individual file
pointers, and shared file pointers), coordination (non-collective and
collective), and synchronism (blocking, nonblocking, and split
collective with begin/end phases).

In 'MPI for Python', all MPI input/output operations are performed
through instances of the *note File: 84. class.  File handles are
obtained by calling the *note File.Open: 85. method at all processes
within a communicator and providing a file name and the intended access
mode.  After use, they must be closed by calling the *note File.Close:
86. method.  Files even can be deleted by calling method *note
File.Delete: 87.

After creation, files are typically associated with a per-process
'view'.  The view defines the current set of data visible and accessible
from an open file as an ordered set of elementary datatypes.  This data
layout can be set and queried with the *note File.Set_view: 88. and
*note File.Get_view: 89. methods respectively.

Actual input/output operations are achieved by many methods combining
read and write calls with different behavior regarding positioning,
coordination, and synchronism.  Summing up, 'MPI for Python' provides
the thirty (30) methods defined in MPI-2 for reading from or writing to
files using explicit offsets or file pointers (individual or shared), in
blocking or nonblocking and collective or noncollective versions.


File: mpi4py.info,  Node: Environmental Management,  Prev: Parallel Input/Output,  Up: Overview

2.9 Environmental Management
============================

* Menu:

* Initialization and Exit::
* Implementation Information::
* Timers::
* Error Handling::


File: mpi4py.info,  Node: Initialization and Exit,  Next: Implementation Information,  Up: Environmental Management

2.9.1 Initialization and Exit
-----------------------------

Module functions *note Init: 8c. or *note Init_thread: 8d. and *note
Finalize: 8e. provide MPI initialization and finalization respectively.
Module functions *note Is_initialized: 8f. and *note Is_finalized: 90.
provide the respective tests for initialization and finalization.

     Note: ‘MPI_Init()’ or ‘MPI_Init_thread()’ is actually called when
     you import the *note MPI: 3. module from the *note mpi4py: 0.
     package, but only if MPI is not already initialized.  In such case,
     calling *note Init: 8c. or *note Init_thread: 8d. from Python is
     expected to generate an MPI error, and in turn an exception will be
     raised.

     Note: ‘MPI_Finalize()’ is registered (by using Python C/API
     function Py_AtExit()(1)) for being automatically called when Python
     processes exit, but only if *note mpi4py: 0. actually initialized
     MPI. Therefore, there is no need to call *note Finalize: 8e. from
     Python to ensure MPI finalization.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/c-api/sys.html#c.Py_AtExit


File: mpi4py.info,  Node: Implementation Information,  Next: Timers,  Prev: Initialization and Exit,  Up: Environmental Management

2.9.2 Implementation Information
--------------------------------

   * The MPI version number can be retrieved from module function *note
     Get_version: 92.  It returns a two-integer tuple ‘(version,
     subversion)’.

   * The *note Get_processor_name: 93. function can be used to access
     the processor name.

   * The values of predefined attributes attached to the world
     communicator can be obtained by calling the *note Comm.Get_attr:
     94. method within the *note COMM_WORLD: 24. instance.


File: mpi4py.info,  Node: Timers,  Next: Error Handling,  Prev: Implementation Information,  Up: Environmental Management

2.9.3 Timers
------------

MPI timer functionalities are available through the *note Wtime: 96. and
*note Wtick: 97. functions.


File: mpi4py.info,  Node: Error Handling,  Prev: Timers,  Up: Environmental Management

2.9.4 Error Handling
--------------------

In order to facilitate handle sharing with other Python modules
interfacing MPI-based parallel libraries, the predefined MPI error
handlers *note ERRORS_RETURN: 99. and *note ERRORS_ARE_FATAL: 9a. can be
assigned to and retrieved from communicators using methods *note
Comm.Set_errhandler: 9b. and *note Comm.Get_errhandler: 9c, and
similarly for windows and files.  New custom error handlers can be
created with *note Comm.Create_errhandler: 9d.

When the predefined error handler *note ERRORS_RETURN: 99. is set,
errors returned from MPI calls within Python code will raise an instance
of the exception class *note Exception: 9e, which is a subclass of the
standard Python exception RuntimeError(1).

     Note: After import, mpi4py overrides the default MPI rules
     governing inheritance of error handlers.  The *note ERRORS_RETURN:
     99. error handler is set in the predefined *note COMM_SELF: 23. and
     *note COMM_WORLD: 24. communicators, as well as any new *note Comm:
     1e, *note Win: 76, or *note File: 84. instance created through
     mpi4py.  If you ever pass such handles to C/C++/Fortran library
     code, it is recommended to set the *note ERRORS_ARE_FATAL: 9a.
     error handler on them to ensure MPI errors do not pass silently.

     Warning: Importing with ‘from mpi4py.MPI import *’ will cause a
     name clashing with the standard Python Exception(2) base class.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (2) https://docs.python.org/3/library/exceptions.html#Exception


File: mpi4py.info,  Node: Tutorial,  Next: mpi4py,  Prev: Overview,  Up: Top

3 Tutorial
**********

     Warning: Under construction.  Contributions very welcome!

     Tip: Rolf Rabenseifner(1) at HLRS(2) developed a comprehensive
     MPI-3.1/4.0 course with slides and a large set of exercises
     including solutions.  This material is available online(3) for
     self-study.  The slides and exercises show the C, Fortran, and
     Python (mpi4py) interfaces.  For performance reasons, most Python
     exercises use NumPy arrays and communication routines involving
     buffer-like objects.

     Tip: Victor Eijkhout(4) at TACC(5) authored the book 'Parallel
     Programming for Science and Engineering'.  This book is available
     online(6) in PDF and HTML(7) formats.  The book covers parallel
     programming with MPI and OpenMP in C/C++ and Fortran, and MPI in
     Python using mpi4py.

'MPI for Python' supports convenient, 'pickle'-based communication of
generic Python object as well as fast, near C-speed, direct array data
communication of buffer-provider objects (e.g., NumPy arrays).

   * Communication of generic Python objects

     You have to use methods with 'all-lowercase' names, like *note
     Comm.send: 3d, *note Comm.recv: 3e, *note Comm.bcast: 52, *note
     Comm.scatter: 53, *note Comm.gather: 54. .  An object to be sent is
     passed as a parameter to the communication call, and the received
     object is simply the return value.

     The *note Comm.isend: a1. and *note Comm.irecv: a2. methods return
     *note Request: 43. instances; completion of these methods can be
     managed using the *note Request.test: a3. and *note Request.wait:
     a4. methods.

     The *note Comm.recv: 3e. and *note Comm.irecv: a2. methods may be
     passed a buffer object that can be repeatedly used to receive
     messages avoiding internal memory allocation.  This buffer must be
     sufficiently large to accommodate the transmitted messages; hence,
     any buffer passed to *note Comm.recv: 3e. or *note Comm.irecv: a2.
     must be at least as long as the 'pickled' data transmitted to the
     receiver.

     Collective calls like *note Comm.scatter: 53, *note Comm.gather:
     54, *note Comm.allgather: 55, *note Comm.alltoall: 56. expect a
     single value or a sequence of *note Comm.size: a5. elements at the
     root or all process.  They return a single value, a list of *note
     Comm.size: a5. elements, or None(8).

          Note: 'MPI for Python' uses the 'highest' protocol version(9)
          available in the Python runtime (see the HIGHEST_PROTOCOL(10)
          constant in the pickle(11) module).  The default protocol can
          be changed at import time by setting the *note
          MPI4PY_PICKLE_PROTOCOL: a6. environment variable, or at
          runtime by assigning a different value to the *note PROTOCOL:
          a7. attribute of the *note pickle: a8. object within the *note
          MPI: 3. module.

   * Communication of buffer-like objects

     You have to use method names starting with an 'upper-case' letter,
     like *note Comm.Send: 3a, *note Comm.Recv: 3b, *note Comm.Bcast:
     4d, *note Comm.Scatter: 4e, *note Comm.Gather: 4f.

     In general, buffer arguments to these calls must be explicitly
     specified by using a 2/3-list/tuple like ‘[data, MPI.DOUBLE]’, or
     ‘[data, count, MPI.DOUBLE]’ (the former one uses the byte-size of
     ‘data’ and the extent of the MPI datatype to define ‘count’).

     For vector collectives communication operations like *note
     Comm.Scatterv: 57. and *note Comm.Gatherv: 58, buffer arguments are
     specified as ‘[data, count, displ, datatype]’, where ‘count’ and
     ‘displ’ are sequences of integral values.

     Automatic MPI datatype discovery for NumPy/GPU arrays and PEP-3118
     buffers is supported, but limited to basic C types (all
     C/C99-native signed/unsigned integral types and single/double
     precision real/complex floating types) and availability of matching
     datatypes in the underlying MPI implementation.  In this case, the
     buffer-provider object can be passed directly as a buffer argument,
     the count and MPI datatype will be inferred.

     If mpi4py is built against a GPU-aware MPI implementation, GPU
     arrays can be passed to upper-case methods as long as they have
     either the ‘__dlpack__’ and ‘__dlpack_device__’ methods or the
     ‘__cuda_array_interface__’ attribute that are compliant with the
     respective standard specifications.  Moreover, only C-contiguous or
     Fortran-contiguous GPU arrays are supported.  It is important to
     note that GPU buffers must be fully ready before any MPI routines
     operate on them to avoid race conditions.  This can be ensured by
     using the synchronization API of your array library.  mpi4py does
     not have access to any GPU-specific functionality and thus cannot
     perform this operation automatically for users.

* Menu:

* Running Python scripts with MPI::
* Point-to-Point Communication::
* Collective Communication::
* Input/Output (MPI-IO): Input/Output MPI-IO.
* Dynamic Process Management: Dynamic Process Management<2>.
* GPU-aware MPI + Python GPU arrays::
* One-Sided Communication (RMA): One-Sided Communication RMA.
* Wrapping with SWIG::
* Wrapping with F2Py::

   ---------- Footnotes ----------

   (1) https://www.hlrs.de/people/rolf-rabenseifner

   (2) https://www.hlrs.de/

   (3) 
https://www.hlrs.de/training/self-study-materials/mpi-course-material

   (4) https://tacc.utexas.edu/about/staff-directory/victor-eijkhout

   (5) https://tacc.utexas.edu/

   (6) https://theartofhpc.com/pcse.html

   (7) https://theartofhpc.com/pcse/index.html

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/pickle.html#pickle-protocols

   (10) 
https://docs.python.org/3/library/pickle.html#pickle.HIGHEST_PROTOCOL

   (11) https://docs.python.org/3/library/pickle.html#module-pickle


File: mpi4py.info,  Node: Running Python scripts with MPI,  Next: Point-to-Point Communication,  Up: Tutorial

3.1 Running Python scripts with MPI
===================================

Most MPI programs can be run with the command ‘mpiexec’.  In practice,
running Python programs looks like:

     $ mpiexec -n 4 python script.py

to run the program with 4 processors.


File: mpi4py.info,  Node: Point-to-Point Communication,  Next: Collective Communication,  Prev: Running Python scripts with MPI,  Up: Tutorial

3.2 Point-to-Point Communication
================================

   * Python objects (pickle(1) under the hood):

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = {'a': 7, 'b': 3.14}
              comm.send(data, dest=1, tag=11)
          elif rank == 1:
              data = comm.recv(source=0, tag=11)

   * Python objects with non-blocking communication:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = {'a': 7, 'b': 3.14}
              req = comm.isend(data, dest=1, tag=11)
              req.wait()
          elif rank == 1:
              req = comm.irecv(source=0, tag=11)
              data = req.wait()

   * NumPy arrays (the fast way!):

          from mpi4py import MPI
          import numpy

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          # passing MPI datatypes explicitly
          if rank == 0:
              data = numpy.arange(1000, dtype='i')
              comm.Send([data, MPI.INT], dest=1, tag=77)
          elif rank == 1:
              data = numpy.empty(1000, dtype='i')
              comm.Recv([data, MPI.INT], source=0, tag=77)

          # automatic MPI datatype discovery
          if rank == 0:
              data = numpy.arange(100, dtype=numpy.float64)
              comm.Send(data, dest=1, tag=13)
          elif rank == 1:
              data = numpy.empty(100, dtype=numpy.float64)
              comm.Recv(data, source=0, tag=13)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pickle.html#module-pickle


File: mpi4py.info,  Node: Collective Communication,  Next: Input/Output MPI-IO,  Prev: Point-to-Point Communication,  Up: Tutorial

3.3 Collective Communication
============================

   * Broadcasting a Python dictionary:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = {'key1' : [7, 2.72, 2+3j],
                      'key2' : ( 'abc', 'xyz')}
          else:
              data = None
          data = comm.bcast(data, root=0)

   * Scattering Python objects:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          if rank == 0:
              data = [(i+1)**2 for i in range(size)]
          else:
              data = None
          data = comm.scatter(data, root=0)
          assert data == (rank+1)**2

   * Gathering Python objects:

          from mpi4py import MPI

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          data = (rank+1)**2
          data = comm.gather(data, root=0)
          if rank == 0:
              for i in range(size):
                  assert data[i] == (i+1)**2
          else:
              assert data is None

   * Broadcasting a NumPy array:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          if rank == 0:
              data = np.arange(100, dtype='i')
          else:
              data = np.empty(100, dtype='i')
          comm.Bcast(data, root=0)
          for i in range(100):
              assert data[i] == i

   * Scattering NumPy arrays:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          sendbuf = None
          if rank == 0:
              sendbuf = np.empty([size, 100], dtype='i')
              sendbuf.T[:,:] = range(size)
          recvbuf = np.empty(100, dtype='i')
          comm.Scatter(sendbuf, recvbuf, root=0)
          assert np.allclose(recvbuf, rank)

   * Gathering NumPy arrays:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          sendbuf = np.zeros(100, dtype='i') + rank
          recvbuf = None
          if rank == 0:
              recvbuf = np.empty([size, 100], dtype='i')
          comm.Gather(sendbuf, recvbuf, root=0)
          if rank == 0:
              for i in range(size):
                  assert np.allclose(recvbuf[i,:], i)

   * Parallel matrix-vector product:

          from mpi4py import MPI
          import numpy

          def matvec(comm, A, x):
              m = A.shape[0] # local rows
              p = comm.Get_size()
              xg = numpy.zeros(m*p, dtype='d')
              comm.Allgather([x,  MPI.DOUBLE],
                             [xg, MPI.DOUBLE])
              y = numpy.dot(A, xg)
              return y


File: mpi4py.info,  Node: Input/Output MPI-IO,  Next: Dynamic Process Management<2>,  Prev: Collective Communication,  Up: Tutorial

3.4 Input/Output (MPI-IO)
=========================

   * Collective I/O with NumPy arrays:

          from mpi4py import MPI
          import numpy as np

          amode = MPI.MODE_WRONLY|MPI.MODE_CREATE
          comm = MPI.COMM_WORLD
          fh = MPI.File.Open(comm, "./datafile.contig", amode)

          buffer = np.empty(10, dtype=np.int)
          buffer[:] = comm.Get_rank()

          offset = comm.Get_rank()*buffer.nbytes
          fh.Write_at_all(offset, buffer)

          fh.Close()

   * Non-contiguous Collective I/O with NumPy arrays and datatypes:

          from mpi4py import MPI
          import numpy as np

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()
          size = comm.Get_size()

          amode = MPI.MODE_WRONLY|MPI.MODE_CREATE
          fh = MPI.File.Open(comm, "./datafile.noncontig", amode)

          item_count = 10

          buffer = np.empty(item_count, dtype='i')
          buffer[:] = rank

          filetype = MPI.INT.Create_vector(item_count, 1, size)
          filetype.Commit()

          displacement = MPI.INT.Get_size()*rank
          fh.Set_view(displacement, filetype=filetype)

          fh.Write_all(buffer)
          filetype.Free()
          fh.Close()


File: mpi4py.info,  Node: Dynamic Process Management<2>,  Next: GPU-aware MPI + Python GPU arrays,  Prev: Input/Output MPI-IO,  Up: Tutorial

3.5 Dynamic Process Management
==============================

   * Compute Pi - Master (or parent, or client) side:

          #!/usr/bin/env python
          from mpi4py import MPI
          import numpy
          import sys

          comm = MPI.COMM_SELF.Spawn(sys.executable,
                                     args=['cpi.py'],
                                     maxprocs=5)

          N = numpy.array(100, 'i')
          comm.Bcast([N, MPI.INT], root=MPI.ROOT)
          PI = numpy.array(0.0, 'd')
          comm.Reduce(None, [PI, MPI.DOUBLE],
                      op=MPI.SUM, root=MPI.ROOT)
          print(PI)

          comm.Disconnect()

   * Compute Pi - Worker (or child, or server) side:

          #!/usr/bin/env python
          from mpi4py import MPI
          import numpy

          comm = MPI.Comm.Get_parent()
          size = comm.Get_size()
          rank = comm.Get_rank()

          N = numpy.array(0, dtype='i')
          comm.Bcast([N, MPI.INT], root=0)
          h = 1.0 / N; s = 0.0
          for i in range(rank, N, size):
              x = h * (i + 0.5)
              s += 4.0 / (1.0 + x**2)
          PI = numpy.array(s * h, dtype='d')
          comm.Reduce([PI, MPI.DOUBLE], None,
                      op=MPI.SUM, root=0)

          comm.Disconnect()


File: mpi4py.info,  Node: GPU-aware MPI + Python GPU arrays,  Next: One-Sided Communication RMA,  Prev: Dynamic Process Management<2>,  Up: Tutorial

3.6 GPU-aware MPI + Python GPU arrays
=====================================

   * Reduce-to-all CuPy arrays:

          from mpi4py import MPI
          import cupy as cp

          comm = MPI.COMM_WORLD
          size = comm.Get_size()
          rank = comm.Get_rank()

          sendbuf = cp.arange(10, dtype='i')
          recvbuf = cp.empty_like(sendbuf)
          cp.cuda.get_current_stream().synchronize()
          comm.Allreduce(sendbuf, recvbuf)

          assert cp.allclose(recvbuf, sendbuf*size)


File: mpi4py.info,  Node: One-Sided Communication RMA,  Next: Wrapping with SWIG,  Prev: GPU-aware MPI + Python GPU arrays,  Up: Tutorial

3.7 One-Sided Communication (RMA)
=================================

   * Read from (write to) the entire RMA window:

          import numpy as np
          from mpi4py import MPI
          from mpi4py.util import dtlib

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          datatype = MPI.FLOAT
          np_dtype = dtlib.to_numpy_dtype(datatype)
          itemsize = datatype.Get_size()

          N = 10
          win_size = N * itemsize if rank == 0 else 0
          win = MPI.Win.Allocate(win_size, comm=comm)

          buf = np.empty(N, dtype=np_dtype)
          if rank == 0:
              buf.fill(42)
              win.Lock(rank=0)
              win.Put(buf, target_rank=0)
              win.Unlock(rank=0)
              comm.Barrier()
          else:
              comm.Barrier()
              win.Lock(rank=0)
              win.Get(buf, target_rank=0)
              win.Unlock(rank=0)
              assert np.all(buf == 42)

   * Accessing a part of the RMA window using the ‘target’ argument,
     which is defined as ‘(offset, count, datatype)’:

          import numpy as np
          from mpi4py import MPI
          from mpi4py.util import dtlib

          comm = MPI.COMM_WORLD
          rank = comm.Get_rank()

          datatype = MPI.FLOAT
          np_dtype = dtlib.to_numpy_dtype(datatype)
          itemsize = datatype.Get_size()

          N = comm.Get_size() + 1
          win_size = N * itemsize if rank == 0 else 0
          win = MPI.Win.Allocate(
              size=win_size,
              disp_unit=itemsize,
              comm=comm,
          )
          if rank == 0:
              mem = np.frombuffer(win, dtype=np_dtype)
              mem[:] = np.arange(len(mem), dtype=np_dtype)
          comm.Barrier()

          buf = np.zeros(3, dtype=np_dtype)
          target = (rank, 2, datatype)
          win.Lock(rank=0)
          win.Get(buf, target_rank=0, target=target)
          win.Unlock(rank=0)
          assert np.all(buf == [rank, rank+1, 0])


File: mpi4py.info,  Node: Wrapping with SWIG,  Next: Wrapping with F2Py,  Prev: One-Sided Communication RMA,  Up: Tutorial

3.8 Wrapping with SWIG
======================

   * C source:

          /* file: helloworld.c */
          void sayhello(MPI_Comm comm)
          {
            int size, rank;
            MPI_Comm_size(comm, &size);
            MPI_Comm_rank(comm, &rank);
            printf("Hello, World! "
                   "I am process %d of %d.\n",
                   rank, size);
          }

   * SWIG interface file:

          // file: helloworld.i
          %module helloworld
          %{
          #include <mpi.h>
          #include "helloworld.c"
          }%

          %include mpi4py/mpi4py.i
          %mpi4py_typemap(Comm, MPI_Comm);
          void sayhello(MPI_Comm comm);

   * Try it in the Python prompt:

          >>> from mpi4py import MPI
          >>> import helloworld
          >>> helloworld.sayhello(MPI.COMM_WORLD)
          Hello, World! I am process 0 of 1.


File: mpi4py.info,  Node: Wrapping with F2Py,  Prev: Wrapping with SWIG,  Up: Tutorial

3.9 Wrapping with F2Py
======================

   * Fortran 90 source:

          ! file: helloworld.f90
          subroutine sayhello(comm)
            use mpi
            implicit none
            integer :: comm, rank, size, ierr
            call MPI_Comm_size(comm, size, ierr)
            call MPI_Comm_rank(comm, rank, ierr)
            print *, 'Hello, World! I am process ',rank,' of ',size,'.'
          end subroutine sayhello

   * Compiling example using f2py

          $ f2py -c --f90exec=mpif90 helloworld.f90 -m helloworld

   * Try it in the Python prompt:

          >>> from mpi4py import MPI
          >>> import helloworld
          >>> fcomm = MPI.COMM_WORLD.py2f()
          >>> helloworld.sayhello(fcomm)
          Hello, World! I am process 0 of 1.


File: mpi4py.info,  Node: mpi4py,  Next: mpi4py MPI,  Prev: Tutorial,  Up: Top

4 mpi4py
********

The 'MPI for Python' package.

The 'Message Passing Interface' (MPI) is a standardized and portable
message-passing system designed to function on a wide variety of
parallel computers.  The MPI standard defines the syntax and semantics
of library routines and allows users to write portable programs in the
main scientific programming languages (Fortran, C, or C++).  Since its
release, the MPI specification has become the leading standard for
message-passing libraries for parallel computers.

'MPI for Python' provides MPI bindings for the Python programming
language, allowing any Python program to exploit multiple processors.
This package build on the MPI specification and provides an object
oriented interface which closely follows MPI-2 C++ bindings.

* Menu:

* Runtime configuration options::
* Environment variables::
* Miscellaneous functions::


File: mpi4py.info,  Node: Runtime configuration options,  Next: Environment variables,  Up: mpi4py

4.1 Runtime configuration options
=================================

 -- Data: mpi4py.rc

     This object has attributes exposing runtime configuration options
     that become effective at import time of the *note MPI: 3. module.

Attributes Summary
..................

*note initialize: b6.Automatic MPI initialization at import
                   
                   
*note threads: b7. Request initialization with thread support
                   
                   
*note thread_level: b8.Level of thread support to request
                   
                   
*note finalize: b9.Automatic MPI finalization at exit
                   
                   
*note fast_reduce: ba.Use tree-based reductions for objects
                   
                   
*note recv_mprobe: bb.Use matched probes to receive objects
                   
                   
*note irecv_bufsz: bc.Default buffer size in bytes for *note irecv(): a2.
                   
                   
*note errors: bd.  Error handling policy
                   

Attributes Documentation
........................

 -- Attribute: mpi4py.rc.initialize

     Automatic MPI initialization at import.


     Type: bool(1)


     Default: True(2)

     See also
     ........

     *note MPI4PY_RC_INITIALIZE: be.

 -- Attribute: mpi4py.rc.threads

     Request initialization with thread support.


     Type: bool(3)


     Default: True(4)

     See also
     ........

     *note MPI4PY_RC_THREADS: bf.

 -- Attribute: mpi4py.rc.thread_level

     Level of thread support to request.


     Type: str(5)


     Default: ‘"multiple"’


     Choices: ‘"multiple"’, ‘"serialized"’, ‘"funneled"’, ‘"single"’

     See also
     ........

     *note MPI4PY_RC_THREAD_LEVEL: c0.

 -- Attribute: mpi4py.rc.finalize

     Automatic MPI finalization at exit.


     Type: None(6) or bool(7)


     Default: None(8)

     See also
     ........

     *note MPI4PY_RC_FINALIZE: c1.

 -- Attribute: mpi4py.rc.fast_reduce

     Use tree-based reductions for objects.


     Type: bool(9)


     Default: True(10)

     See also
     ........

     *note MPI4PY_RC_FAST_REDUCE: c2.

 -- Attribute: mpi4py.rc.recv_mprobe

     Use matched probes to receive objects.


     Type: bool(11)


     Default: True(12)

     See also
     ........

     *note MPI4PY_RC_RECV_MPROBE: c3.

 -- Attribute: mpi4py.rc.irecv_bufsz

     Default buffer size in bytes for *note irecv(): a2.


     Type: int(13)


     Default: ‘32768’

     See also
     ........

     *note MPI4PY_RC_IRECV_BUFSZ: c4.

     Added in version 4.0.0.

 -- Attribute: mpi4py.rc.errors

     Error handling policy.


     Type: str(14)


     Default: ‘"exception"’


     Choices: ‘"exception"’, ‘"default"’, ‘"abort"’, ‘"fatal"’

     See also
     ........

     *note MPI4PY_RC_ERRORS: c5.

Example
.......

MPI for Python features automatic initialization and finalization of the
MPI execution environment.  By using the *note mpi4py.rc: b5. object,
MPI initialization and finalization can be handled programmatically:

     import mpi4py
     mpi4py.rc.initialize = False  # do not initialize MPI automatically
     mpi4py.rc.finalize = False    # do not finalize MPI automatically

     from mpi4py import MPI # import the 'MPI' module

     MPI.Init()      # manual initialization of the MPI environment
     ...             # your finest code here ...
     MPI.Finalize()  # manual finalization of the MPI environment

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool

   (2) https://docs.python.org/3/library/constants.html#True

   (3) https://docs.python.org/3/library/functions.html#bool

   (4) https://docs.python.org/3/library/constants.html#True

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/functions.html#bool

   (10) https://docs.python.org/3/library/constants.html#True

   (11) https://docs.python.org/3/library/functions.html#bool

   (12) https://docs.python.org/3/library/constants.html#True

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: Environment variables,  Next: Miscellaneous functions,  Prev: Runtime configuration options,  Up: mpi4py

4.2 Environment variables
=========================

The following environment variables override the corresponding
attributes of the *note mpi4py.rc: b5. and *note MPI.pickle: a8. objects
at import time of the *note MPI: 3. module.

     Note: For variables of boolean type, accepted values are ‘0’ and
     ‘1’ (interpreted as False(1) and True(2), respectively), and
     strings specifying a YAML boolean(3) value (case-insensitive).

 -- Environment Variable: MPI4PY_RC_INITIALIZE


     Type: bool(4)


     Default: True(5)

     Whether to automatically initialize MPI at import time of the *note
     mpi4py.MPI: 3. module.

     See also
     ........

     *note mpi4py.rc.initialize: b6.

     Added in version 4.0.0.

 -- Environment Variable: MPI4PY_RC_FINALIZE


     Type: None(6) | bool(7)


     Default: None(8)


     Choices: None(9), True(10), False(11)

     Whether to automatically finalize MPI at exit time of the Python
     process.

     See also
     ........

     *note mpi4py.rc.finalize: b9.

     Added in version 4.0.0.

 -- Environment Variable: MPI4PY_RC_THREADS


     Type: bool(12)


     Default: True(13)

     Whether to initialize MPI with thread support.

     See also
     ........

     *note mpi4py.rc.threads: b7.

     Added in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_THREAD_LEVEL


     Default: ‘"multiple"’


     Choices: ‘"single"’, ‘"funneled"’, ‘"serialized"’, ‘"multiple"’

     The level of required thread support.

     See also
     ........

     *note mpi4py.rc.thread_level: b8.

     Added in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_FAST_REDUCE


     Type: bool(14)


     Default: True(15)

     Whether to use tree-based reductions for objects.

     See also
     ........

     *note mpi4py.rc.fast_reduce: ba.

     Added in version 3.1.0.

 -- Environment Variable: MPI4PY_RC_RECV_MPROBE


     Type: bool(16)


     Default: True(17)

     Whether to use matched probes to receive objects.

     See also
     ........

     *note mpi4py.rc.recv_mprobe: bb.

 -- Environment Variable: MPI4PY_RC_IRECV_BUFSZ


     Type: int(18)


     Default: ‘32768’

     Default buffer size in bytes for *note irecv(): a2.

     See also
     ........

     *note mpi4py.rc.irecv_bufsz: bc.

     Added in version 4.0.0.

 -- Environment Variable: MPI4PY_RC_ERRORS


     Default: ‘"exception"’


     Choices: ‘"exception"’, ‘"default"’, ‘"abort"’, ‘"fatal"’

     Controls default MPI error handling policy.

     See also
     ........

     *note mpi4py.rc.errors: bd.

     Added in version 3.1.0.

 -- Environment Variable: MPI4PY_PICKLE_PROTOCOL


     Type: int(19)


     Default: pickle.HIGHEST_PROTOCOL(20)

     Controls the default pickle protocol to use when communicating
     Python objects.

     See also
     ........

     *note PROTOCOL: a7. attribute of the *note MPI.pickle: a8. object
     within the *note MPI: 3. module.

     Added in version 3.1.0.

 -- Environment Variable: MPI4PY_PICKLE_THRESHOLD


     Type: int(21)


     Default: ‘262144’

     Controls the default buffer size threshold for switching from
     in-band to out-of-band buffer handling when using pickle protocol
     version 5 or higher.

     See also
     ........

     *note THRESHOLD: c8. attribute of the *note MPI.pickle: a8. object
     within the *note MPI: 3. module.

     Added in version 3.1.2.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#False

   (2) https://docs.python.org/3/library/constants.html#True

   (3) https://yaml.org/type/bool.html

   (4) https://docs.python.org/3/library/functions.html#bool

   (5) https://docs.python.org/3/library/constants.html#True

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/constants.html#True

   (11) https://docs.python.org/3/library/constants.html#False

   (12) https://docs.python.org/3/library/functions.html#bool

   (13) https://docs.python.org/3/library/constants.html#True

   (14) https://docs.python.org/3/library/functions.html#bool

   (15) https://docs.python.org/3/library/constants.html#True

   (16) https://docs.python.org/3/library/functions.html#bool

   (17) https://docs.python.org/3/library/constants.html#True

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) 
https://docs.python.org/3/library/pickle.html#pickle.HIGHEST_PROTOCOL

   (21) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: Miscellaneous functions,  Prev: Environment variables,  Up: mpi4py

4.3 Miscellaneous functions
===========================

 -- Function: mpi4py.profile (name, *, path=None)

     Support for the MPI profiling interface.


     Parameters:

        * ‘name’ (str(1)) – Name of the profiler library to load.

        * ‘path’ (sequence(2) of str(3), 'optional') – Additional paths
          to search for the profiler.


     Return type: None(4)

 -- Function: mpi4py.get_include ()

     Return the directory in the package that contains header files.

     Extension modules that need to compile against mpi4py should use
     this function to locate the appropriate include directory.  Using
     Python distutils (or perhaps NumPy distutils):

          import mpi4py
          Extension('extension_name', ...
                    include_dirs=[..., mpi4py.get_include()])


     Return type: str(5)

 -- Function: mpi4py.get_config ()

     Return a dictionary with information about MPI.

     Changed in version 4.0.0: By default, this function returns an
     empty dictionary.  However, downstream packagers and distributors
     may alter such behavior.  To that end, MPI information must be
     provided under an ‘mpi’ section within a UTF-8 encoded INI-style
     configuration file ‘mpi.cfg’ located at the top-level package
     directory.  The configuration file is read and parsed using the
     configparser(6) module.


     Return type: dict(7)[str(8), str(9)]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/glossary.html#term-sequence

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) 
https://docs.python.org/3/library/configparser.html#module-configparser

   (7) https://docs.python.org/3/library/stdtypes.html#dict

   (8) https://docs.python.org/3/library/stdtypes.html#str

   (9) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI,  Next: mpi4py typing,  Prev: mpi4py,  Up: Top

5 mpi4py.MPI
************

* Menu:

* Classes::
* Functions::
* Attributes::


File: mpi4py.info,  Node: Classes,  Next: Functions,  Up: mpi4py MPI

5.1 Classes
===========

Ancillary
.........

*note Datatype: d0.Datatype object.
               
               
*note Status: d1.Status object.
               
               
*note Request: 43.Request handler.
               
               
*note Prequest: 4a.Persistent request handler.
               
               
*note Grequest: d2.Generalized request handler.
               
               
*note Op: d3.  Reduction operation.
               
               
*note Group: 28.Group of processes.
               
               
*note Info: d4.Info object.
               
               
*note Session: d5.Session context.
               

Communication
.............

*note Comm: 1e.Communication context.
               
               
*note Intracomm: 1f.Intracommunicator.
               
               
*note Topocomm: d6.Topology intracommunicator.
               
               
*note Cartcomm: 33.Cartesian topology intracommunicator.
               
               
*note Graphcomm: 34.General graph topology intracommunicator.
               
               
*note Distgraphcomm: 35.Distributed graph topology intracommunicator.
               
               
*note Intercomm: 20.Intercommunicator.
               
               
*note Message: d7.Matched message.
               

One-sided operations
....................

*note Win: 76. Remote memory access context.
               

Input/Output
............

*note File: 84.File I/O context.
               

Error handling
..............

*note Errhandler: d8.Error handler.
               
               
*note Exception: 9e.Exception class.
               

Auxiliary
.........

*note Pickle: d9.Pickle/unpickle Python objects.
               
               
*note buffer: da.Buffer.
               


File: mpi4py.info,  Node: Functions,  Next: Attributes,  Prev: Classes,  Up: mpi4py MPI

5.2 Functions
=============

Version inquiry
...............

*note Get_version: 92.()Obtain the version number of the MPI standard.
               
               
*note Get_library_version: dc.()Obtain the version string of the MPI library.
               

Initialization and finalization
...............................

*note Init: 8c.()Initialize the MPI execution environment.
               
               
*note Init_thread: 8d.([required])Initialize the MPI execution environment.
               
               
*note Finalize: 8e.()Terminate the MPI execution environment.
               
               
*note Is_initialized: 8f.()Indicate whether *note Init: 8c. has been called.
               
               
*note Is_finalized: 90.()Indicate whether *note Finalize: 8e. has completed.
               
               
*note Query_thread: dd.()Return the level of thread support provided by the MPI library.
               
               
*note Is_thread_main: de.()Indicate whether this thread called *note Init: 8c. or *note Init_thread: 8d.
               

Memory allocation
.................

*note Alloc_mem: df.(size[,Allocate memory for message passing and remote memory access.
info])         

*note Free_mem: e0.(mem)Free memory allocated with *note Alloc_mem: df.
               

Address manipulation
....................

*note Get_address: e1.(location)Get the address of a location in memory.
               
               
*note Aint_add: e2.(base,Return the sum of base address and displacement.
disp)          

*note Aint_diff: e3.(addr1,Return the difference between absolute addresses.
addr2)         

Timer
.....

*note Wtick: 97.()Return the resolution of *note Wtime: 96.
               
               
*note Wtime: 96.()Return an elapsed time on the calling processor.
               

Error handling
..............

*note Get_error_class: e4.(errorcode)Convert an 'error code' into an 'error class'.
               
               
*note Get_error_string: e5.(errorcode)Return the 'error string' for a given 'error class' or 'error code'.
               
               
*note Add_error_class: e6.()Add an 'error class' to the known error classes.
               
               
*note Add_error_code: e7.(errorclass)Add an 'error code' to an 'error class'.
               
               
*note Add_error_string: e8.(errorcode,Associate an 'error string' with an 'error class' or 'error code'.
string)        

*note Remove_error_class: e9.(errorclass)Remove an 'error class' from the known error classes.
               
               
*note Remove_error_code: ea.(errorcode)Remove an 'error code' from the known error codes.
               
               
*note Remove_error_string: eb.(errorcode)Remove 'error string' association from 'error class' or 'error code'.
               

Dynamic process management
..........................

*note Open_port: 6d.([info])Return an address used to connect group of processes.
               
               
*note Close_port: 74.(port_name)Close a port.
               
               
*note Publish_name: 6e.(service_name,Publish a service name.
port_name[,    
info])

*note Unpublish_name: 73.(service_name,Unpublish a service name.
port_name[,    
info])

*note Lookup_name: 70.(service_name[,Lookup a port name given a service name.
info])         

Miscellanea
...........

*note Attach_buffer: ec.(buf)Attach a user-provided buffer for sending in buffered mode.
               
               
*note Detach_buffer: ed.()Remove an existing attached buffer.
               
               
*note Flush_buffer: ee.()Block until all buffered messages have been transmitted.
               
               
*note Iflush_buffer: ef.()Nonblocking flush for buffered messages.
               
               
*note Compute_dims: f0.(nnodes,Return a balanced distribution of processes per coordinate direction.
dims)          

*note Get_processor_name: 93.()Obtain the name of the calling processor.
               
               
*note Register_datarep: f1.(datarep,Register user-defined data representations.
read_fn,       
write_fn,
...)

*note Pcontrol: f2.(level)Control profiling.
               

Utilities
.........

*note get_vendor: f3.()Information about the underlying MPI implementation.
               


File: mpi4py.info,  Node: Attributes,  Prev: Functions,  Up: mpi4py MPI

5.3 Attributes
==============

*note UNDEFINED: f5.Constant ‘UNDEFINED’ of type int(1)
               
               
*note ANY_SOURCE: f6.Constant ‘ANY_SOURCE’ of type int(2)
               
               
*note ANY_TAG: f7.Constant ‘ANY_TAG’ of type int(3)
               
               
*note PROC_NULL: f8.Constant ‘PROC_NULL’ of type int(4)
               
               
*note ROOT: f9.Constant ‘ROOT’ of type int(5)
               
               
*note BOTTOM: fa.Constant ‘BOTTOM’ of type *note BottomType: fb.
               
               
*note IN_PLACE: fc.Constant ‘IN_PLACE’ of type *note InPlaceType: fd.
               
               
*note BUFFER_AUTOMATIC: fe.Constant ‘BUFFER_AUTOMATIC’ of type *note BufferAutomaticType: ff.
               
               
*note KEYVAL_INVALID: 100.Constant ‘KEYVAL_INVALID’ of type int(6)
               
               
*note TAG_UB: 101.Constant ‘TAG_UB’ of type int(7)
               
               
*note IO: 102. Constant ‘IO’ of type int(8)
               
               
*note WTIME_IS_GLOBAL: 103.Constant ‘WTIME_IS_GLOBAL’ of type int(9)
               
               
*note UNIVERSE_SIZE: 104.Constant ‘UNIVERSE_SIZE’ of type int(10)
               
               
*note APPNUM: 105.Constant ‘APPNUM’ of type int(11)
               
               
*note LASTUSEDCODE: 106.Constant ‘LASTUSEDCODE’ of type int(12)
               
               
*note WIN_BASE: 107.Constant ‘WIN_BASE’ of type int(13)
               
               
*note WIN_SIZE: 108.Constant ‘WIN_SIZE’ of type int(14)
               
               
*note WIN_DISP_UNIT: 109.Constant ‘WIN_DISP_UNIT’ of type int(15)
               
               
*note WIN_CREATE_FLAVOR: 10a.Constant ‘WIN_CREATE_FLAVOR’ of type int(16)
               
               
*note WIN_FLAVOR: 10b.Constant ‘WIN_FLAVOR’ of type int(17)
               
               
*note WIN_MODEL: 10c.Constant ‘WIN_MODEL’ of type int(18)
               
               
*note SUCCESS: 10d.Constant ‘SUCCESS’ of type int(19)
               
               
*note ERR_LASTCODE: 10e.Constant ‘ERR_LASTCODE’ of type int(20)
               
               
*note ERR_COMM: 10f.Constant ‘ERR_COMM’ of type int(21)
               
               
*note ERR_GROUP: 110.Constant ‘ERR_GROUP’ of type int(22)
               
               
*note ERR_TYPE: 111.Constant ‘ERR_TYPE’ of type int(23)
               
               
*note ERR_REQUEST: 112.Constant ‘ERR_REQUEST’ of type int(24)
               
               
*note ERR_OP: 113.Constant ‘ERR_OP’ of type int(25)
               
               
*note ERR_ERRHANDLER: 114.Constant ‘ERR_ERRHANDLER’ of type int(26)
               
               
*note ERR_BUFFER: 115.Constant ‘ERR_BUFFER’ of type int(27)
               
               
*note ERR_COUNT: 116.Constant ‘ERR_COUNT’ of type int(28)
               
               
*note ERR_TAG: 117.Constant ‘ERR_TAG’ of type int(29)
               
               
*note ERR_RANK: 118.Constant ‘ERR_RANK’ of type int(30)
               
               
*note ERR_ROOT: 119.Constant ‘ERR_ROOT’ of type int(31)
               
               
*note ERR_TRUNCATE: 11a.Constant ‘ERR_TRUNCATE’ of type int(32)
               
               
*note ERR_IN_STATUS: 11b.Constant ‘ERR_IN_STATUS’ of type int(33)
               
               
*note ERR_PENDING: 11c.Constant ‘ERR_PENDING’ of type int(34)
               
               
*note ERR_TOPOLOGY: 11d.Constant ‘ERR_TOPOLOGY’ of type int(35)
               
               
*note ERR_DIMS: 11e.Constant ‘ERR_DIMS’ of type int(36)
               
               
*note ERR_ARG: 11f.Constant ‘ERR_ARG’ of type int(37)
               
               
*note ERR_OTHER: 120.Constant ‘ERR_OTHER’ of type int(38)
               
               
*note ERR_UNKNOWN: 121.Constant ‘ERR_UNKNOWN’ of type int(39)
               
               
*note ERR_INTERN: 122.Constant ‘ERR_INTERN’ of type int(40)
               
               
*note ERR_INFO: 123.Constant ‘ERR_INFO’ of type int(41)
               
               
*note ERR_FILE: 124.Constant ‘ERR_FILE’ of type int(42)
               
               
*note ERR_WIN: 125.Constant ‘ERR_WIN’ of type int(43)
               
               
*note ERR_KEYVAL: 126.Constant ‘ERR_KEYVAL’ of type int(44)
               
               
*note ERR_INFO_KEY: 127.Constant ‘ERR_INFO_KEY’ of type int(45)
               
               
*note ERR_INFO_VALUE: 128.Constant ‘ERR_INFO_VALUE’ of type int(46)
               
               
*note ERR_INFO_NOKEY: 129.Constant ‘ERR_INFO_NOKEY’ of type int(47)
               
               
*note ERR_ACCESS: 12a.Constant ‘ERR_ACCESS’ of type int(48)
               
               
*note ERR_AMODE: 12b.Constant ‘ERR_AMODE’ of type int(49)
               
               
*note ERR_BAD_FILE: 12c.Constant ‘ERR_BAD_FILE’ of type int(50)
               
               
*note ERR_FILE_EXISTS: 12d.Constant ‘ERR_FILE_EXISTS’ of type int(51)
               
               
*note ERR_FILE_IN_USE: 12e.Constant ‘ERR_FILE_IN_USE’ of type int(52)
               
               
*note ERR_NO_SPACE: 12f.Constant ‘ERR_NO_SPACE’ of type int(53)
               
               
*note ERR_NO_SUCH_FILE: 130.Constant ‘ERR_NO_SUCH_FILE’ of type int(54)
               
               
*note ERR_IO: 131.Constant ‘ERR_IO’ of type int(55)
               
               
*note ERR_READ_ONLY: 132.Constant ‘ERR_READ_ONLY’ of type int(56)
               
               
*note ERR_CONVERSION: 133.Constant ‘ERR_CONVERSION’ of type int(57)
               
               
*note ERR_DUP_DATAREP: 134.Constant ‘ERR_DUP_DATAREP’ of type int(58)
               
               
*note ERR_UNSUPPORTED_DATAREP: 135.Constant ‘ERR_UNSUPPORTED_DATAREP’ of type int(59)
               
               
*note ERR_UNSUPPORTED_OPERATION: 136.Constant ‘ERR_UNSUPPORTED_OPERATION’ of type int(60)
               
               
*note ERR_NAME: 137.Constant ‘ERR_NAME’ of type int(61)
               
               
*note ERR_NO_MEM: 138.Constant ‘ERR_NO_MEM’ of type int(62)
               
               
*note ERR_NOT_SAME: 139.Constant ‘ERR_NOT_SAME’ of type int(63)
               
               
*note ERR_PORT: 13a.Constant ‘ERR_PORT’ of type int(64)
               
               
*note ERR_QUOTA: 13b.Constant ‘ERR_QUOTA’ of type int(65)
               
               
*note ERR_SERVICE: 13c.Constant ‘ERR_SERVICE’ of type int(66)
               
               
*note ERR_SPAWN: 13d.Constant ‘ERR_SPAWN’ of type int(67)
               
               
*note ERR_BASE: 13e.Constant ‘ERR_BASE’ of type int(68)
               
               
*note ERR_SIZE: 13f.Constant ‘ERR_SIZE’ of type int(69)
               
               
*note ERR_DISP: 140.Constant ‘ERR_DISP’ of type int(70)
               
               
*note ERR_ASSERT: 141.Constant ‘ERR_ASSERT’ of type int(71)
               
               
*note ERR_LOCKTYPE: 142.Constant ‘ERR_LOCKTYPE’ of type int(72)
               
               
*note ERR_RMA_CONFLICT: 143.Constant ‘ERR_RMA_CONFLICT’ of type int(73)
               
               
*note ERR_RMA_SYNC: 144.Constant ‘ERR_RMA_SYNC’ of type int(74)
               
               
*note ERR_RMA_RANGE: 145.Constant ‘ERR_RMA_RANGE’ of type int(75)
               
               
*note ERR_RMA_ATTACH: 146.Constant ‘ERR_RMA_ATTACH’ of type int(76)
               
               
*note ERR_RMA_SHARED: 147.Constant ‘ERR_RMA_SHARED’ of type int(77)
               
               
*note ERR_RMA_FLAVOR: 148.Constant ‘ERR_RMA_FLAVOR’ of type int(78)
               
               
*note ORDER_C: 149.Constant ‘ORDER_C’ of type int(79)
               
               
*note ORDER_F: 14a.Constant ‘ORDER_F’ of type int(80)
               
               
*note ORDER_FORTRAN: 14b.Constant ‘ORDER_FORTRAN’ of type int(81)
               
               
*note TYPECLASS_INTEGER: 14c.Constant ‘TYPECLASS_INTEGER’ of type int(82)
               
               
*note TYPECLASS_REAL: 14d.Constant ‘TYPECLASS_REAL’ of type int(83)
               
               
*note TYPECLASS_COMPLEX: 14e.Constant ‘TYPECLASS_COMPLEX’ of type int(84)
               
               
*note DISTRIBUTE_NONE: 14f.Constant ‘DISTRIBUTE_NONE’ of type int(85)
               
               
*note DISTRIBUTE_BLOCK: 150.Constant ‘DISTRIBUTE_BLOCK’ of type int(86)
               
               
*note DISTRIBUTE_CYCLIC: 151.Constant ‘DISTRIBUTE_CYCLIC’ of type int(87)
               
               
*note DISTRIBUTE_DFLT_DARG: 152.Constant ‘DISTRIBUTE_DFLT_DARG’ of type int(88)
               
               
*note COMBINER_NAMED: 153.Constant ‘COMBINER_NAMED’ of type int(89)
               
               
*note COMBINER_DUP: 154.Constant ‘COMBINER_DUP’ of type int(90)
               
               
*note COMBINER_CONTIGUOUS: 155.Constant ‘COMBINER_CONTIGUOUS’ of type int(91)
               
               
*note COMBINER_VECTOR: 156.Constant ‘COMBINER_VECTOR’ of type int(92)
               
               
*note COMBINER_HVECTOR: 157.Constant ‘COMBINER_HVECTOR’ of type int(93)
               
               
*note COMBINER_INDEXED: 158.Constant ‘COMBINER_INDEXED’ of type int(94)
               
               
*note COMBINER_HINDEXED: 159.Constant ‘COMBINER_HINDEXED’ of type int(95)
               
               
*note COMBINER_INDEXED_BLOCK: 15a.Constant ‘COMBINER_INDEXED_BLOCK’ of type int(96)
               
               
*note COMBINER_HINDEXED_BLOCK: 15b.Constant ‘COMBINER_HINDEXED_BLOCK’ of type int(97)
               
               
*note COMBINER_STRUCT: 15c.Constant ‘COMBINER_STRUCT’ of type int(98)
               
               
*note COMBINER_SUBARRAY: 15d.Constant ‘COMBINER_SUBARRAY’ of type int(99)
               
               
*note COMBINER_DARRAY: 15e.Constant ‘COMBINER_DARRAY’ of type int(100)
               
               
*note COMBINER_RESIZED: 15f.Constant ‘COMBINER_RESIZED’ of type int(101)
               
               
*note COMBINER_VALUE_INDEX: 160.Constant ‘COMBINER_VALUE_INDEX’ of type int(102)
               
               
*note COMBINER_F90_REAL: 161.Constant ‘COMBINER_F90_REAL’ of type int(103)
               
               
*note COMBINER_F90_COMPLEX: 162.Constant ‘COMBINER_F90_COMPLEX’ of type int(104)
               
               
*note COMBINER_F90_INTEGER: 163.Constant ‘COMBINER_F90_INTEGER’ of type int(105)
               
               
*note IDENT: 164.Constant ‘IDENT’ of type int(106)
               
               
*note CONGRUENT: 165.Constant ‘CONGRUENT’ of type int(107)
               
               
*note SIMILAR: 166.Constant ‘SIMILAR’ of type int(108)
               
               
*note UNEQUAL: 167.Constant ‘UNEQUAL’ of type int(109)
               
               
*note CART: 168.Constant ‘CART’ of type int(110)
               
               
*note GRAPH: 169.Constant ‘GRAPH’ of type int(111)
               
               
*note DIST_GRAPH: 16a.Constant ‘DIST_GRAPH’ of type int(112)
               
               
*note UNWEIGHTED: 16b.Constant ‘UNWEIGHTED’ of type int(113)
               
               
*note WEIGHTS_EMPTY: 16c.Constant ‘WEIGHTS_EMPTY’ of type int(114)
               
               
*note COMM_TYPE_SHARED: 16d.Constant ‘COMM_TYPE_SHARED’ of type int(115)
               
               
*note BSEND_OVERHEAD: 16e.Constant ‘BSEND_OVERHEAD’ of type int(116)
               
               
*note WIN_FLAVOR_CREATE: 16f.Constant ‘WIN_FLAVOR_CREATE’ of type int(117)
               
               
*note WIN_FLAVOR_ALLOCATE: 170.Constant ‘WIN_FLAVOR_ALLOCATE’ of type int(118)
               
               
*note WIN_FLAVOR_DYNAMIC: 171.Constant ‘WIN_FLAVOR_DYNAMIC’ of type int(119)
               
               
*note WIN_FLAVOR_SHARED: 172.Constant ‘WIN_FLAVOR_SHARED’ of type int(120)
               
               
*note WIN_SEPARATE: 173.Constant ‘WIN_SEPARATE’ of type int(121)
               
               
*note WIN_UNIFIED: 174.Constant ‘WIN_UNIFIED’ of type int(122)
               
               
*note MODE_NOCHECK: 175.Constant ‘MODE_NOCHECK’ of type int(123)
               
               
*note MODE_NOSTORE: 176.Constant ‘MODE_NOSTORE’ of type int(124)
               
               
*note MODE_NOPUT: 177.Constant ‘MODE_NOPUT’ of type int(125)
               
               
*note MODE_NOPRECEDE: 178.Constant ‘MODE_NOPRECEDE’ of type int(126)
               
               
*note MODE_NOSUCCEED: 179.Constant ‘MODE_NOSUCCEED’ of type int(127)
               
               
*note LOCK_EXCLUSIVE: 17a.Constant ‘LOCK_EXCLUSIVE’ of type int(128)
               
               
*note LOCK_SHARED: 17b.Constant ‘LOCK_SHARED’ of type int(129)
               
               
*note MODE_RDONLY: 17c.Constant ‘MODE_RDONLY’ of type int(130)
               
               
*note MODE_WRONLY: 17d.Constant ‘MODE_WRONLY’ of type int(131)
               
               
*note MODE_RDWR: 17e.Constant ‘MODE_RDWR’ of type int(132)
               
               
*note MODE_CREATE: 17f.Constant ‘MODE_CREATE’ of type int(133)
               
               
*note MODE_EXCL: 180.Constant ‘MODE_EXCL’ of type int(134)
               
               
*note MODE_DELETE_ON_CLOSE: 181.Constant ‘MODE_DELETE_ON_CLOSE’ of type int(135)
               
               
*note MODE_UNIQUE_OPEN: 182.Constant ‘MODE_UNIQUE_OPEN’ of type int(136)
               
               
*note MODE_SEQUENTIAL: 183.Constant ‘MODE_SEQUENTIAL’ of type int(137)
               
               
*note MODE_APPEND: 184.Constant ‘MODE_APPEND’ of type int(138)
               
               
*note SEEK_SET: 185.Constant ‘SEEK_SET’ of type int(139)
               
               
*note SEEK_CUR: 186.Constant ‘SEEK_CUR’ of type int(140)
               
               
*note SEEK_END: 187.Constant ‘SEEK_END’ of type int(141)
               
               
*note DISPLACEMENT_CURRENT: 188.Constant ‘DISPLACEMENT_CURRENT’ of type int(142)
               
               
*note DISP_CUR: 189.Constant ‘DISP_CUR’ of type int(143)
               
               
*note THREAD_SINGLE: 18a.Constant ‘THREAD_SINGLE’ of type int(144)
               
               
*note THREAD_FUNNELED: 18b.Constant ‘THREAD_FUNNELED’ of type int(145)
               
               
*note THREAD_SERIALIZED: 18c.Constant ‘THREAD_SERIALIZED’ of type int(146)
               
               
*note THREAD_MULTIPLE: 18d.Constant ‘THREAD_MULTIPLE’ of type int(147)
               
               
*note VERSION: 18e.Constant ‘VERSION’ of type int(148)
               
               
*note SUBVERSION: 18f.Constant ‘SUBVERSION’ of type int(149)
               
               
*note MAX_PROCESSOR_NAME: 190.Constant ‘MAX_PROCESSOR_NAME’ of type int(150)
               
               
*note MAX_ERROR_STRING: 191.Constant ‘MAX_ERROR_STRING’ of type int(151)
               
               
*note MAX_PORT_NAME: 192.Constant ‘MAX_PORT_NAME’ of type int(152)
               
               
*note MAX_INFO_KEY: 193.Constant ‘MAX_INFO_KEY’ of type int(153)
               
               
*note MAX_INFO_VAL: 194.Constant ‘MAX_INFO_VAL’ of type int(154)
               
               
*note MAX_OBJECT_NAME: 195.Constant ‘MAX_OBJECT_NAME’ of type int(155)
               
               
*note MAX_DATAREP_STRING: 196.Constant ‘MAX_DATAREP_STRING’ of type int(156)
               
               
*note MAX_LIBRARY_VERSION_STRING: 197.Constant ‘MAX_LIBRARY_VERSION_STRING’ of type int(157)
               
               
*note DATATYPE_NULL: 198.Object ‘DATATYPE_NULL’ of type *note Datatype: d0.
               
               
*note PACKED: 199.Object ‘PACKED’ of type *note Datatype: d0.
               
               
*note BYTE: 19a.Object ‘BYTE’ of type *note Datatype: d0.
               
               
*note AINT: 19b.Object ‘AINT’ of type *note Datatype: d0.
               
               
*note OFFSET: 19c.Object ‘OFFSET’ of type *note Datatype: d0.
               
               
*note COUNT: 19d.Object ‘COUNT’ of type *note Datatype: d0.
               
               
*note CHAR: 19e.Object ‘CHAR’ of type *note Datatype: d0.
               
               
*note WCHAR: 19f.Object ‘WCHAR’ of type *note Datatype: d0.
               
               
*note SIGNED_CHAR: 1a0.Object ‘SIGNED_CHAR’ of type *note Datatype: d0.
               
               
*note SHORT: 1a1.Object ‘SHORT’ of type *note Datatype: d0.
               
               
*note INT: 1a2.Object ‘INT’ of type *note Datatype: d0.
               
               
*note LONG: 1a3.Object ‘LONG’ of type *note Datatype: d0.
               
               
*note LONG_LONG: 1a4.Object ‘LONG_LONG’ of type *note Datatype: d0.
               
               
*note UNSIGNED_CHAR: 1a5.Object ‘UNSIGNED_CHAR’ of type *note Datatype: d0.
               
               
*note UNSIGNED_SHORT: 1a6.Object ‘UNSIGNED_SHORT’ of type *note Datatype: d0.
               
               
*note UNSIGNED: 1a7.Object ‘UNSIGNED’ of type *note Datatype: d0.
               
               
*note UNSIGNED_LONG: 1a8.Object ‘UNSIGNED_LONG’ of type *note Datatype: d0.
               
               
*note UNSIGNED_LONG_LONG: 1a9.Object ‘UNSIGNED_LONG_LONG’ of type *note Datatype: d0.
               
               
*note FLOAT: 1aa.Object ‘FLOAT’ of type *note Datatype: d0.
               
               
*note DOUBLE: 1ab.Object ‘DOUBLE’ of type *note Datatype: d0.
               
               
*note LONG_DOUBLE: 1ac.Object ‘LONG_DOUBLE’ of type *note Datatype: d0.
               
               
*note C_BOOL: 1ad.Object ‘C_BOOL’ of type *note Datatype: d0.
               
               
*note INT8_T: 1ae.Object ‘INT8_T’ of type *note Datatype: d0.
               
               
*note INT16_T: 1af.Object ‘INT16_T’ of type *note Datatype: d0.
               
               
*note INT32_T: 1b0.Object ‘INT32_T’ of type *note Datatype: d0.
               
               
*note INT64_T: 1b1.Object ‘INT64_T’ of type *note Datatype: d0.
               
               
*note UINT8_T: 1b2.Object ‘UINT8_T’ of type *note Datatype: d0.
               
               
*note UINT16_T: 1b3.Object ‘UINT16_T’ of type *note Datatype: d0.
               
               
*note UINT32_T: 1b4.Object ‘UINT32_T’ of type *note Datatype: d0.
               
               
*note UINT64_T: 1b5.Object ‘UINT64_T’ of type *note Datatype: d0.
               
               
*note C_COMPLEX: 1b6.Object ‘C_COMPLEX’ of type *note Datatype: d0.
               
               
*note C_FLOAT_COMPLEX: 1b7.Object ‘C_FLOAT_COMPLEX’ of type *note Datatype: d0.
               
               
*note C_DOUBLE_COMPLEX: 1b8.Object ‘C_DOUBLE_COMPLEX’ of type *note Datatype: d0.
               
               
*note C_LONG_DOUBLE_COMPLEX: 1b9.Object ‘C_LONG_DOUBLE_COMPLEX’ of type *note Datatype: d0.
               
               
*note CXX_BOOL: 1ba.Object ‘CXX_BOOL’ of type *note Datatype: d0.
               
               
*note CXX_FLOAT_COMPLEX: 1bb.Object ‘CXX_FLOAT_COMPLEX’ of type *note Datatype: d0.
               
               
*note CXX_DOUBLE_COMPLEX: 1bc.Object ‘CXX_DOUBLE_COMPLEX’ of type *note Datatype: d0.
               
               
*note CXX_LONG_DOUBLE_COMPLEX: 1bd.Object ‘CXX_LONG_DOUBLE_COMPLEX’ of type *note Datatype: d0.
               
               
*note SHORT_INT: 1be.Object ‘SHORT_INT’ of type *note Datatype: d0.
               
               
*note INT_INT: 1bf.Object ‘INT_INT’ of type *note Datatype: d0.
               
               
*note TWOINT: 1c0.Object ‘TWOINT’ of type *note Datatype: d0.
               
               
*note LONG_INT: 1c1.Object ‘LONG_INT’ of type *note Datatype: d0.
               
               
*note FLOAT_INT: 1c2.Object ‘FLOAT_INT’ of type *note Datatype: d0.
               
               
*note DOUBLE_INT: 1c3.Object ‘DOUBLE_INT’ of type *note Datatype: d0.
               
               
*note LONG_DOUBLE_INT: 1c4.Object ‘LONG_DOUBLE_INT’ of type *note Datatype: d0.
               
               
*note CHARACTER: 1c5.Object ‘CHARACTER’ of type *note Datatype: d0.
               
               
*note LOGICAL: 1c6.Object ‘LOGICAL’ of type *note Datatype: d0.
               
               
*note INTEGER: 1c7.Object ‘INTEGER’ of type *note Datatype: d0.
               
               
*note REAL: 1c8.Object ‘REAL’ of type *note Datatype: d0.
               
               
*note DOUBLE_PRECISION: 1c9.Object ‘DOUBLE_PRECISION’ of type *note Datatype: d0.
               
               
*note COMPLEX: 1ca.Object ‘COMPLEX’ of type *note Datatype: d0.
               
               
*note DOUBLE_COMPLEX: 1cb.Object ‘DOUBLE_COMPLEX’ of type *note Datatype: d0.
               
               
*note LOGICAL1: 1cc.Object ‘LOGICAL1’ of type *note Datatype: d0.
               
               
*note LOGICAL2: 1cd.Object ‘LOGICAL2’ of type *note Datatype: d0.
               
               
*note LOGICAL4: 1ce.Object ‘LOGICAL4’ of type *note Datatype: d0.
               
               
*note LOGICAL8: 1cf.Object ‘LOGICAL8’ of type *note Datatype: d0.
               
               
*note INTEGER1: 1d0.Object ‘INTEGER1’ of type *note Datatype: d0.
               
               
*note INTEGER2: 1d1.Object ‘INTEGER2’ of type *note Datatype: d0.
               
               
*note INTEGER4: 1d2.Object ‘INTEGER4’ of type *note Datatype: d0.
               
               
*note INTEGER8: 1d3.Object ‘INTEGER8’ of type *note Datatype: d0.
               
               
*note INTEGER16: 1d4.Object ‘INTEGER16’ of type *note Datatype: d0.
               
               
*note REAL2: 1d5.Object ‘REAL2’ of type *note Datatype: d0.
               
               
*note REAL4: 1d6.Object ‘REAL4’ of type *note Datatype: d0.
               
               
*note REAL8: 1d7.Object ‘REAL8’ of type *note Datatype: d0.
               
               
*note REAL16: 1d8.Object ‘REAL16’ of type *note Datatype: d0.
               
               
*note COMPLEX4: 1d9.Object ‘COMPLEX4’ of type *note Datatype: d0.
               
               
*note COMPLEX8: 1da.Object ‘COMPLEX8’ of type *note Datatype: d0.
               
               
*note COMPLEX16: 1db.Object ‘COMPLEX16’ of type *note Datatype: d0.
               
               
*note COMPLEX32: 1dc.Object ‘COMPLEX32’ of type *note Datatype: d0.
               
               
*note UNSIGNED_INT: 1dd.Object ‘UNSIGNED_INT’ of type *note Datatype: d0.
               
               
*note SIGNED_SHORT: 1de.Object ‘SIGNED_SHORT’ of type *note Datatype: d0.
               
               
*note SIGNED_INT: 1df.Object ‘SIGNED_INT’ of type *note Datatype: d0.
               
               
*note SIGNED_LONG: 1e0.Object ‘SIGNED_LONG’ of type *note Datatype: d0.
               
               
*note SIGNED_LONG_LONG: 1e1.Object ‘SIGNED_LONG_LONG’ of type *note Datatype: d0.
               
               
*note BOOL: 1e2.Object ‘BOOL’ of type *note Datatype: d0.
               
               
*note SINT8_T: 1e3.Object ‘SINT8_T’ of type *note Datatype: d0.
               
               
*note SINT16_T: 1e4.Object ‘SINT16_T’ of type *note Datatype: d0.
               
               
*note SINT32_T: 1e5.Object ‘SINT32_T’ of type *note Datatype: d0.
               
               
*note SINT64_T: 1e6.Object ‘SINT64_T’ of type *note Datatype: d0.
               
               
*note F_BOOL: 1e7.Object ‘F_BOOL’ of type *note Datatype: d0.
               
               
*note F_INT: 1e8.Object ‘F_INT’ of type *note Datatype: d0.
               
               
*note F_FLOAT: 1e9.Object ‘F_FLOAT’ of type *note Datatype: d0.
               
               
*note F_DOUBLE: 1ea.Object ‘F_DOUBLE’ of type *note Datatype: d0.
               
               
*note F_COMPLEX: 1eb.Object ‘F_COMPLEX’ of type *note Datatype: d0.
               
               
*note F_FLOAT_COMPLEX: 1ec.Object ‘F_FLOAT_COMPLEX’ of type *note Datatype: d0.
               
               
*note F_DOUBLE_COMPLEX: 1ed.Object ‘F_DOUBLE_COMPLEX’ of type *note Datatype: d0.
               
               
*note REQUEST_NULL: 1ee.Object ‘REQUEST_NULL’ of type *note Request: 43.
               
               
*note MESSAGE_NULL: 1ef.Object ‘MESSAGE_NULL’ of type *note Message: d7.
               
               
*note MESSAGE_NO_PROC: 1f0.Object ‘MESSAGE_NO_PROC’ of type *note Message: d7.
               
               
*note OP_NULL: 1f1.Object ‘OP_NULL’ of type *note Op: d3.
               
               
*note MAX: 67. Object ‘MAX’ of type *note Op: d3.
               
               
*note MIN: 1f2.Object ‘MIN’ of type *note Op: d3.
               
               
*note SUM: 65. Object ‘SUM’ of type *note Op: d3.
               
               
*note PROD: 66.Object ‘PROD’ of type *note Op: d3.
               
               
*note LAND: 1f3.Object ‘LAND’ of type *note Op: d3.
               
               
*note BAND: 1f4.Object ‘BAND’ of type *note Op: d3.
               
               
*note LOR: 1f5.Object ‘LOR’ of type *note Op: d3.
               
               
*note BOR: 1f6.Object ‘BOR’ of type *note Op: d3.
               
               
*note LXOR: 1f7.Object ‘LXOR’ of type *note Op: d3.
               
               
*note BXOR: 1f8.Object ‘BXOR’ of type *note Op: d3.
               
               
*note MAXLOC: 1f9.Object ‘MAXLOC’ of type *note Op: d3.
               
               
*note MINLOC: 1fa.Object ‘MINLOC’ of type *note Op: d3.
               
               
*note REPLACE: 1fb.Object ‘REPLACE’ of type *note Op: d3.
               
               
*note NO_OP: 1fc.Object ‘NO_OP’ of type *note Op: d3.
               
               
*note GROUP_NULL: 1fd.Object ‘GROUP_NULL’ of type *note Group: 28.
               
               
*note GROUP_EMPTY: 1fe.Object ‘GROUP_EMPTY’ of type *note Group: 28.
               
               
*note INFO_NULL: 1ff.Object ‘INFO_NULL’ of type *note Info: d4.
               
               
*note INFO_ENV: 200.Object ‘INFO_ENV’ of type *note Info: d4.
               
               
*note ERRHANDLER_NULL: 201.Object ‘ERRHANDLER_NULL’ of type *note Errhandler: d8.
               
               
*note ERRORS_RETURN: 99.Object ‘ERRORS_RETURN’ of type *note Errhandler: d8.
               
               
*note ERRORS_ARE_FATAL: 9a.Object ‘ERRORS_ARE_FATAL’ of type *note Errhandler: d8.
               
               
*note COMM_NULL: 202.Object ‘COMM_NULL’ of type *note Comm: 1e.
               
               
*note COMM_SELF: 23.Object ‘COMM_SELF’ of type *note Intracomm: 1f.
               
               
*note COMM_WORLD: 24.Object ‘COMM_WORLD’ of type *note Intracomm: 1f.
               
               
*note WIN_NULL: 203.Object ‘WIN_NULL’ of type *note Win: 76.
               
               
*note FILE_NULL: 204.Object ‘FILE_NULL’ of type *note File: 84.
               
               
*note pickle: a8.Object ‘pickle’ of type *note Pickle: d9.
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#int

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/functions.html#int

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/functions.html#int

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int

   (86) https://docs.python.org/3/library/functions.html#int

   (87) https://docs.python.org/3/library/functions.html#int

   (88) https://docs.python.org/3/library/functions.html#int

   (89) https://docs.python.org/3/library/functions.html#int

   (90) https://docs.python.org/3/library/functions.html#int

   (91) https://docs.python.org/3/library/functions.html#int

   (92) https://docs.python.org/3/library/functions.html#int

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/functions.html#int

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/functions.html#int

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/functions.html#int

   (100) https://docs.python.org/3/library/functions.html#int

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/functions.html#int

   (105) https://docs.python.org/3/library/functions.html#int

   (106) https://docs.python.org/3/library/functions.html#int

   (107) https://docs.python.org/3/library/functions.html#int

   (108) https://docs.python.org/3/library/functions.html#int

   (109) https://docs.python.org/3/library/functions.html#int

   (110) https://docs.python.org/3/library/functions.html#int

   (111) https://docs.python.org/3/library/functions.html#int

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/functions.html#int

   (115) https://docs.python.org/3/library/functions.html#int

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/functions.html#int

   (118) https://docs.python.org/3/library/functions.html#int

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/functions.html#int

   (121) https://docs.python.org/3/library/functions.html#int

   (122) https://docs.python.org/3/library/functions.html#int

   (123) https://docs.python.org/3/library/functions.html#int

   (124) https://docs.python.org/3/library/functions.html#int

   (125) https://docs.python.org/3/library/functions.html#int

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/functions.html#int

   (129) https://docs.python.org/3/library/functions.html#int

   (130) https://docs.python.org/3/library/functions.html#int

   (131) https://docs.python.org/3/library/functions.html#int

   (132) https://docs.python.org/3/library/functions.html#int

   (133) https://docs.python.org/3/library/functions.html#int

   (134) https://docs.python.org/3/library/functions.html#int

   (135) https://docs.python.org/3/library/functions.html#int

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/functions.html#int

   (139) https://docs.python.org/3/library/functions.html#int

   (140) https://docs.python.org/3/library/functions.html#int

   (141) https://docs.python.org/3/library/functions.html#int

   (142) https://docs.python.org/3/library/functions.html#int

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/functions.html#int

   (145) https://docs.python.org/3/library/functions.html#int

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/functions.html#int

   (148) https://docs.python.org/3/library/functions.html#int

   (149) https://docs.python.org/3/library/functions.html#int

   (150) https://docs.python.org/3/library/functions.html#int

   (151) https://docs.python.org/3/library/functions.html#int

   (152) https://docs.python.org/3/library/functions.html#int

   (153) https://docs.python.org/3/library/functions.html#int

   (154) https://docs.python.org/3/library/functions.html#int

   (155) https://docs.python.org/3/library/functions.html#int

   (156) https://docs.python.org/3/library/functions.html#int

   (157) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py typing,  Next: mpi4py futures,  Prev: mpi4py MPI,  Up: Top

6 mpi4py.typing
***************

Added in version 4.0.0.

This module provides type aliases(1) used to add type hints(2) to the
various functions and methods within the *note MPI: 3. module.

See also
........

Module typing(3)

     Documentation of the typing(4) standard module.

Types Summary
-------------

*note SupportsBuffer: 207.Python buffer protocol.
               
               
*note SupportsDLPack: 208.DLPack data interchange protocol.
               
               
*note SupportsCAI: 209.CUDA Array Interface (CAI) protocol.
               
               
*note Buffer: 20a.Buffer-like object.
               
               
*note Bottom: 20b.Start of the address range.
               
               
*note InPlace: 20c.In-place buffer argument.
               
               
*note Aint: 20d.Address-sized integral type.
               
               
*note Count: 20e.Integral type for counts.
               
               
*note Displ: 20f.Integral type for displacements.
               
               
*note Offset: 210.Integral type for offsets.
               
               
*note TypeSpec: 211.Datatype specification.
               
               
*note BufSpec: 212.Buffer specification.
               
               
*note BufSpecB: 213.Buffer specification (block).
               
               
*note BufSpecV: 214.Buffer specification (vector).
               
               
*note BufSpecW: 215.Buffer specification (generalized).
               
               
*note TargetSpec: 216.Target specification.
               

Types Documentation
-------------------

 -- Data: mpi4py.typing.SupportsBuffer = <class
          'mpi4py.typing.SupportsBuffer'>

     Python buffer protocol.

     See also
     ........

     Buffer Protocol(5)

 -- Data: mpi4py.typing.SupportsDLPack = <class
          'mpi4py.typing.SupportsDLPack'>

     DLPack data interchange protocol.

     See also
     ........

     Python Specification for DLPack(6)

 -- Data: mpi4py.typing.SupportsCAI = <class
          'mpi4py.typing.SupportsCAI'>

     CUDA Array Interface (CAI) protocol.

     See also
     ........

     CUDA Array Interface (Version 3)(7)

 -- Data: mpi4py.typing.Buffer

     Buffer-like object.

     alias of *note SupportsBuffer: 207. | *note SupportsDLPack: 208. |
     *note SupportsCAI: 209.

 -- Data: mpi4py.typing.Bottom

     Start of the address range.

     alias of *note BottomType: fb. | None(8)

 -- Data: mpi4py.typing.InPlace

     In-place buffer argument.

     alias of *note InPlaceType: fd. | None(9)

 -- Data: mpi4py.typing.Aint = <class 'numbers.Integral'>

     Address-sized integral type.

     alias of numbers.Integral(10)

 -- Data: mpi4py.typing.Count = <class 'numbers.Integral'>

     Integral type for counts.

     alias of numbers.Integral(11)

 -- Data: mpi4py.typing.Displ = <class 'numbers.Integral'>

     Integral type for displacements.

     alias of numbers.Integral(12)

 -- Data: mpi4py.typing.Offset = <class 'numbers.Integral'>

     Integral type for offsets.

     alias of numbers.Integral(13)

 -- Data: mpi4py.typing.TypeSpec

     Datatype specification.

     alias of *note Datatype: d0. | str(14)

 -- Data: mpi4py.typing.BufSpec

     Buffer specification.

        * *note Buffer: 20a.

        * Tuple[*note Buffer: 20a, *note Count: 20e.]

        * Tuple[*note Buffer: 20a, *note TypeSpec: 211.]

        * Tuple[*note Buffer: 20a, *note Count: 20e, *note TypeSpec:
          211.]

        * Tuple[*note Bottom: 20b, *note Count: 20e, *note Datatype:
          d0.]

     alias of *note SupportsBuffer: 207. | *note SupportsDLPack: 208. |
     *note SupportsCAI: 209. | Tuple(15)[*note SupportsBuffer: 207. |
     *note SupportsDLPack: 208. | *note SupportsCAI: 209, Integral(16)]
     | Tuple(17)[*note SupportsBuffer: 207. | *note SupportsDLPack: 208.
     | *note SupportsCAI: 209, *note Datatype: d0. | str(18)] |
     Tuple(19)[*note SupportsBuffer: 207. | *note SupportsDLPack: 208. |
     *note SupportsCAI: 209, Integral(20), *note Datatype: d0. |
     str(21)] | Tuple(22)[*note BottomType: fb. | None(23),
     Integral(24), *note Datatype: d0.] | List(25)[Any(26)]

 -- Data: mpi4py.typing.BufSpecB

     Buffer specification (block).

        * *note Buffer: 20a.

        * Tuple[*note Buffer: 20a, *note Count: 20e.]

        * Tuple[*note Buffer: 20a, *note TypeSpec: 211.]

        * Tuple[*note Buffer: 20a, *note Count: 20e, *note TypeSpec:
          211.]

     alias of *note SupportsBuffer: 207. | *note SupportsDLPack: 208. |
     *note SupportsCAI: 209. | Tuple(27)[*note SupportsBuffer: 207. |
     *note SupportsDLPack: 208. | *note SupportsCAI: 209, Integral(28)]
     | Tuple(29)[*note SupportsBuffer: 207. | *note SupportsDLPack: 208.
     | *note SupportsCAI: 209, *note Datatype: d0. | str(30)] |
     Tuple(31)[*note SupportsBuffer: 207. | *note SupportsDLPack: 208. |
     *note SupportsCAI: 209, Integral(32), *note Datatype: d0. |
     str(33)] | List(34)[Any(35)]

 -- Data: mpi4py.typing.BufSpecV

     Buffer specification (vector).

        * *note Buffer: 20a.

        * Tuple[*note Buffer: 20a, Sequence[*note Count: 20e.]]

        * Tuple[*note Buffer: 20a, Tuple[Sequence[*note Count: 20e.],
          Sequence[*note Displ: 20f.]]]

        * Tuple[*note Buffer: 20a, *note TypeSpec: 211.]

        * Tuple[*note Buffer: 20a, Sequence[*note Count: 20e.], *note
          TypeSpec: 211.]

        * Tuple[*note Buffer: 20a, Tuple[Sequence[*note Count: 20e.],
          Sequence[*note Displ: 20f.]], *note TypeSpec: 211.]

        * Tuple[*note Buffer: 20a, Sequence[*note Count: 20e.],
          Sequence[*note Displ: 20f.], *note TypeSpec: 211.]

        * Tuple[*note Bottom: 20b, Tuple[Sequence[*note Count: 20e.],
          Sequence[*note Displ: 20f.]], *note Datatype: d0.]

        * Tuple[*note Bottom: 20b, Sequence[*note Count: 20e.],
          Sequence[*note Displ: 20f.], *note Datatype: d0.]

     alias of *note SupportsBuffer: 207. | *note SupportsDLPack: 208. |
     *note SupportsCAI: 209. | Tuple(36)[*note SupportsBuffer: 207. |
     *note SupportsDLPack: 208. | *note SupportsCAI: 209,
     Sequence(37)[Integral(38)]] | Tuple(39)[*note SupportsBuffer: 207.
     | *note SupportsDLPack: 208. | *note SupportsCAI: 209,
     Tuple(40)[Sequence(41)[Integral(42)], Sequence(43)[Integral(44)]]]
     | Tuple(45)[*note SupportsBuffer: 207. | *note SupportsDLPack: 208.
     | *note SupportsCAI: 209, *note Datatype: d0. | str(46)] |
     Tuple(47)[*note SupportsBuffer: 207. | *note SupportsDLPack: 208. |
     *note SupportsCAI: 209, Sequence(48)[Integral(49)], *note Datatype:
     d0. | str(50)] | Tuple(51)[*note SupportsBuffer: 207. | *note
     SupportsDLPack: 208. | *note SupportsCAI: 209,
     Tuple(52)[Sequence(53)[Integral(54)], Sequence(55)[Integral(56)]],
     *note Datatype: d0. | str(57)] | Tuple(58)[*note SupportsBuffer:
     207. | *note SupportsDLPack: 208. | *note SupportsCAI: 209,
     Sequence(59)[Integral(60)], Sequence(61)[Integral(62)], *note
     Datatype: d0. | str(63)] | Tuple(64)[*note BottomType: fb. |
     None(65), Tuple(66)[Sequence(67)[Integral(68)],
     Sequence(69)[Integral(70)]], *note Datatype: d0.] | Tuple(71)[*note
     BottomType: fb. | None(72), Sequence(73)[Integral(74)],
     Sequence(75)[Integral(76)], *note Datatype: d0.] |
     List(77)[Any(78)]

 -- Data: mpi4py.typing.BufSpecW

     Buffer specification (generalized).

        * Tuple[*note Buffer: 20a, Sequence[*note Datatype: d0.]]

        * Tuple[*note Buffer: 20a, Tuple[Sequence[*note Count: 20e.],
          Sequence[*note Displ: 20f.]], Sequence[*note Datatype: d0.]]

        * Tuple[*note Buffer: 20a, Sequence[*note Count: 20e.],
          Sequence[*note Displ: 20f.], Sequence[*note Datatype: d0.]]

        * Tuple[*note Bottom: 20b, Tuple[Sequence[*note Count: 20e.],
          Sequence[*note Displ: 20f.]], Sequence[*note Datatype: d0.]]

        * Tuple[*note Bottom: 20b, Sequence[*note Count: 20e.],
          Sequence[*note Displ: 20f.], Sequence[*note Datatype: d0.]]

     alias of Tuple(79)[*note SupportsBuffer: 207. | *note
     SupportsDLPack: 208. | *note SupportsCAI: 209, Sequence(80)[*note
     Datatype: d0.]] | Tuple(81)[*note SupportsBuffer: 207. | *note
     SupportsDLPack: 208. | *note SupportsCAI: 209,
     Tuple(82)[Sequence(83)[Integral(84)], Sequence(85)[Integral(86)]],
     Sequence(87)[*note Datatype: d0.]] | Tuple(88)[*note
     SupportsBuffer: 207. | *note SupportsDLPack: 208. | *note
     SupportsCAI: 209, Sequence(89)[Integral(90)],
     Sequence(91)[Integral(92)], Sequence(93)[*note Datatype: d0.]] |
     Tuple(94)[*note BottomType: fb. | None(95),
     Tuple(96)[Sequence(97)[Integral(98)], Sequence(99)[Integral(100)]],
     Sequence(101)[*note Datatype: d0.]] | Tuple(102)[*note BottomType:
     fb. | None(103), Sequence(104)[Integral(105)],
     Sequence(106)[Integral(107)], Sequence(108)[*note Datatype: d0.]] |
     List(109)[Any(110)]

 -- Data: mpi4py.typing.TargetSpec

     Target specification.

        * *note Displ: 20f.

        * Tuple[()]

        * Tuple[*note Displ: 20f.]

        * Tuple[*note Displ: 20f, *note Count: 20e.]

        * Tuple[*note Displ: 20f, *note Count: 20e, *note Datatype: d0.]

     alias of Integral(111) | Tuple(112) | Tuple(113)[Integral(114)] |
     Tuple(115)[Integral(116), Integral(117)] |
     Tuple(118)[Integral(119), Integral(120), *note Datatype: d0. |
     str(121)] | List(122)[Any(123)]

 -- Data: mpi4py.typing.S = TypeVar("S")

     Invariant TypeVar(124).

 -- Data: mpi4py.typing.T = TypeVar("T")

     Invariant TypeVar(125).

 -- Data: mpi4py.typing.U = TypeVar("U")

     Invariant TypeVar(126).

 -- Data: mpi4py.typing.V = TypeVar("V")

     Invariant TypeVar(127).

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/glossary.html#term-type-alias

   (2) https://docs.python.org/3/glossary.html#term-type-hint

   (3) https://docs.python.org/3/library/typing.html#module-typing

   (4) https://docs.python.org/3/library/typing.html#module-typing

   (5) https://docs.python.org/3/c-api/buffer.html#bufferobjects

   (6) https://dmlc.github.io/dlpack/latest/python_spec.html#python-spec

   (7) 
https://numba.readthedocs.io/en/stable/cuda/cuda_array_interface.html#cuda-array-interface

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (11) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (12) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (13) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (14) https://docs.python.org/3/library/stdtypes.html#str

   (15) https://docs.python.org/3/library/typing.html#typing.Tuple

   (16) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (17) https://docs.python.org/3/library/typing.html#typing.Tuple

   (18) https://docs.python.org/3/library/stdtypes.html#str

   (19) https://docs.python.org/3/library/typing.html#typing.Tuple

   (20) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (21) https://docs.python.org/3/library/stdtypes.html#str

   (22) https://docs.python.org/3/library/typing.html#typing.Tuple

   (23) https://docs.python.org/3/library/constants.html#None

   (24) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (25) https://docs.python.org/3/library/typing.html#typing.List

   (26) https://docs.python.org/3/library/typing.html#typing.Any

   (27) https://docs.python.org/3/library/typing.html#typing.Tuple

   (28) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (29) https://docs.python.org/3/library/typing.html#typing.Tuple

   (30) https://docs.python.org/3/library/stdtypes.html#str

   (31) https://docs.python.org/3/library/typing.html#typing.Tuple

   (32) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (33) https://docs.python.org/3/library/stdtypes.html#str

   (34) https://docs.python.org/3/library/typing.html#typing.List

   (35) https://docs.python.org/3/library/typing.html#typing.Any

   (36) https://docs.python.org/3/library/typing.html#typing.Tuple

   (37) https://docs.python.org/3/library/typing.html#typing.Sequence

   (38) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (39) https://docs.python.org/3/library/typing.html#typing.Tuple

   (40) https://docs.python.org/3/library/typing.html#typing.Tuple

   (41) https://docs.python.org/3/library/typing.html#typing.Sequence

   (42) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (43) https://docs.python.org/3/library/typing.html#typing.Sequence

   (44) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (45) https://docs.python.org/3/library/typing.html#typing.Tuple

   (46) https://docs.python.org/3/library/stdtypes.html#str

   (47) https://docs.python.org/3/library/typing.html#typing.Tuple

   (48) https://docs.python.org/3/library/typing.html#typing.Sequence

   (49) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (50) https://docs.python.org/3/library/stdtypes.html#str

   (51) https://docs.python.org/3/library/typing.html#typing.Tuple

   (52) https://docs.python.org/3/library/typing.html#typing.Tuple

   (53) https://docs.python.org/3/library/typing.html#typing.Sequence

   (54) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (55) https://docs.python.org/3/library/typing.html#typing.Sequence

   (56) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (57) https://docs.python.org/3/library/stdtypes.html#str

   (58) https://docs.python.org/3/library/typing.html#typing.Tuple

   (59) https://docs.python.org/3/library/typing.html#typing.Sequence

   (60) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (61) https://docs.python.org/3/library/typing.html#typing.Sequence

   (62) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (63) https://docs.python.org/3/library/stdtypes.html#str

   (64) https://docs.python.org/3/library/typing.html#typing.Tuple

   (65) https://docs.python.org/3/library/constants.html#None

   (66) https://docs.python.org/3/library/typing.html#typing.Tuple

   (67) https://docs.python.org/3/library/typing.html#typing.Sequence

   (68) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (69) https://docs.python.org/3/library/typing.html#typing.Sequence

   (70) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (71) https://docs.python.org/3/library/typing.html#typing.Tuple

   (72) https://docs.python.org/3/library/constants.html#None

   (73) https://docs.python.org/3/library/typing.html#typing.Sequence

   (74) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (75) https://docs.python.org/3/library/typing.html#typing.Sequence

   (76) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (77) https://docs.python.org/3/library/typing.html#typing.List

   (78) https://docs.python.org/3/library/typing.html#typing.Any

   (79) https://docs.python.org/3/library/typing.html#typing.Tuple

   (80) https://docs.python.org/3/library/typing.html#typing.Sequence

   (81) https://docs.python.org/3/library/typing.html#typing.Tuple

   (82) https://docs.python.org/3/library/typing.html#typing.Tuple

   (83) https://docs.python.org/3/library/typing.html#typing.Sequence

   (84) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (85) https://docs.python.org/3/library/typing.html#typing.Sequence

   (86) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (87) https://docs.python.org/3/library/typing.html#typing.Sequence

   (88) https://docs.python.org/3/library/typing.html#typing.Tuple

   (89) https://docs.python.org/3/library/typing.html#typing.Sequence

   (90) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (91) https://docs.python.org/3/library/typing.html#typing.Sequence

   (92) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (93) https://docs.python.org/3/library/typing.html#typing.Sequence

   (94) https://docs.python.org/3/library/typing.html#typing.Tuple

   (95) https://docs.python.org/3/library/constants.html#None

   (96) https://docs.python.org/3/library/typing.html#typing.Tuple

   (97) https://docs.python.org/3/library/typing.html#typing.Sequence

   (98) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (99) https://docs.python.org/3/library/typing.html#typing.Sequence

   (100) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (101) https://docs.python.org/3/library/typing.html#typing.Sequence

   (102) https://docs.python.org/3/library/typing.html#typing.Tuple

   (103) https://docs.python.org/3/library/constants.html#None

   (104) https://docs.python.org/3/library/typing.html#typing.Sequence

   (105) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (106) https://docs.python.org/3/library/typing.html#typing.Sequence

   (107) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (108) https://docs.python.org/3/library/typing.html#typing.Sequence

   (109) https://docs.python.org/3/library/typing.html#typing.List

   (110) https://docs.python.org/3/library/typing.html#typing.Any

   (111) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (112) https://docs.python.org/3/library/typing.html#typing.Tuple

   (113) https://docs.python.org/3/library/typing.html#typing.Tuple

   (114) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (115) https://docs.python.org/3/library/typing.html#typing.Tuple

   (116) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (117) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (118) https://docs.python.org/3/library/typing.html#typing.Tuple

   (119) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (120) https://docs.python.org/3/library/numbers.html#numbers.Integral

   (121) https://docs.python.org/3/library/stdtypes.html#str

   (122) https://docs.python.org/3/library/typing.html#typing.List

   (123) https://docs.python.org/3/library/typing.html#typing.Any

   (124) https://docs.python.org/3/library/typing.html#typing.TypeVar

   (125) https://docs.python.org/3/library/typing.html#typing.TypeVar

   (126) https://docs.python.org/3/library/typing.html#typing.TypeVar

   (127) https://docs.python.org/3/library/typing.html#typing.TypeVar


File: mpi4py.info,  Node: mpi4py futures,  Next: mpi4py util,  Prev: mpi4py typing,  Up: Top

7 mpi4py.futures
****************

Added in version 3.0.0.

This package provides a high-level interface for asynchronously
executing callables on a pool of worker processes using MPI for
inter-process communication.

The *note mpi4py.futures: 2. package is based on concurrent.futures(1)
from the Python standard library.  More precisely, *note mpi4py.futures:
2. provides the *note MPIPoolExecutor: 21d. class as a concrete
implementation of the abstract class Executor(2).  The submit()(3)
interface schedules a callable to be executed asynchronously and returns
a Future(4) object representing the execution of the callable.
Future(5) instances can be queried for the call result or exception.
Sets of Future(6) instances can be passed to the wait()(7) and
as_completed()(8) functions.

See also
........

Module concurrent.futures(9)

     Documentation of the concurrent.futures(10) standard module.

* Menu:

* MPIPoolExecutor::
* MPICommExecutor::
* Command line::
* Parallel tasks::
* Utilities::
* Examples::
* Citation::

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (2) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor

   (3) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor.submit

   (4) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (5) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (6) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (7) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.wait

   (8) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.as_completed

   (9) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures

   (10) 
https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures


File: mpi4py.info,  Node: MPIPoolExecutor,  Next: MPICommExecutor,  Up: mpi4py futures

7.1 MPIPoolExecutor
===================

The *note MPIPoolExecutor: 21d. class uses a pool of MPI processes to
execute calls asynchronously.  By performing computations in separate
processes, it allows to side-step the global interpreter lock(1) but
also means that only picklable objects can be executed and returned.
The __main__(2) module must be importable by worker processes, thus
*note MPIPoolExecutor: 21d. instances may not work in the interactive
interpreter.

*note MPIPoolExecutor: 21d. takes advantage of the dynamic process
management features introduced in the MPI-2 standard.  In particular,
the *note MPI.Intracomm.Spawn: 6b. method of *note MPI.COMM_SELF: 23. is
used in the master (or parent) process to spawn new worker (or child)
processes running a Python interpreter.  The master process uses a
separate thread (one for each *note MPIPoolExecutor: 21d. instance) to
communicate back and forth with the workers.  The worker processes serve
the execution of tasks in the main (and only) thread until they are
signaled for completion.

     Note: The worker processes must import the main script in order to
     'unpickle' any callable defined in the __main__(3) module and
     submitted from the master process.  Furthermore, the callables may
     need access to other global variables.  At the worker processes,
     *note mpi4py.futures: 2. executes the main script code (using the
     runpy(4) module) under the ‘__worker__’ namespace to define the
     __main__(5) module.  The __main__(6) and ‘__worker__’ modules are
     added to sys.modules(7) (both at the master and worker processes)
     to ensure proper 'pickling' and 'unpickling'.

     Warning: During the initial import phase at the workers, the main
     script cannot create and use new *note MPIPoolExecutor: 21d.
     instances.  Otherwise, each worker would attempt to spawn a new
     pool of workers, leading to infinite recursion.  *note
     mpi4py.futures: 2. detects such recursive attempts to spawn new
     workers and aborts the MPI execution environment.  As the main
     script code is run under the ‘__worker__’ namespace, the easiest
     way to avoid spawn recursion is using the idiom ‘if __name__ ==
     '__main__': ...’ in the main script.

 -- Class: mpi4py.futures.MPIPoolExecutor (max_workers=None,
          initializer=None, initargs=(), **kwargs)

     An Executor(8) subclass that executes calls asynchronously using a
     pool of at most 'max_workers' processes.  If 'max_workers' is
     None(9) or not given, its value is determined from the *note
     MPI4PY_FUTURES_MAX_WORKERS: 21f. environment variable if set, or
     the MPI universe size if set, otherwise a single worker process is
     spawned.  If 'max_workers' is lower than or equal to ‘0’, then a
     ValueError(10) will be raised.

     'initializer' is an optional callable that is called at the start
     of each worker process before executing any tasks; 'initargs' is a
     tuple of arguments passed to the initializer.  If 'initializer'
     raises an exception, all pending tasks and any attempt to submit
     new tasks to the pool will raise a BrokenExecutor(11) exception.

     Other parameters:

        * 'python_exe': Path to the Python interpreter executable used
          to spawn worker processes, otherwise sys.executable(12) is
          used.

        * 'python_args': list(13) or iterable with additional command
          line flags to pass to the Python executable.  Command line
          flags determined from inspection of sys.flags(14),
          sys.warnoptions(15) and sys._xoptions(16) in are passed
          unconditionally.

        * 'mpi_info': dict(17) or iterable yielding ‘(key, value)’
          pairs.  These ‘(key, value)’ pairs are passed (through an
          *note MPI.Info: d4. object) to the *note MPI.Intracomm.Spawn:
          6b. call used to spawn worker processes.  This mechanism
          allows telling the MPI runtime system where and how to start
          the processes.  Check the documentation of the backend MPI
          implementation about the set of keys it interprets and the
          corresponding format for values.

        * 'globals': dict(18) or iterable yielding ‘(name, value)’ pairs
          to initialize the main module namespace in worker processes.

        * 'main': If set to False(19), do not import the __main__(20)
          module in worker processes.  Setting 'main' to False(21)
          prevents worker processes from accessing definitions in the
          parent __main__(22) namespace.

        * 'path': list(23) or iterable with paths to append to
          sys.path(24) in worker processes to extend the module search
          path(25).

        * 'wdir': Path to set the current working directory in worker
          processes using os.chdir()(26).  The initial working directory
          is set by the MPI implementation.  Quality MPI implementations
          should honor a ‘wdir’ info key passed through 'mpi_info',
          although such feature is not mandatory.

        * 'env': dict(27) or iterable yielding ‘(name, value)’ pairs
          with environment variables to update os.environ(28) in worker
          processes.  The initial environment is set by the MPI
          implementation.  MPI implementations may allow setting the
          initial environment through 'mpi_info', however such feature
          is not required nor recommended by the MPI standard.

        * 'use_pkl5': If set to True(29), use ‘pickle5’ with out-of-band
          buffers for interprocess communication.  If 'use_pkl5' is set
          to None(30) or not given, its value is determined from the
          *note MPI4PY_FUTURES_USE_PKL5: 220. environment variable.
          Using ‘pickle5’ with out-of-band buffers may benefit
          applications dealing with large buffer-like objects like NumPy
          arrays.  See *note mpi4py.util.pkl5: 8. for additional
          information.

        * 'backoff': float(31) value specifying the maximum number of
          seconds a worker thread or process suspends execution with
          time.sleep()(32) while idle-waiting.  If not set, its value is
          determined from the *note MPI4PY_FUTURES_BACKOFF: 221.
          environment variable if set, otherwise the default value of
          0.001 seconds is used.  Lower values will reduce latency and
          increase execution throughput for very short-lived tasks,
          albeit at the expense of spinning CPU cores and increased
          energy consumption.

      -- Method: submit (func, *args, **kwargs)

          Schedule the callable, 'func', to be executed as ‘func(*args,
          **kwargs)’ and returns a Future(33) object representing the
          execution of the callable.

               executor = MPIPoolExecutor(max_workers=1)
               future = executor.submit(pow, 321, 1234)
               print(future.result())

      -- Method: map (func, *iterables, timeout=None, chunksize=1,
               **kwargs)

          Equivalent to map(func, *iterables)(34) except 'func' is
          executed asynchronously and several calls to 'func' may be
          made concurrently, out-of-order, in separate processes.  The
          returned iterator raises a TimeoutError(35) if __next__()(36)
          is called and the result isn’t available after 'timeout'
          seconds from the original call to *note map(): 223.  'timeout'
          can be an int or a float.  If 'timeout' is not specified or
          None(37), there is no limit to the wait time.  If a call
          raises an exception, then that exception will be raised when
          its value is retrieved from the iterator.  This method chops
          'iterables' into a number of chunks which it submits to the
          pool as separate tasks.  The (approximate) size of these
          chunks can be specified by setting 'chunksize' to a positive
          integer.  For very long iterables, using a large value for
          'chunksize' can significantly improve performance compared to
          the default size of one.  By default, the returned iterator
          yields results in-order, waiting for successive tasks to
          complete .  This behavior can be changed by passing the
          keyword argument 'unordered' as True(38), then the result
          iterator will yield a result as soon as any of the tasks
          complete.

               executor = MPIPoolExecutor(max_workers=3)
               for result in executor.map(pow, [2]*32, range(32)):
                   print(result)

      -- Method: starmap (func, iterable, timeout=None, chunksize=1,
               **kwargs)

          Equivalent to itertools.starmap(func, iterable)(39).  Used
          instead of *note map(): 223. when argument parameters are
          already grouped in tuples from a single iterable (the data has
          been “pre-zipped”).  *note map(func, *iterable): 223. is
          equivalent to *note starmap(func, zip(*iterable)): 224.

               executor = MPIPoolExecutor(max_workers=3)
               iterable = ((2, n) for n in range(32))
               for result in executor.starmap(pow, iterable):
                   print(result)

      -- Method: shutdown (wait=True, cancel_futures=False)

          Signal the executor that it should free any resources that it
          is using when the currently pending futures are done
          executing.  Calls to *note submit(): 222. and *note map():
          223. made after *note shutdown(): 225. will raise
          RuntimeError(40).

          If 'wait' is True(41) then this method will not return until
          all the pending futures are done executing and the resources
          associated with the executor have been freed.  If 'wait' is
          False(42) then this method will return immediately and the
          resources associated with the executor will be freed when all
          pending futures are done executing.  Regardless of the value
          of 'wait', the entire Python program will not exit until all
          pending futures are done executing.

          If 'cancel_futures' is True(43), this method will cancel all
          pending futures that the executor has not started running.
          Any futures that are completed or running won’t be cancelled,
          regardless of the value of 'cancel_futures'.

          You can avoid having to call this method explicitly if you use
          the with(44) statement, which will shutdown the executor
          instance (waiting as if *note shutdown(): 225. were called
          with 'wait' set to True(45)).

               import time
               with MPIPoolExecutor(max_workers=1) as executor:
                   future = executor.submit(time.sleep, 2)
               assert future.done()

      -- Method: bootup (wait=True)

          Signal the executor that it should allocate eagerly any
          required resources (in particular, MPI worker processes).  If
          'wait' is True(46), then *note bootup(): 226. will not return
          until the executor resources are ready to process submissions.
          Resources are automatically allocated in the first call to
          *note submit(): 222, thus calling *note bootup(): 226.
          explicitly is seldom needed.

      -- Attribute: num_workers

          Number or worker processes in the pool.

 -- Environment Variable: MPI4PY_FUTURES_MAX_WORKERS

     If the 'max_workers' parameter to *note MPIPoolExecutor: 21d. is
     None(47) or not given, the *note MPI4PY_FUTURES_MAX_WORKERS: 21f.
     environment variable provides a fallback value for the maximum
     number of MPI worker processes to spawn.

     Added in version 3.1.0.

 -- Environment Variable: MPI4PY_FUTURES_USE_PKL5

     If the 'use_pkl5' keyword argument to *note MPIPoolExecutor: 21d.
     is None(48) or not given, the *note MPI4PY_FUTURES_USE_PKL5: 220.
     environment variable provides a fallback value for whether the
     executor should use ‘pickle5’ with out-of-band buffers for
     interprocess communication.  Accepted values are ‘0’ and ‘1’
     (interpreted as False(49) and True(50), respectively), and strings
     specifying a YAML boolean(51) value (case-insensitive).  Using
     ‘pickle5’ with out-of-band buffers may benefit applications dealing
     with large buffer-like objects like NumPy arrays.  See *note
     mpi4py.util.pkl5: 8. for additional information.

     Added in version 4.0.0.

 -- Environment Variable: MPI4PY_FUTURES_BACKOFF

     If the 'backoff' keyword argument to *note MPIPoolExecutor: 21d. is
     not given, the *note MPI4PY_FUTURES_BACKOFF: 221. environment
     variable can be set to a float(52) value specifying the maximum
     number of seconds a worker thread or process suspends execution
     with time.sleep()(53) while idle-waiting.  If not set, the default
     backoff value is 0.001 seconds.  Lower values will reduce latency
     and increase execution throughput for very short-lived tasks,
     albeit at the expense of spinning CPU cores and increased energy
     consumption.

     Added in version 4.0.0.

     Note: As the master process uses a separate thread to perform MPI
     communication with the workers, the backend MPI implementation
     should provide support for *note MPI.THREAD_MULTIPLE: 18d.
     However, some popular MPI implementations do not support yet
     concurrent MPI calls from multiple threads.  Additionally, users
     may decide to initialize MPI with a lower level of thread support.
     If the level of thread support in the backend MPI is less than
     *note MPI.THREAD_MULTIPLE: 18d, *note mpi4py.futures: 2. will use a
     global lock to serialize MPI calls.  If the level of thread support
     is less than *note MPI.THREAD_SERIALIZED: 18c, *note
     mpi4py.futures: 2. will emit a RuntimeWarning(54).

     Warning: If the level of thread support in the backend MPI is less
     than *note MPI.THREAD_SERIALIZED: 18c. (i.e, it is either *note
     MPI.THREAD_SINGLE: 18a. or *note MPI.THREAD_FUNNELED: 18b.), in
     theory *note mpi4py.futures: 2. cannot be used.  Rather than
     raising an exception, *note mpi4py.futures: 2. emits a warning and
     takes a “cross-fingers” attitude to continue execution in the hope
     that serializing MPI calls with a global lock will actually work.

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/glossary.html#term-global-interpreter-lock

   (2) https://docs.python.org/3/library/__main__.html#module-__main__

   (3) https://docs.python.org/3/library/__main__.html#module-__main__

   (4) https://docs.python.org/3/library/runpy.html#module-runpy

   (5) https://docs.python.org/3/library/__main__.html#module-__main__

   (6) https://docs.python.org/3/library/__main__.html#module-__main__

   (7) https://docs.python.org/3/library/sys.html#sys.modules

   (8) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/exceptions.html#ValueError

   (11) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.BrokenExecutor

   (12) https://docs.python.org/3/library/sys.html#sys.executable

   (13) https://docs.python.org/3/library/stdtypes.html#list

   (14) https://docs.python.org/3/library/sys.html#sys.flags

   (15) https://docs.python.org/3/library/sys.html#sys.warnoptions

   (16) https://docs.python.org/3/library/sys.html#sys._xoptions

   (17) https://docs.python.org/3/library/stdtypes.html#dict

   (18) https://docs.python.org/3/library/stdtypes.html#dict

   (19) https://docs.python.org/3/library/constants.html#False

   (20) https://docs.python.org/3/library/__main__.html#module-__main__

   (21) https://docs.python.org/3/library/constants.html#False

   (22) https://docs.python.org/3/library/__main__.html#module-__main__

   (23) https://docs.python.org/3/library/stdtypes.html#list

   (24) https://docs.python.org/3/library/sys.html#sys.path

   (25) https://docs.python.org/3/tutorial/modules.html#tut-searchpath

   (26) https://docs.python.org/3/library/os.html#os.chdir

   (27) https://docs.python.org/3/library/stdtypes.html#dict

   (28) https://docs.python.org/3/library/os.html#os.environ

   (29) https://docs.python.org/3/library/constants.html#True

   (30) https://docs.python.org/3/library/constants.html#None

   (31) https://docs.python.org/3/library/functions.html#float

   (32) https://docs.python.org/3/library/time.html#time.sleep

   (33) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (34) https://docs.python.org/3/library/functions.html#map

   (35) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.TimeoutError

   (36) 
https://docs.python.org/3/library/stdtypes.html#iterator.__next__

   (37) https://docs.python.org/3/library/constants.html#None

   (38) https://docs.python.org/3/library/constants.html#True

   (39) 
https://docs.python.org/3/library/itertools.html#itertools.starmap

   (40) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (41) https://docs.python.org/3/library/constants.html#True

   (42) https://docs.python.org/3/library/constants.html#False

   (43) https://docs.python.org/3/library/constants.html#True

   (44) https://docs.python.org/3/reference/compound_stmts.html#with

   (45) https://docs.python.org/3/library/constants.html#True

   (46) https://docs.python.org/3/library/constants.html#True

   (47) https://docs.python.org/3/library/constants.html#None

   (48) https://docs.python.org/3/library/constants.html#None

   (49) https://docs.python.org/3/library/constants.html#False

   (50) https://docs.python.org/3/library/constants.html#True

   (51) https://yaml.org/type/bool.html

   (52) https://docs.python.org/3/library/functions.html#float

   (53) https://docs.python.org/3/library/time.html#time.sleep

   (54) https://docs.python.org/3/library/exceptions.html#RuntimeWarning


File: mpi4py.info,  Node: MPICommExecutor,  Next: Command line,  Prev: MPIPoolExecutor,  Up: mpi4py futures

7.2 MPICommExecutor
===================

Legacy MPI-1 implementations (as well as some vendor MPI-2
implementations) do not support the dynamic process management features
introduced in the MPI-2 standard.  Additionally, job schedulers and
batch systems in supercomputing facilities may pose additional
complications to applications using the ‘MPI_Comm_spawn()’ routine.

With these issues in mind, *note mpi4py.futures: 2. supports an
additional, more traditional, SPMD-like usage pattern requiring MPI-1
calls only.  Python applications are started the usual way, e.g., using
the ‘mpiexec’ command.  Python code should make a collective call to the
*note MPICommExecutor: 229. context manager to partition the set of MPI
processes within a MPI communicator in one master processes and many
workers processes.  The master process gets access to an *note
MPIPoolExecutor: 21d. instance to submit tasks.  Meanwhile, the worker
process follow a different execution path and team-up to execute the
tasks submitted from the master.

Besides alleviating the lack of dynamic process management features in
legacy MPI-1 or partial MPI-2 implementations, the *note
MPICommExecutor: 229. context manager may be useful in classic MPI-based
Python applications willing to take advantage of the simple, task-based,
master/worker approach available in the *note mpi4py.futures: 2.
package.

 -- Class: mpi4py.futures.MPICommExecutor (comm=None, root=0)

     Context manager for *note MPIPoolExecutor: 21d.  This context
     manager splits a MPI (intra)communicator 'comm' (defaults to *note
     MPI.COMM_WORLD: 24. if not provided or None(1)) in two disjoint
     sets: a single master process (with rank 'root' in 'comm') and the
     remaining worker processes.  These sets are then connected through
     an intercommunicator.  The target of the with(2) statement is
     assigned either an *note MPIPoolExecutor: 21d. instance (at the
     master) or None(3) (at the workers).

          from mpi4py import MPI
          from mpi4py.futures import MPICommExecutor

          with MPICommExecutor(MPI.COMM_WORLD, root=0) as executor:
              if executor is not None:
                 future = executor.submit(abs, -42)
                 assert future.result() == 42
                 answer = set(executor.map(abs, [-42, 42]))
                 assert answer == {42}

     Warning: If *note MPICommExecutor: 229. is passed a communicator of
     size one (e.g., *note MPI.COMM_SELF: 23.), then the executor
     instance assigned to the target of the with(4) statement will
     execute all submitted tasks in a single worker thread, thus
     ensuring that task execution still progress asynchronously.
     However, the GIL(5) will prevent the main and worker threads from
     running concurrently in multicore processors.  Moreover, the thread
     context switching may harm noticeably the performance of CPU-bound
     tasks.  In case of I/O-bound tasks, the GIL(6) is not usually an
     issue, however, as a single worker thread is used, it progress one
     task at a time.  We advice against using *note MPICommExecutor:
     229. with communicators of size one and suggest refactoring your
     code to use instead a ThreadPoolExecutor(7).

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/reference/compound_stmts.html#with

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/reference/compound_stmts.html#with

   (5) https://docs.python.org/3/glossary.html#term-GIL

   (6) https://docs.python.org/3/glossary.html#term-GIL

   (7) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor


File: mpi4py.info,  Node: Command line,  Next: Parallel tasks,  Prev: MPICommExecutor,  Up: mpi4py futures

7.3 Command line
================

Recalling the issues related to the lack of support for dynamic process
management features in MPI implementations, *note mpi4py.futures: 2.
supports an alternative usage pattern where Python code (either from
scripts, modules, or zip files) is run under command line control of the
*note mpi4py.futures: 2. package by passing ‘-m mpi4py.futures’ to the
‘python’ executable.  The ‘mpi4py.futures’ invocation should be passed a
'pyfile' path to a script (or a zipfile/directory containing a
‘__main__.py’ file).  Additionally, ‘mpi4py.futures’ accepts ‘-m MOD’ to
execute a module named 'mod', ‘-c CMD’ to execute a command string
'cmd', or even ‘-’ to read commands from standard input (sys.stdin(1)).
Summarizing, ‘mpi4py.futures’ can be invoked in the following ways:

   * ‘$ mpiexec -n NUMPROCS python -m mpi4py.futures PYFILE [arg] ...’

   * ‘$ mpiexec -n NUMPROCS python -m mpi4py.futures -m MOD [arg] ...’

   * ‘$ mpiexec -n NUMPROCS python -m mpi4py.futures -c CMD [arg] ...’

   * ‘$ mpiexec -n NUMPROCS python -m mpi4py.futures - [arg] ...’

Before starting the main script execution, *note mpi4py.futures: 2.
splits *note MPI.COMM_WORLD: 24. in one master (the process with rank 0
in *note MPI.COMM_WORLD: 24.) and 'numprocs - 1' workers and connects
them through an MPI intercommunicator.  Afterwards, the master process
proceeds with the execution of the user script code, which eventually
creates *note MPIPoolExecutor: 21d. instances to submit tasks.
Meanwhile, the worker processes follow a different execution path to
serve the master.  Upon successful termination of the main script at the
master, the entire MPI execution environment exists gracefully.  In case
of any unhandled exception in the main script, the master process calls
‘MPI.COMM_WORLD.Abort(1)’ to prevent deadlocks and force termination of
entire MPI execution environment.

     Warning: Running scripts under command line control of *note
     mpi4py.futures: 2. is quite similar to executing a single-process
     application that spawn additional workers as required.  However,
     there is a very important difference users should be aware of.  All
     *note MPIPoolExecutor: 21d. instances created at the master will
     share the pool of workers.  Tasks submitted at the master from many
     different executors will be scheduled for execution in random order
     as soon as a worker is idle.  Any executor can easily starve all
     the workers (e.g., by calling *note MPIPoolExecutor.map(): 223.
     with long iterables).  If that ever happens, submissions from other
     executors will not be serviced until free workers are available.

See also
........

Command line(2)

     Documentation on Python command line interface.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/sys.html#sys.stdin

   (2) https://docs.python.org/3/using/cmdline.html#using-on-cmdline


File: mpi4py.info,  Node: Parallel tasks,  Next: Utilities,  Prev: Command line,  Up: mpi4py futures

7.4 Parallel tasks
==================

The *note mpi4py.futures: 2. package favors an embarrassingly parallel
execution model involving a series of sequential tasks independent of
each other and executed asynchronously.  Albeit unnatural, *note
MPIPoolExecutor: 21d. can still be used for handling workloads involving
parallel tasks, where worker processes communicate and coordinate each
other via MPI.

 -- Function: mpi4py.futures.get_comm_workers ()

     Access an intracommunicator grouping MPI worker processes.

Executing parallel tasks with *note mpi4py.futures: 2. requires
following some rules, cf.  highlighted lines in example *note cpi.py:
22d. :

   * Use *note MPIPoolExecutor.num_workers: 227. to determine the number
     of worker processes in the executor and 'submit exactly one
     callable per worker process' using the *note
     MPIPoolExecutor.submit(): 222. method.

   * The submitted callable must use *note get_comm_workers(): 22c. to
     access an intracommunicator grouping MPI worker processes.
     Afterwards, it is highly recommended calling the *note Barrier():
     22e. method on the communicator.  The barrier synchronization
     ensures that every worker process is executing the submitted
     callable exactly once.  Afterwards, the parallel task can safely
     perform any kind of point-to-point or collective operation using
     the returned communicator.

   * The Future(1) instances returned by *note MPIPoolExecutor.submit():
     222. should be collected in a sequence.  Use wait()(2) with the
     sequence of Future(3) instances to ensure logical completion of the
     parallel task.

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (2) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.wait

   (3) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future


File: mpi4py.info,  Node: Utilities,  Next: Examples,  Prev: Parallel tasks,  Up: mpi4py futures

7.5 Utilities
=============

The *note mpi4py.futures: 2. package provides additional utilities for
handling Future(1) instances.

 -- Function: mpi4py.futures.collect (fs)

     Gather a collection of futures in a new future.


     Parameters: ‘fs’ – Collection of futures.


     Returns: New future producing as result a list with results from
     'fs'.

 -- Function: mpi4py.futures.compose (future, resulthook=None,
          excepthook=None)

     Compose the completion of a future with result and exception
     handlers.


     Parameters:

        * ‘future’ – Input future instance.

        * ‘resulthook’ – Function to be called once the input future
          completes with success.  Once the input future finish running
          with success, its result value is the input argument for
          'resulthook'.  The result of 'resulthook' is set as the result
          of the output future.  If 'resulthook' is ‘None’, the output
          future is completed directly with the result of the input
          future.

        * ‘excepthook’ – Function to be called once the input future
          completes with failure.  Once the input future finish running
          with failure, its exception value is the input argument for
          'excepthook'.  If 'excepthook' returns an Exception(2)
          instance, it is set as the exception of the output future.
          Otherwise, the result of 'excepthook' is set as the result of
          the output future.  If 'excepthook' is ‘None’, the output
          future is set as failed with the exception from the input
          future.


     Returns: Output future instance to be completed once the input
     future is completed and either 'resulthook' or 'excepthook' finish
     executing.

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future

   (2) https://docs.python.org/3/library/exceptions.html#Exception


File: mpi4py.info,  Node: Examples,  Next: Citation,  Prev: Utilities,  Up: mpi4py futures

7.6 Examples
============

* Menu:

* Computing the Julia set::
* Computing Pi (parallel task): Computing Pi parallel task.


File: mpi4py.info,  Node: Computing the Julia set,  Next: Computing Pi parallel task,  Up: Examples

7.6.1 Computing the Julia set
-----------------------------

The following *note julia.py: 234. script computes the Julia set(1) and
dumps an image to disk in binary PGM(2) format.  The code starts by
importing *note MPIPoolExecutor: 21d. from the *note mpi4py.futures: 2.
package.  Next, some global constants and functions implement the
computation of the Julia set.  The computations are protected with the
standard ‘if __name__ == '__main__': ...’ idiom.  The image is computed
by whole scanlines submitting all these tasks at once using the *note
map: 223. method.  The result iterator yields scanlines in-order as the
tasks complete.  Finally, each scanline is dumped to disk.

     from mpi4py.futures import MPIPoolExecutor

     x0, x1, w = -2.0, +2.0, 640*2
     y0, y1, h = -1.5, +1.5, 480*2
     dx = (x1 - x0) / w
     dy = (y1 - y0) / h

     c = complex(0, 0.65)

     def julia(x, y):
         z = complex(x, y)
         n = 255
         while abs(z) < 3 and n > 1:
             z = z**2 + c
             n -= 1
         return n

     def julia_line(k):
         line = bytearray(w)
         y = y1 - k * dy
         for j in range(w):
             x = x0 + j * dx
             line[j] = julia(x, y)
         return line

     if __name__ == '__main__':

         with MPIPoolExecutor() as executor:
             image = executor.map(julia_line, range(h))
             with open('julia.pgm', 'wb') as f:
                 f.write(b'P5 %d %d %d\n' % (w, h, 255))
                 for line in image:
                     f.write(line)

LiteralBlock: ‘julia.py’

The recommended way to execute the script is by using the ‘mpiexec’
command specifying one MPI process (master) and (optional but
recommended) the desired MPI universe size, which determines the number
of additional dynamically spawned processes (workers).  The MPI universe
size is provided either by a batch system or set by the user via
command-line arguments to ‘mpiexec’ or environment variables.  Below we
provide examples for MPICH and Open MPI implementations (3).  In all of
these examples, the ‘mpiexec’ command launches a single master process
running the Python interpreter and executing the main script.  When
required, *note mpi4py.futures: 2. spawns the pool of 16 worker
processes.  The master submits tasks to the workers and waits for the
results.  The workers receive incoming tasks, execute them, and send
back the results to the master.

When using MPICH implementation or its derivatives based on the Hydra
process manager, users can set the MPI universe size via the ‘-usize’
argument to ‘mpiexec’:

     $ mpiexec -n 1 -usize 17 python julia.py

or, alternatively, by setting the ‘MPIEXEC_UNIVERSE_SIZE’ environment
variable:

     $ env MPIEXEC_UNIVERSE_SIZE=17 mpiexec -n 1 python julia.py

In the Open MPI implementation, the MPI universe size can be set via the
‘-host’ argument to ‘mpiexec’:

     $ mpiexec -n 1 -host localhost:17 python julia.py

Another way to specify the number of workers is to use the *note
mpi4py.futures: 2.-specific environment variable *note
MPI4PY_FUTURES_MAX_WORKERS: 21f.:

     $ env MPI4PY_FUTURES_MAX_WORKERS=16 mpiexec -n 1 python julia.py

Note that in this case, the MPI universe size is ignored.

Alternatively, users may decide to execute the script in a more
traditional way, that is, all the MPI processes are started at once.
The user script is run under command-line control of *note
mpi4py.futures: 2. passing the -m(4) flag to the ‘python’ executable:

     $ mpiexec -n 17 python -m mpi4py.futures julia.py

As explained previously, the 17 processes are partitioned in one master
and 16 workers.  The master process executes the main script while the
workers execute the tasks submitted by the master.

   ---------- Footnotes ----------

   (1) https://en.wikipedia.org/wiki/Julia_set

   (2) https://netpbm.sourceforge.net/doc/pgm.html

   (3) When using an MPI implementation other than MPICH or Open MPI,
please check the documentation of the implementation and/or batch system
for the ways to specify the desired MPI universe size.

   (4) https://docs.python.org/3/using/cmdline.html#using-on-cmdline


File: mpi4py.info,  Node: Computing Pi parallel task,  Prev: Computing the Julia set,  Up: Examples

7.6.2 Computing Pi (parallel task)
----------------------------------

The number \pi can be approximated via numerical integration with the
simple midpoint rule, that is:

     \pi = \int_{0}^{1} \frac{4}{1+x^2} \,dx \approx \frac{1}{n} \sum_{i=1}^{n} \frac{4}{1 + \left[\frac{1}{n} \left(i-\frac{1}{2}\right) \right]^2} .

The following *note cpi.py: 22d. script computes such approximations
using *note mpi4py.futures: 2. with a parallel task involving a
collective reduction operation.  Highlighted lines correspond to the
rules discussed in *note Parallel tasks: 22b.

     import math
     import sys
     from mpi4py.futures import MPIPoolExecutor, wait
     from mpi4py.futures import get_comm_workers


     def compute_pi(n):
         # Access intracommunicator and synchronize
         comm = get_comm_workers()
         comm.Barrier()

         rank = comm.Get_rank()
         size = comm.Get_size()

         # Local computation
         h = 1.0 / n
         s = 0.0
         for i in range(rank + 1, n + 1, size):
             x = h * (i - 0.5)
             s += 4.0 / (1.0 + x**2)
         pi_partial = s * h

         # Parallel reduce-to-all
         pi = comm.allreduce(pi_partial)

         # All workers return the same value
         return pi


     if __name__ == '__main__':
         n = int(sys.argv[1]) if len(sys.argv) > 1 else 256

         with MPIPoolExecutor() as executor:
             # Submit exactly one callable per worker
             P = executor.num_workers
             fs = [executor.submit(compute_pi, n) for _ in range(P)]

             # Wait for all workers to finish
             wait(fs)

             # Get result from the first future object.
             # In this particular example, due to using reduce-to-all,
             # all the other future objects hold the same result value.
             pi = fs[0].result()
             print(
                 f"pi: {pi:.16f}, error: {abs(pi - math.pi):.3e}",
                 f"({n:d} intervals, {P:d} workers)",
             )

LiteralBlock: ‘cpi.py’

To run in modern MPI-2 mode:

     $ env MPI4PY_FUTURES_MAX_WORKERS=4 mpiexec -n 1 python cpi.py 128
     pi: 3.1415977398528137, error: 5.086e-06 (128 intervals, 4 workers)

     $ env MPI4PY_FUTURES_MAX_WORKERS=8 mpiexec -n 1 python cpi.py 512
     pi: 3.1415929714812316, error: 3.179e-07 (512 intervals, 8 workers)

To run in legacy MPI-1 mode:

     $ mpiexec -n 5 python -m mpi4py.futures cpi.py 128
     pi: 3.1415977398528137, error: 5.086e-06 (128 intervals, 4 workers)

     $ mpiexec -n 9 python -m mpi4py.futures cpi.py 512
     pi: 3.1415929714812316, error: 3.179e-07 (512 intervals, 8 workers)


File: mpi4py.info,  Node: Citation,  Prev: Examples,  Up: mpi4py futures

7.7 Citation
============

If *note mpi4py.futures: 2. been significant to a project that leads to
an academic publication, please acknowledge our work by citing the
following article *note [mpi4py-futures]: 237.:

(mpi4py-futures) M. Rogowski, S. Aseeri, D. Keyes, and L. Dalcin,
'mpi4py.futures: MPI-Based Asynchronous Task Execution for Python', IEEE
Transactions on Parallel and Distributed Systems, 34(2):611-622, 2023.
‘https://doi.org/10.1109/TPDS.2022.3225481’


File: mpi4py.info,  Node: mpi4py util,  Next: mpi4py run,  Prev: mpi4py futures,  Up: Top

8 mpi4py.util
*************

Added in version 3.1.0.

The *note mpi4py.util: 6. package collects miscellaneous utilities
within the intersection of Python and MPI.

* Menu:

* mpi4py.util.dtlib: mpi4py util dtlib.
* mpi4py.util.pkl5: mpi4py util pkl5.
* mpi4py.util.pool: mpi4py util pool.
* mpi4py.util.sync: mpi4py util sync.


File: mpi4py.info,  Node: mpi4py util dtlib,  Next: mpi4py util pkl5,  Up: mpi4py util

8.1 mpi4py.util.dtlib
=====================

Added in version 3.1.0.

The *note mpi4py.util.dtlib: 7. module provides converter routines
between NumPy and MPI datatypes.

 -- Function: mpi4py.util.dtlib.from_numpy_dtype (dtype)

     Convert NumPy datatype to MPI datatype.


     Parameters: ‘dtype’ (DTypeLike(1)) – NumPy dtype-like object.


     Return type: *note Datatype: d0.

 -- Function: mpi4py.util.dtlib.to_numpy_dtype (datatype)

     Convert MPI datatype to NumPy datatype.


     Parameters: ‘datatype’ (*note Datatype: d0.) – MPI datatype.


     Return type: dtype(2)[Any(3)]

   ---------- Footnotes ----------

   (1) 
https://numpy.org/doc/stable/reference/typing.html#numpy.typing.DTypeLike

   (2) 
https://numpy.org/doc/stable/reference/generated/numpy.dtype.html#numpy.dtype

   (3) https://docs.python.org/3/library/typing.html#typing.Any


File: mpi4py.info,  Node: mpi4py util pkl5,  Next: mpi4py util pool,  Prev: mpi4py util dtlib,  Up: mpi4py util

8.2 mpi4py.util.pkl5
====================

Added in version 3.1.0.

pickle(1) protocol 5 (see PEP 574(2)) introduced support for out-of-band
buffers, allowing for more efficient handling of certain object types
with large memory footprints.

MPI for Python uses the traditional in-band handling of buffers.  This
approach is appropriate for communicating non-buffer Python objects, or
buffer-like objects with small memory footprints.  For point-to-point
communication, in-band buffer handling allows for the communication of a
pickled stream with a single MPI message, at the expense of additional
CPU and memory overhead in the pickling and unpickling steps.

The *note mpi4py.util.pkl5: 8. module provides communicator wrapper
classes reimplementing pickle-based point-to-point and collective
communication methods using pickle protocol 5.  Handling out-of-band
buffers necessarily involves multiple MPI messages, thus increasing
latency and hurting performance in case of small size data.  However, in
case of large size data, the zero-copy savings of out-of-band buffer
handling more than offset the extra latency costs.  Additionally, these
wrapper methods overcome the infamous 2 GiB message count limit (MPI-1
to MPI-3).

     Note: Support for pickle protocol 5 is available in the pickle(3)
     module within the Python standard library since Python 3.8.
     Previous Python 3 releases can use the ‘pickle5’ backport, which is
     available on PyPI(4) and can be installed with:

          python -m pip install pickle5

 -- Class: mpi4py.util.pkl5.Request

     Request.

     Custom request class for nonblocking communications.

          Note: *note Request: 240. is not a subclass of *note
          mpi4py.MPI.Request: 43.

      -- Method: Free ()

          Free a communication request.


          Return type: None(5)

      -- Method: free ()

          Free a communication request.


          Return type: None(6)

      -- Method: cancel ()

          Cancel a communication request.


          Return type: None(7)

      -- Method: get_status (status=None)

          Non-destructive test for the completion of a request.


          Parameters: ‘status’ (*note Status: d1.‘ | ’None(8))


          Return type: bool(9)

      -- Method: test (status=None)

          Test for the completion of a request.


          Parameters: ‘status’ (*note Status: d1.‘ | ’None(10))


          Return type: tuple(11)[bool(12), Any(13) | None(14)]

      -- Method: wait (status=None)

          Wait for a request to complete.


          Parameters: ‘status’ (*note Status: d1.‘ | ’None(15))


          Return type: Any(16)

      -- Method: classmethod get_status_all (requests, statuses=None)

          Non-destructive test for the completion of all requests.


          Classmethod:

      -- Method: classmethod testall (requests, statuses=None)

          Test for the completion of all requests.


          Classmethod:

      -- Method: classmethod waitall (requests, statuses=None)

          Wait for all requests to complete.


          Classmethod:

 -- Class: mpi4py.util.pkl5.Message

     Message.

     Custom message class for matching probes.

          Note: *note Message: 24a. is not a subclass of *note
          mpi4py.MPI.Message: d7.

      -- Method: free ()

          Do nothing.


          Return type: None(17)

      -- Method: recv (status=None)

          Blocking receive of matched message.


          Parameters: ‘status’ (*note Status: d1.‘ | ’None(18))


          Return type: Any(19)

      -- Method: irecv ()

          Nonblocking receive of matched message.


          Return type: *note Request: 240.

      -- Method: classmethod probe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Blocking test for a matched message.


          Classmethod:

      -- Method: classmethod iprobe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Nonblocking test for a matched message.


          Classmethod:

 -- Class: mpi4py.util.pkl5.Comm

     Communicator.

     Base communicator wrapper class.

      -- Method: send (obj, dest, tag=0)

          Blocking send in standard mode.


          Parameters:

             * ‘obj’ (Any(20))

             * ‘dest’ (int(21))

             * ‘tag’ (int(22))


          Return type: None(23)

      -- Method: bsend (obj, dest, tag=0)

          Blocking send in buffered mode.


          Parameters:

             * ‘obj’ (Any(24))

             * ‘dest’ (int(25))

             * ‘tag’ (int(26))


          Return type: None(27)

      -- Method: ssend (obj, dest, tag=0)

          Blocking send in synchronous mode.


          Parameters:

             * ‘obj’ (Any(28))

             * ‘dest’ (int(29))

             * ‘tag’ (int(30))


          Return type: None(31)

      -- Method: isend (obj, dest, tag=0)

          Nonblocking send in standard mode.


          Parameters:

             * ‘obj’ (Any(32))

             * ‘dest’ (int(33))

             * ‘tag’ (int(34))


          Return type: *note Request: 240.

      -- Method: ibsend (obj, dest, tag=0)

          Nonblocking send in buffered mode.


          Parameters:

             * ‘obj’ (Any(35))

             * ‘dest’ (int(36))

             * ‘tag’ (int(37))


          Return type: *note Request: 240.

      -- Method: issend (obj, dest, tag=0)

          Nonblocking send in synchronous mode.


          Parameters:

             * ‘obj’ (Any(38))

             * ‘dest’ (int(39))

             * ‘tag’ (int(40))


          Return type: *note Request: 240.

      -- Method: recv (buf=None, source=ANY_SOURCE, tag=ANY_TAG,
               status=None)

          Blocking receive.


          Parameters:

             * ‘buf’ (*note Buffer: 20a.‘ | ’None(41))

             * ‘source’ (int(42))

             * ‘tag’ (int(43))

             * ‘status’ (*note Status: d1.‘ | ’None(44))


          Return type: Any

      -- Method: irecv (buf=None, source=ANY_SOURCE, tag=ANY_TAG)

          Nonblocking receive.

               Warning: This method cannot be supported reliably and
               raises RuntimeError(45).


          Parameters:

             * ‘buf’ (*note Buffer: 20a.‘ | ’None(46))

             * ‘source’ (int(47))

             * ‘tag’ (int(48))


          Return type: *note Request: 240.

      -- Method: sendrecv (sendobj, dest, sendtag=0, recvbuf=None,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and receive.


          Parameters:

             * ‘sendobj’ (‘Any’)

             * ‘dest’ (int(49))

             * ‘sendtag’ (int(50))

             * ‘recvbuf’ (*note Buffer: 20a.‘ | ’None(51))

             * ‘source’ (int(52))

             * ‘recvtag’ (int(53))

             * ‘status’ (*note Status: d1.‘ | ’None(54))


          Return type: Any

      -- Method: mprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a matched message.


          Parameters:

             * ‘source’ (int(55))

             * ‘tag’ (int(56))

             * ‘status’ (*note Status: d1.‘ | ’None(57))


          Return type: *note Message: 24a.

      -- Method: improbe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a matched message.


          Parameters:

             * ‘source’ (int(58))

             * ‘tag’ (int(59))

             * ‘status’ (*note Status: d1.‘ | ’None(60))


          Return type: *note Message: 24a. | None(61)

      -- Method: bcast (obj, root=0)

          Broadcast.

          Added in version 3.1.0.


          Parameters:

             * ‘obj’ (Any(62))

             * ‘root’ (int(63))


          Return type: Any(64)

      -- Method: gather (sendobj, root=0)

          Gather.

          Added in version 4.0.0.


          Parameters:

             * ‘sendobj’ (Any(65))

             * ‘root’ (int(66))


          Return type: list(67)[Any(68)] | None(69)

      -- Method: scatter (sendobj, root=0)

          Scatter.

          Added in version 4.0.0.


          Parameters:

             * ‘sendobj’ (Sequence(70)‘[’Any(71)‘] ’‘| ’None(72))

             * ‘root’ (int(73))


          Return type: Any(74)

      -- Method: allgather (sendobj)

          Gather to All.

          Added in version 4.0.0.


          Parameters: ‘sendobj’ (Any(75))


          Return type: list(76)[Any(77)]

      -- Method: alltoall (sendobj)

          All to All Scatter/Gather.

          Added in version 4.0.0.


          Parameters: ‘sendobj’ (Sequence(78)‘[’Any(79)‘]’)


          Return type: list(80)[Any(81)]

 -- Class: mpi4py.util.pkl5.Intracomm

     Intracommunicator.

     Intracommunicator wrapper class.

 -- Class: mpi4py.util.pkl5.Intercomm

     Intercommunicator.

     Intercommunicator wrapper class.

* Menu:

* Examples: Examples<2>.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/pickle.html#module-pickle

   (2) https://peps.python.org/pep-0574/

   (3) https://docs.python.org/3/library/pickle.html#module-pickle

   (4) https://pypi.org/project/pickle5/

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/functions.html#bool

   (10) https://docs.python.org/3/library/constants.html#None

   (11) https://docs.python.org/3/library/stdtypes.html#tuple

   (12) https://docs.python.org/3/library/functions.html#bool

   (13) https://docs.python.org/3/library/typing.html#typing.Any

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/constants.html#None

   (16) https://docs.python.org/3/library/typing.html#typing.Any

   (17) https://docs.python.org/3/library/constants.html#None

   (18) https://docs.python.org/3/library/constants.html#None

   (19) https://docs.python.org/3/library/typing.html#typing.Any

   (20) https://docs.python.org/3/library/typing.html#typing.Any

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/constants.html#None

   (24) https://docs.python.org/3/library/typing.html#typing.Any

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/constants.html#None

   (28) https://docs.python.org/3/library/typing.html#typing.Any

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/constants.html#None

   (32) https://docs.python.org/3/library/typing.html#typing.Any

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/typing.html#typing.Any

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/typing.html#typing.Any

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/constants.html#None

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/constants.html#None

   (45) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (46) https://docs.python.org/3/library/constants.html#None

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/constants.html#None

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/constants.html#None

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/constants.html#None

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/constants.html#None

   (61) https://docs.python.org/3/library/constants.html#None

   (62) https://docs.python.org/3/library/typing.html#typing.Any

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/typing.html#typing.Any

   (65) https://docs.python.org/3/library/typing.html#typing.Any

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/stdtypes.html#list

   (68) https://docs.python.org/3/library/typing.html#typing.Any

   (69) https://docs.python.org/3/library/constants.html#None

   (70) https://docs.python.org/3/library/typing.html#typing.Sequence

   (71) https://docs.python.org/3/library/typing.html#typing.Any

   (72) https://docs.python.org/3/library/constants.html#None

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/typing.html#typing.Any

   (75) https://docs.python.org/3/library/typing.html#typing.Any

   (76) https://docs.python.org/3/library/stdtypes.html#list

   (77) https://docs.python.org/3/library/typing.html#typing.Any

   (78) https://docs.python.org/3/library/typing.html#typing.Sequence

   (79) https://docs.python.org/3/library/typing.html#typing.Any

   (80) https://docs.python.org/3/library/stdtypes.html#list

   (81) https://docs.python.org/3/library/typing.html#typing.Any


File: mpi4py.info,  Node: Examples<2>,  Up: mpi4py util pkl5

8.2.1 Examples
--------------

     import numpy as np
     from mpi4py import MPI
     from mpi4py.util import pkl5

     comm = pkl5.Intracomm(MPI.COMM_WORLD)  # comm wrapper
     size = comm.Get_size()
     rank = comm.Get_rank()
     dst = (rank + 1) % size
     src = (rank - 1) % size

     sobj = np.full(1024**3, rank, dtype='i4')  # > 4 GiB
     sreq = comm.isend(sobj, dst, tag=42)
     robj = comm.recv (None, src, tag=42)
     sreq.Free()

     assert np.min(robj) == src
     assert np.max(robj) == src

LiteralBlock: ‘test-pkl5-1.py’

     import numpy as np
     from mpi4py import MPI
     from mpi4py.util import pkl5

     comm = pkl5.Intracomm(MPI.COMM_WORLD)  # comm wrapper
     size = comm.Get_size()
     rank = comm.Get_rank()
     dst = (rank + 1) % size
     src = (rank - 1) % size

     sobj = np.full(1024**3, rank, dtype='i4')  # > 4 GiB
     sreq = comm.isend(sobj, dst, tag=42)

     status = MPI.Status()
     rmsg = comm.mprobe(status=status)
     assert status.Get_source() == src
     assert status.Get_tag() == 42
     rreq = rmsg.irecv()
     robj = rreq.wait()

     sreq.Free()
     assert np.max(robj) == src
     assert np.min(robj) == src

LiteralBlock: ‘test-pkl5-2.py’


File: mpi4py.info,  Node: mpi4py util pool,  Next: mpi4py util sync,  Prev: mpi4py util pkl5,  Up: mpi4py util

8.3 mpi4py.util.pool
====================

Added in version 4.0.0.

See also
........

This module intends to be a drop-in replacement for the
multiprocessing.pool(1) interface from the Python standard library.  The
*note Pool: 266. class exposed here is implemented as a thin wrapper
around *note MPIPoolExecutor: 21d.

     Note: The *note mpi4py.futures: 2. package offers a higher level
     interface for asynchronously pushing tasks to MPI worker process,
     allowing for a clear separation between submitting tasks and
     waiting for the results.

 -- Class: mpi4py.util.pool.Pool

     Pool using MPI processes as workers.

      -- Method: __init__ (processes=None, initializer=None,
               initargs=(), **kwargs)

          Initialize a new Pool instance.


          Parameters:

             * ‘processes’ (int(2)‘ | ’None(3)) – Number of worker
               processes.

             * ‘initializer’ (Callable(4)‘[’‘[’‘...’‘]’‘, ’object(5)‘]
               ’‘| ’None(6)) – An callable used to initialize workers
               processes.

             * ‘initargs’ (Iterable(7)‘[’Any(8)‘]’) – A tuple of
               arguments to pass to the initializer.

             * ‘kwargs’ (Any(9))


          Return type: None(10)

               Note: Additional keyword arguments are passed down to the
               *note MPIPoolExecutor: 21d. constructor.

               Warning: The 'maxtasksperchild' and 'context' arguments
               of multiprocessing.pool.Pool(11) are not supported.
               Specifying 'maxtasksperchild' or 'context' with a value
               other than None(12) will issue a warning of category
               UserWarning(13).

      -- Method: apply (func, args=(), kwds={})

          Call 'func' with arguments 'args' and keyword arguments
          'kwds'.

          Equivalent to ‘func(*args, **kwds)’.


          Parameters:

             * ‘func’ (Callable(14)‘[’‘[’‘...’‘]’‘, ’*note T: 218.‘]’)

             * ‘args’ (Iterable(15)‘[’Any(16)‘]’)

             * ‘kwds’ (Mapping(17)‘[’str(18)‘, ’Any(19)‘]’)


          Return type: *note T: 218.

      -- Method: apply_async (func, args=(), kwds={}, callback=None,
               error_callback=None)

          Asynchronous version of *note apply(): 268. returning *note
          ApplyResult: 26a.


          Parameters:

             * ‘func’ (‘Callable’‘[’‘...’‘, ’*note T: 218.‘]’)

             * ‘args’ (‘Iterable’‘[’‘Any’‘]’)

             * ‘kwds’ (‘Mapping’‘[’str(20)‘, ’‘Any’‘]’)

             * ‘callback’ (‘Callable’‘[’‘[’*note T: 218.‘]’‘,
               ’object(21)‘] ’‘| ’None(22))

             * ‘error_callback’ (‘Callable’‘[’‘[’BaseException(23)‘]’‘,
               ’object(24)‘] ’‘| ’None(25))


          Return type: *note AsyncResult: 26b.[*note T: 218.]

      -- Method: map (func, iterable, chunksize=None)

          Apply 'func' to each element in 'iterable'.

          Equivalent to ‘list(map(func, iterable))’.

          Block until all results are ready and return them in a
          list(26).

          The 'iterable' is choped into a number of chunks which are
          submitted as separate tasks.  The (approximate) size of these
          chunks can be specified by setting 'chunksize' to a positive
          integer.

          Consider using *note imap(): 26d. or *note imap_unordered():
          26e. with explicit 'chunksize' for better efficiency.


          Parameters:

             * ‘func’ (Callable(27)‘[’‘[’*note S: 217.‘]’‘, ’*note T:
               218.‘]’)

             * ‘iterable’ (Iterable(28)‘[’*note S: 217.‘]’)

             * ‘chunksize’ (int(29)‘ | ’None(30))


          Return type: list(31)[*note T: 218.]

      -- Method: map_async (func, iterable, chunksize=None,
               callback=None, error_callback=None)

          Asynchronous version of *note map(): 26c. returning *note
          MapResult: 270.


          Parameters:

             * ‘func’ (‘Callable’‘[’‘[’*note S: 217.‘]’‘, ’*note T:
               218.‘]’)

             * ‘iterable’ (‘Iterable’‘[’*note S: 217.‘]’)

             * ‘chunksize’ (int(32)‘ | ’None(33))

             * ‘callback’ (‘Callable’‘[’‘[’*note T: 218.‘]’‘,
               ’None(34)‘] ’‘| ’None(35))

             * ‘error_callback’ (‘Callable’‘[’‘[’BaseException(36)‘]’‘,
               ’None(37)‘] ’‘| ’None(38))


          Return type: *note MapResult: 270.[*note T: 218.]

      -- Method: imap (func, iterable, chunksize=1)

          Like *note map(): 26c. but return an iterator(39).

          Equivalent to ‘map(func, iterable)’.


          Parameters:

             * ‘func’ (Callable(40)‘[’‘[’*note S: 217.‘]’‘, ’*note T:
               218.‘]’)

             * ‘iterable’ (Iterable(41)‘[’*note S: 217.‘]’)

             * ‘chunksize’ (int(42))


          Return type: Iterator(43)[*note T: 218.]

      -- Method: imap_unordered (func, iterable, chunksize=1)

          Like *note imap(): 26d. but ordering of results is arbitrary.


          Parameters:

             * ‘func’ (Callable(44)‘[’‘[’*note S: 217.‘]’‘, ’*note T:
               218.‘]’)

             * ‘iterable’ (Iterable(45)‘[’*note S: 217.‘]’)

             * ‘chunksize’ (int(46))


          Return type: Iterator(47)[*note T: 218.]

      -- Method: starmap (func, iterable, chunksize=None)

          Apply 'func' to each argument tuple in 'iterable'.

          Equivalent to ‘list(itertools.starmap(func, iterable))’.

          Block until all results are ready and return them in a
          list(48).

          The 'iterable' is choped into a number of chunks which are
          submitted as separate tasks.  The (approximate) size of these
          chunks can be specified by setting 'chunksize' to a positive
          integer.

          Consider using *note istarmap(): 272. or *note
          istarmap_unordered(): 273. with explicit 'chunksize' for
          better efficiency.


          Parameters:

             * ‘func’ (Callable(49)‘[’‘[’‘...’‘]’‘, ’*note T: 218.‘]’)

             * ‘iterable’ (Iterable(50)‘[’Iterable(51)‘[’Any(52)‘]’‘]’)

             * ‘chunksize’ (int(53)‘ | ’None(54))


          Return type: list(55)[*note T: 218.]

      -- Method: starmap_async (func, iterable, chunksize=None,
               callback=None, error_callback=None)

          Asynchronous version of *note starmap(): 271. returning *note
          MapResult: 270.


          Parameters:

             * ‘func’ (‘Callable’‘[’‘...’‘, ’*note T: 218.‘]’)

             * ‘iterable’ (‘Iterable’‘[’‘Iterable’‘[’‘Any’‘]’‘]’)

             * ‘chunksize’ (int(56)‘ | ’None(57))

             * ‘callback’ (‘Callable’‘[’‘[’*note T: 218.‘]’‘,
               ’None(58)‘] ’‘| ’None(59))

             * ‘error_callback’ (‘Callable’‘[’‘[’BaseException(60)‘]’‘,
               ’None(61)‘] ’‘| ’None(62))


          Return type: *note MapResult: 270.[*note T: 218.]

      -- Method: istarmap (func, iterable, chunksize=1)

          Like *note starmap(): 271. but return an iterator(63).

          Equivalent to ‘itertools.starmap(func, iterable)’.


          Parameters:

             * ‘func’ (Callable(64)‘[’‘[’‘...’‘]’‘, ’*note T: 218.‘]’)

             * ‘iterable’ (Iterable(65)‘[’Iterable(66)‘[’Any(67)‘]’‘]’)

             * ‘chunksize’ (int(68))


          Return type: Iterator(69)[*note T: 218.]

      -- Method: istarmap_unordered (func, iterable, chunksize=1)

          Like *note istarmap(): 272. but ordering of results is
          arbitrary.


          Parameters:

             * ‘func’ (Callable(70)‘[’‘[’‘...’‘]’‘, ’*note T: 218.‘]’)

             * ‘iterable’ (Iterable(71)‘[’Iterable(72)‘[’Any(73)‘]’‘]’)

             * ‘chunksize’ (int(74))


          Return type: Iterator(75)[*note T: 218.]

      -- Method: close ()

          Prevent any more tasks from being submitted to the pool.


          Return type: None(76)

      -- Method: terminate ()

          Stop the worker processes without completing pending tasks.


          Return type: None(77)

      -- Method: join ()

          Wait for the worker processes to exit.


          Return type: None(78)

 -- Class: mpi4py.util.pool.ThreadPool

     Bases: *note Pool: 266.

     Pool using threads as workers.

 -- Class: mpi4py.util.pool.AsyncResult

     Asynchronous result.

      -- Method: get (timeout=None)

          Return the result when it arrives.

          If 'timeout' is not None(79) and the result does not arrive
          within 'timeout' seconds then raise TimeoutError(80).

          If the remote call raised an exception then that exception
          will be reraised.


          Parameters: ‘timeout’ (float(81)‘ | ’None(82))


          Return type: *note T: 218.

      -- Method: wait (timeout=None)

          Wait until the result is available or 'timeout' seconds pass.


          Parameters: ‘timeout’ (float(83)‘ | ’None(84))


          Return type: None(85)

      -- Method: ready ()

          Return whether the call has completed.


          Return type: bool(86)

      -- Method: successful ()

          Return whether the call completed without raising an
          exception.

          If the result is not ready then raise ValueError(87).


          Return type: bool(88)

 -- Class: mpi4py.util.pool.ApplyResult

     Bases: *note AsyncResult: 26b.

     Result type of *note apply_async(): 269.

 -- Class: mpi4py.util.pool.MapResult

     Bases: *note AsyncResult: 26b.

     Result type of *note map_async(): 26f. and *note starmap_async():
     274.

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.pool

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/typing.html#typing.Callable

   (5) https://docs.python.org/3/library/functions.html#object

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/typing.html#typing.Iterable

   (8) https://docs.python.org/3/library/typing.html#typing.Any

   (9) https://docs.python.org/3/library/typing.html#typing.Any

   (10) https://docs.python.org/3/library/constants.html#None

   (11) 
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool

   (12) https://docs.python.org/3/library/constants.html#None

   (13) https://docs.python.org/3/library/exceptions.html#UserWarning

   (14) https://docs.python.org/3/library/typing.html#typing.Callable

   (15) https://docs.python.org/3/library/typing.html#typing.Iterable

   (16) https://docs.python.org/3/library/typing.html#typing.Any

   (17) https://docs.python.org/3/library/typing.html#typing.Mapping

   (18) https://docs.python.org/3/library/stdtypes.html#str

   (19) https://docs.python.org/3/library/typing.html#typing.Any

   (20) https://docs.python.org/3/library/stdtypes.html#str

   (21) https://docs.python.org/3/library/functions.html#object

   (22) https://docs.python.org/3/library/constants.html#None

   (23) https://docs.python.org/3/library/exceptions.html#BaseException

   (24) https://docs.python.org/3/library/functions.html#object

   (25) https://docs.python.org/3/library/constants.html#None

   (26) https://docs.python.org/3/library/stdtypes.html#list

   (27) https://docs.python.org/3/library/typing.html#typing.Callable

   (28) https://docs.python.org/3/library/typing.html#typing.Iterable

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/constants.html#None

   (31) https://docs.python.org/3/library/stdtypes.html#list

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/constants.html#None

   (34) https://docs.python.org/3/library/constants.html#None

   (35) https://docs.python.org/3/library/constants.html#None

   (36) https://docs.python.org/3/library/exceptions.html#BaseException

   (37) https://docs.python.org/3/library/constants.html#None

   (38) https://docs.python.org/3/library/constants.html#None

   (39) https://docs.python.org/3/glossary.html#term-iterator

   (40) https://docs.python.org/3/library/typing.html#typing.Callable

   (41) https://docs.python.org/3/library/typing.html#typing.Iterable

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/typing.html#typing.Iterator

   (44) https://docs.python.org/3/library/typing.html#typing.Callable

   (45) https://docs.python.org/3/library/typing.html#typing.Iterable

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/typing.html#typing.Iterator

   (48) https://docs.python.org/3/library/stdtypes.html#list

   (49) https://docs.python.org/3/library/typing.html#typing.Callable

   (50) https://docs.python.org/3/library/typing.html#typing.Iterable

   (51) https://docs.python.org/3/library/typing.html#typing.Iterable

   (52) https://docs.python.org/3/library/typing.html#typing.Any

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/constants.html#None

   (55) https://docs.python.org/3/library/stdtypes.html#list

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/constants.html#None

   (58) https://docs.python.org/3/library/constants.html#None

   (59) https://docs.python.org/3/library/constants.html#None

   (60) https://docs.python.org/3/library/exceptions.html#BaseException

   (61) https://docs.python.org/3/library/constants.html#None

   (62) https://docs.python.org/3/library/constants.html#None

   (63) https://docs.python.org/3/glossary.html#term-iterator

   (64) https://docs.python.org/3/library/typing.html#typing.Callable

   (65) https://docs.python.org/3/library/typing.html#typing.Iterable

   (66) https://docs.python.org/3/library/typing.html#typing.Iterable

   (67) https://docs.python.org/3/library/typing.html#typing.Any

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/typing.html#typing.Iterator

   (70) https://docs.python.org/3/library/typing.html#typing.Callable

   (71) https://docs.python.org/3/library/typing.html#typing.Iterable

   (72) https://docs.python.org/3/library/typing.html#typing.Iterable

   (73) https://docs.python.org/3/library/typing.html#typing.Any

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/typing.html#typing.Iterator

   (76) https://docs.python.org/3/library/constants.html#None

   (77) https://docs.python.org/3/library/constants.html#None

   (78) https://docs.python.org/3/library/constants.html#None

   (79) https://docs.python.org/3/library/constants.html#None

   (80) https://docs.python.org/3/library/exceptions.html#TimeoutError

   (81) https://docs.python.org/3/library/functions.html#float

   (82) https://docs.python.org/3/library/constants.html#None

   (83) https://docs.python.org/3/library/functions.html#float

   (84) https://docs.python.org/3/library/constants.html#None

   (85) https://docs.python.org/3/library/constants.html#None

   (86) https://docs.python.org/3/library/functions.html#bool

   (87) https://docs.python.org/3/library/exceptions.html#ValueError

   (88) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py util sync,  Prev: mpi4py util pool,  Up: mpi4py util

8.4 mpi4py.util.sync
====================

Added in version 4.0.0.

The *note mpi4py.util.sync: a. module provides parallel synchronization
utilities.

* Menu:

* Sequential execution::
* Global counter::
* Mutual exclusion::
* Condition variable::
* Semaphore object::
* Examples: Examples<3>.


File: mpi4py.info,  Node: Sequential execution,  Next: Global counter,  Up: mpi4py util sync

8.4.1 Sequential execution
--------------------------

 -- Class: mpi4py.util.sync.Sequential

     Sequential execution.

     Context manager for sequential execution within a group of MPI
     processes.

     The implementation is based in MPI-1 point-to-point communication.
     A process with rank 'i' waits in a blocking receive until the
     previous process rank 'i-1' finish executing and signals the next
     rank 'i' with a send.

      -- Method: __init__ (comm, tag=0)

          Initialize sequential execution.


          Parameters:

             * ‘comm’ (*note Intracomm: 1f.) – Intracommunicator
               context.

             * ‘tag’ (int(1)) – Tag for point-to-point communication.


          Return type: None(2)

      -- Method: __enter__ ()

          Enter sequential execution.


          Return type: Self(3)

      -- Method: __exit__ (*exc)

          Exit sequential execution.


          Parameters: ‘exc’ (object(4))


          Return type: None(5)

      -- Method: begin ()

          Begin sequential execution.


          Return type: None(6)

      -- Method: end ()

          End sequential execution.


          Return type: None(7)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/functions.html#object

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: Global counter,  Next: Mutual exclusion,  Prev: Sequential execution,  Up: mpi4py util sync

8.4.2 Global counter
--------------------

 -- Class: mpi4py.util.sync.Counter

     Global counter.

     Produce consecutive values within a group of MPI processes.  The
     counter interface is close to that of itertools.count(1).

     The implementation is based in MPI-3 one-sided operations.  A root
     process (typically rank ‘0’) holds the counter, and its value is
     queried and incremented with an atomic RMA 'fetch-and-add'
     operation.

      -- Method: __init__ (start=0, step=1, *, typecode='i',
               comm=COMM_SELF, info=INFO_NULL, root=0)

          Initialize global counter.


          Parameters:

             * ‘start’ (int(2)) – Start value.

             * ‘step’ (int(3)) – Increment value.

             * ‘typecode’ (str(4)) – Type code as defined in the
               array(5) module.

             * ‘comm’ (*note Intracomm: 1f.) – Intracommunicator
               context.

             * ‘info’ (*note Info: d4.) – Info object for RMA context
               creation.

             * ‘root’ (int(6)) – Process rank holding the counter
               memory.


          Return type: None(7)

      -- Method: __iter__ ()

          Implement ‘iter(self)’.


          Return type: Self(8)

      -- Method: __next__ ()

          Implement ‘next(self)’.


          Return type: int(9)

      -- Method: next (incr=None)

          Return current value and increment.


          Parameters: ‘incr’ (int(10)‘ | ’None(11)) – Increment value.


          Returns: The counter value before incrementing.


          Return type: int(12)

      -- Method: free ()

          Free counter resources.


          Return type: None(13)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/itertools.html#itertools.count

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/stdtypes.html#str

   (5) https://docs.python.org/3/library/array.html#module-array

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/typing.html#typing.Self

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: Mutual exclusion,  Next: Condition variable,  Prev: Global counter,  Up: mpi4py util sync

8.4.3 Mutual exclusion
----------------------

 -- Class: mpi4py.util.sync.Mutex

     Mutual exclusion.

     Establish a critical section or mutual exclusion among MPI
     processes.

     The mutex interface is close to that of threading.Lock(1) and
     threading.RLock(2), allowing the use of either recursive or
     non-recursive mutual exclusion.  However, a mutex should be used
     within a group of MPI processes, not threads.

     In non-recursive mode, the semantics of *note Mutex: 28e. are
     somewhat different than these of threading.Lock(3):

        * Once acquired, a mutex is held and owned by a process until
          released.

        * Trying to acquire a mutex already held raises RuntimeError(4).

        * Trying to release a mutex not yet held raises RuntimeError(5).

     This mutex implementation uses the scalable and fair spinlock
     algorithm from *note [mcs-paper]: 28f. and took inspiration from
     the MPI-3 RMA implementation of *note [uam-book]: 290.

      -- Method: __init__ (*, recursive=False, comm=COMM_SELF,
               info=INFO_NULL)

          Initialize mutex object.


          Parameters:

             * ‘comm’ (*note Intracomm: 1f.) – Intracommunicator
               context.

             * ‘recursive’ (bool(6)) – Whether to allow recursive
               acquisition.

             * ‘info’ (*note Info: d4.) – Info object for RMA context
               creation.


          Return type: None(7)

      -- Method: __enter__ ()

          Acquire mutex.


          Return type: Self(8)

      -- Method: __exit__ (*exc)

          Release mutex.


          Parameters: ‘exc’ (object(9))


          Return type: None(10)

      -- Method: acquire (blocking=True)

          Acquire mutex, blocking or non-blocking.


          Parameters: ‘blocking’ (bool(11)) – If True(12), block until
          the mutex is held.


          Returns: True(13) if the mutex is held, False(14) otherwise.


          Return type: bool(15)

      -- Method: release ()

          Release mutex.


          Return type: None(16)

      -- Method: locked ()

          Return whether the mutex is held.


          Return type: bool(17)

      -- Method: count ()

          Return the recursion count.


          Return type: int(18)

      -- Method: free ()

          Free mutex resources.


          Return type: None(19)

(mcs-paper) John M. Mellor-Crummey and Michael L. Scott.  Algorithms for
scalable synchronization on shared-memory multiprocessors.  ACM
Transactions on Computer Systems, 9(1):21-65, February 1991.
‘https://doi.org/10.1145/103727.103729’

(uam-book) William Gropp, Torsten Hoefler, Rajeev Thakur, Ewing Lusk.
Using Advanced MPI - Modern Features of the Message-Passing Interface.
Chapter 4, Section 4.7, Pages 130-131.  The MIT Press, November 2014.
‘https://mitpress.mit.edu/9780262527637/using-advanced-mpi/’

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/threading.html#threading.Lock

   (2) https://docs.python.org/3/library/threading.html#threading.RLock

   (3) https://docs.python.org/3/library/threading.html#threading.Lock

   (4) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (5) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (6) https://docs.python.org/3/library/functions.html#bool

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/typing.html#typing.Self

   (9) https://docs.python.org/3/library/functions.html#object

   (10) https://docs.python.org/3/library/constants.html#None

   (11) https://docs.python.org/3/library/functions.html#bool

   (12) https://docs.python.org/3/library/constants.html#True

   (13) https://docs.python.org/3/library/constants.html#True

   (14) https://docs.python.org/3/library/constants.html#False

   (15) https://docs.python.org/3/library/functions.html#bool

   (16) https://docs.python.org/3/library/constants.html#None

   (17) https://docs.python.org/3/library/functions.html#bool

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: Condition variable,  Next: Semaphore object,  Prev: Mutual exclusion,  Up: mpi4py util sync

8.4.4 Condition variable
------------------------

 -- Class: mpi4py.util.sync.Condition

     Condition variable.

     A condition variable allows one or more MPI processes to wait until
     they are notified by another processes.

     The condition variable interface is close to that of
     threading.Condition(1), allowing the use of either recursive or
     non-recursive mutual exclusion.  However, the condition variable
     should be used within a group of MPI processes, not threads.

     This condition variable implementation uses a MPI-3 RMA-based
     scalable and fair circular queue algorithm to track the set of
     waiting processes.

      -- Method: __init__ (mutex=None, *, recursive=True,
               comm=COMM_SELF, info=INFO_NULL)

          Initialize condition variable.


          Parameters:

             * ‘mutex’ (*note Mutex: 28e.‘ | ’None(2)) – Mutual
               exclusion object.

             * ‘recursive’ (bool(3)) – Whether to allow recursive
               acquisition.

             * ‘comm’ (*note Intracomm: 1f.) – Intracommunicator
               context.

             * ‘info’ (*note Info: d4.) – Info object for RMA context
               creation.


          Return type: None(4)

      -- Method: __enter__ ()

          Acquire the underlying mutex.


          Return type: Self(5)

      -- Method: __exit__ (*exc)

          Release the underlying mutex.


          Parameters: ‘exc’ (object(6))


          Return type: None(7)

      -- Method: acquire (blocking=True)

          Acquire the underlying mutex.


          Parameters: ‘blocking’ (bool(8))


          Return type: bool(9)

      -- Method: release ()

          Release the underlying mutex.


          Return type: None(10)

      -- Method: locked ()

          Return whether the underlying mutex is held.


          Return type: bool(11)

      -- Method: wait ()

          Wait until notified by another process.


          Returns: Always True(12).


          Return type: Literal(13)[True]

      -- Method: wait_for (predicate)

          Wait until a predicate evaluates to True(14).


          Parameters: ‘predicate’ (Callable(15)‘[’‘[’‘]’‘, ’*note T:
          218.‘]’) – callable returning a boolean.


          Returns: The result of predicate once it evaluates to
          True(16).


          Return type: *note T: 218.

      -- Method: notify (n=1)

          Wake up one or more processes waiting on this condition.


          Parameters: ‘n’ (int(17)) – Maximum number of processes to
          wake up.


          Returns: The actual number of processes woken up.


          Return type: int(18)

      -- Method: notify_all ()

          Wake up all processes waiting on this condition.


          Returns: The actual number of processes woken up.


          Return type: int(19)

      -- Method: free ()

          Free condition resources.


          Return type: None(20)

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/threading.html#threading.Condition

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/functions.html#bool

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/typing.html#typing.Self

   (6) https://docs.python.org/3/library/functions.html#object

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/functions.html#bool

   (10) https://docs.python.org/3/library/constants.html#None

   (11) https://docs.python.org/3/library/functions.html#bool

   (12) https://docs.python.org/3/library/constants.html#True

   (13) https://docs.python.org/3/library/typing.html#typing.Literal

   (14) https://docs.python.org/3/library/constants.html#True

   (15) https://docs.python.org/3/library/typing.html#typing.Callable

   (16) https://docs.python.org/3/library/constants.html#True

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: Semaphore object,  Next: Examples<3>,  Prev: Condition variable,  Up: mpi4py util sync

8.4.5 Semaphore object
----------------------

 -- Class: mpi4py.util.sync.Semaphore

     Semaphore object.

     A semaphore object manages an internal counter which is decremented
     by each *note acquire(): 2a8. call and incremented by each *note
     release(): 2a9. call.  The internal counter never reaches a value
     below zero; when *note acquire(): 2a8. finds that it is zero, it
     blocks and waits until some other process calls *note release():
     2a9.

     The semaphore interface is close to that of threading.Semaphore(1)
     and threading.BoundedSemaphore(2), allowing the use of either
     bounded (default) or unbounded semaphores.  With a bounded
     semaphore, the internal counter never exceeds its initial value;
     otherwise *note release(): 2a9. raises ValueError(3).

     This semaphore implementation uses a global *note Counter: 287. and
     a *note Condition: 29a. variable to handle waiting and and
     notification.

      -- Method: __init__ (value=1, *, bounded=True, comm=COMM_SELF,
               info=INFO_NULL)

          Initialize semaphore object.


          Parameters:

             * ‘value’ (int(4)) – Initial value for internal counter.

             * ‘bounded’ (bool(5)) – Bound internal counter to initial
               value.

             * ‘comm’ (*note Intracomm: 1f.) – Intracommunicator
               context.

             * ‘info’ (*note Info: d4.) – Info object for RMA context
               creation.


          Return type: None(6)

      -- Method: __enter__ ()

          Acquire semaphore.


          Return type: Self(7)

      -- Method: __exit__ (*exc)

          Release semaphore.


          Parameters: ‘exc’ (object(8))


          Return type: None(9)

      -- Method: acquire (blocking=True)

          Acquire semaphore, decrementing the internal counter by one.


          Parameters: ‘blocking’ (bool(10)) – If True(11), block until
          the semaphore is acquired.


          Returns: True(12) if the semaphore is acquired, False(13)
          otherwise.


          Return type: bool(14)

      -- Method: release (n=1)

          Release semaphore, incrementing the internal counter by one or
          more.


          Parameters: ‘n’ (int(15)) – Increment for the internal
          counter.


          Return type: None(16)

      -- Method: free ()

          Free semaphore resources.


          Return type: None(17)

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/threading.html#threading.Semaphore

   (2) 
https://docs.python.org/3/library/threading.html#threading.BoundedSemaphore

   (3) https://docs.python.org/3/library/exceptions.html#ValueError

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#bool

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/typing.html#typing.Self

   (8) https://docs.python.org/3/library/functions.html#object

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/functions.html#bool

   (11) https://docs.python.org/3/library/constants.html#True

   (12) https://docs.python.org/3/library/constants.html#True

   (13) https://docs.python.org/3/library/constants.html#False

   (14) https://docs.python.org/3/library/functions.html#bool

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/constants.html#None

   (17) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: Examples<3>,  Prev: Semaphore object,  Up: mpi4py util sync

8.4.6 Examples
--------------

     from mpi4py import MPI
     from mpi4py.util.sync import Counter, Sequential

     comm = MPI.COMM_WORLD

     counter = Counter(comm)
     with Sequential(comm):
        value = next(counter)
     counter.free()

     assert comm.rank == value

LiteralBlock: ‘test-sync-1.py’

     from mpi4py import MPI
     from mpi4py.util.sync import Counter, Mutex

     comm = MPI.COMM_WORLD

     mutex = Mutex(comm)
     counter = Counter(comm)
     with mutex:
        value = next(counter)
     counter.free()
     mutex.free()

     assert (
        list(range(comm.size)) ==
        sorted(comm.allgather(value))
     )

LiteralBlock: ‘test-sync-2.py’


File: mpi4py.info,  Node: mpi4py run,  Next: mpi4py bench,  Prev: mpi4py util,  Up: Top

9 mpi4py.run
************

Added in version 3.0.0.

At import time, *note mpi4py: 0. initializes the MPI execution
environment calling ‘MPI_Init_thread()’ and installs an exit hook to
automatically call ‘MPI_Finalize()’ just before the Python process
terminates.  Additionally, *note mpi4py: 0. overrides the default *note
ERRORS_ARE_FATAL: 9a. error handler in favor of *note ERRORS_RETURN: 99,
which allows translating MPI errors in Python exceptions.  These
departures from standard MPI behavior may be controversial, but are
quite convenient within the highly dynamic Python programming
environment.  Third-party code using *note mpi4py: 0. can just ‘from
mpi4py import MPI’ and perform MPI calls without the tedious
initialization/finalization handling.  MPI errors, once translated
automatically to Python exceptions, can be dealt with the common
try(1)…except(2)…finally(3) clauses; unhandled MPI exceptions will print
a traceback which helps in locating problems in source code.

Unfortunately, the interplay of automatic MPI finalization and unhandled
exceptions may lead to deadlocks.  In unattended runs, these deadlocks
will drain the battery of your laptop, or burn precious allocation hours
in your supercomputing facility.

* Menu:

* Exceptions and deadlocks::
* Command line: Command line<2>.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/reference/compound_stmts.html#try

   (2) https://docs.python.org/3/reference/compound_stmts.html#except

   (3) https://docs.python.org/3/reference/compound_stmts.html#finally


File: mpi4py.info,  Node: Exceptions and deadlocks,  Next: Command line<2>,  Up: mpi4py run

9.1 Exceptions and deadlocks
============================

Consider the following snippet of Python code.  Assume this code is
stored in a standard Python script file and run with ‘mpiexec’ in two or
more processes.

     from mpi4py import MPI
     assert MPI.COMM_WORLD.Get_size() > 1
     rank = MPI.COMM_WORLD.Get_rank()
     if rank == 0:
         1/0
         MPI.COMM_WORLD.send(None, dest=1, tag=42)
     elif rank == 1:
         MPI.COMM_WORLD.recv(source=0, tag=42)

LiteralBlock: ‘deadlock.py’

Process 0 raises ZeroDivisionError(1) exception before performing a send
call to process 1.  As the exception is not handled, the Python
interpreter running in process 0 will proceed to exit with non-zero
status.  However, as *note mpi4py: 0. installed a finalizer hook to call
‘MPI_Finalize()’ before exit, process 0 will block waiting for other
processes to also enter the ‘MPI_Finalize()’ call.  Meanwhile, process 1
will block waiting for a message to arrive from process 0, thus never
reaching to ‘MPI_Finalize()’.  The whole MPI execution environment is
irremediably in a deadlock state.

To alleviate this issue, *note mpi4py: 0. offers a simple, alternative
command line execution mechanism based on using the -m(2) flag and
implemented with the runpy(3) module.  To use this features, Python code
should be run passing ‘-m mpi4py’ in the command line invoking the
Python interpreter.  In case of unhandled exceptions, the finalizer hook
will call ‘MPI_Abort()’ on the ‘MPI_COMM_WORLD’ communicator, thus
effectively aborting the MPI execution environment.

     Warning: When a process is forced to abort, resources (e.g.  open
     files) are not cleaned-up and any registered finalizers (either
     with the atexit(4) module, the Python C/API function
     Py_AtExit()(5), or even the C standard library function ‘atexit()’)
     will not be executed.  Thus, aborting execution is an extremely
     impolite way of ensuring process termination.  However, MPI
     provides no other mechanism to recover from a deadlock state.

   ---------- Footnotes ----------

   (1) 
https://docs.python.org/3/library/exceptions.html#ZeroDivisionError

   (2) https://docs.python.org/3/using/cmdline.html#using-on-cmdline

   (3) https://docs.python.org/3/library/runpy.html#module-runpy

   (4) https://docs.python.org/3/library/atexit.html#module-atexit

   (5) https://docs.python.org/3/c-api/sys.html#c.Py_AtExit


File: mpi4py.info,  Node: Command line<2>,  Prev: Exceptions and deadlocks,  Up: mpi4py run

9.2 Command line
================

The use of ‘-m mpi4py’ to execute Python code on the command line
resembles that of the Python interpreter.

   * ‘mpiexec -n NUMPROCS python -m mpi4py PYFILE [arg] ...’

   * ‘mpiexec -n NUMPROCS python -m mpi4py -m MOD [arg] ...’

   * ‘mpiexec -n NUMPROCS python -m mpi4py -c CMD [arg] ...’

   * ‘mpiexec -n NUMPROCS python -m mpi4py - [arg] ...’

 -- Describe: <pyfile>

     Execute the Python code contained in 'pyfile', which must be a
     filesystem path referring to either a Python file, a directory
     containing a ‘__main__.py’ file, or a zipfile containing a
     ‘__main__.py’ file.

 -- Program Option: -m <mod>

     Search sys.path(1) for the named module 'mod' and execute its
     contents.

 -- Program Option: -c <cmd>

     Execute the Python code in the 'cmd' string command.

 -- Describe: -

     Read commands from standard input (sys.stdin(2)).

See also
........

Command line(3)

     Documentation on Python command line interface.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/sys.html#sys.path

   (2) https://docs.python.org/3/library/sys.html#sys.stdin

   (3) https://docs.python.org/3/using/cmdline.html#using-on-cmdline


File: mpi4py.info,  Node: mpi4py bench,  Next: Reference,  Prev: mpi4py run,  Up: Top

10 mpi4py.bench
***************

Added in version 3.0.0.


File: mpi4py.info,  Node: Reference,  Next: Citation<2>,  Prev: mpi4py bench,  Up: Top

11 Reference
************

*note mpi4py.MPI: 3.Message Passing Interface.
               

* Menu:

* mpi4py.MPI: mpi4py MPI<2>.


File: mpi4py.info,  Node: mpi4py MPI<2>,  Up: Reference

11.1 mpi4py.MPI
===============

Message Passing Interface.

Classes
.......

*note BottomType: fb.Type of *note BOTTOM: fa.
               
               
*note BufferAutomaticType: ff.Type of *note BUFFER_AUTOMATIC: fe.
               
               
*note Cartcomm: 33.Cartesian topology intracommunicator.
               
               
*note Comm: 1e.Communication context.
               
               
*note Datatype: d0.Datatype object.
               
               
*note Distgraphcomm: 35.Distributed graph topology intracommunicator.
               
               
*note Errhandler: d8.Error handler.
               
               
*note File: 84.File I/O context.
               
               
*note Graphcomm: 34.General graph topology intracommunicator.
               
               
*note Grequest: d2.Generalized request handler.
               
               
*note Group: 28.Group of processes.
               
               
*note InPlaceType: fd.Type of *note IN_PLACE: fc.
               
               
*note Info: d4.Info object.
               
               
*note Intercomm: 20.Intercommunicator.
               
               
*note Intracomm: 1f.Intracommunicator.
               
               
*note Message: d7.Matched message.
               
               
*note Op: d3.  Reduction operation.
               
               
*note Pickle: d9.Pickle/unpickle Python objects.
               
               
*note Prequest: 4a.Persistent request handler.
               
               
*note Request: 43.Request handler.
               
               
*note Session: d5.Session context.
               
               
*note Status: d1.Status object.
               
               
*note Topocomm: d6.Topology intracommunicator.
               
               
*note Win: 76. Remote memory access context.
               
               
*note buffer: da.Buffer.
               
               
*note memory: 2bc.alias of *note buffer: da.
               

* Menu:

* mpi4py.MPI.BottomType: mpi4py MPI BottomType.
* mpi4py.MPI.BufferAutomaticType: mpi4py MPI BufferAutomaticType.
* mpi4py.MPI.Cartcomm: mpi4py MPI Cartcomm.
* mpi4py.MPI.Comm: mpi4py MPI Comm.
* mpi4py.MPI.Datatype: mpi4py MPI Datatype.
* mpi4py.MPI.Distgraphcomm: mpi4py MPI Distgraphcomm.
* mpi4py.MPI.Errhandler: mpi4py MPI Errhandler.
* mpi4py.MPI.File: mpi4py MPI File.
* mpi4py.MPI.Graphcomm: mpi4py MPI Graphcomm.
* mpi4py.MPI.Grequest: mpi4py MPI Grequest.
* mpi4py.MPI.Group: mpi4py MPI Group.
* mpi4py.MPI.InPlaceType: mpi4py MPI InPlaceType.
* mpi4py.MPI.Info: mpi4py MPI Info.
* mpi4py.MPI.Intercomm: mpi4py MPI Intercomm.
* mpi4py.MPI.Intracomm: mpi4py MPI Intracomm.
* mpi4py.MPI.Message: mpi4py MPI Message.
* mpi4py.MPI.Op: mpi4py MPI Op.
* mpi4py.MPI.Pickle: mpi4py MPI Pickle.
* mpi4py.MPI.Prequest: mpi4py MPI Prequest.
* mpi4py.MPI.Request: mpi4py MPI Request.
* mpi4py.MPI.Session: mpi4py MPI Session.
* mpi4py.MPI.Status: mpi4py MPI Status.
* mpi4py.MPI.Topocomm: mpi4py MPI Topocomm.
* mpi4py.MPI.Win: mpi4py MPI Win.
* mpi4py.MPI.buffer: mpi4py MPI buffer.
* mpi4py.MPI.memory: mpi4py MPI memory.
* mpi4py.MPI.Exception: mpi4py MPI Exception.
* mpi4py.MPI.Add_error_class: mpi4py MPI Add_error_class.
* mpi4py.MPI.Add_error_code: mpi4py MPI Add_error_code.
* mpi4py.MPI.Add_error_string: mpi4py MPI Add_error_string.
* mpi4py.MPI.Aint_add: mpi4py MPI Aint_add.
* mpi4py.MPI.Aint_diff: mpi4py MPI Aint_diff.
* mpi4py.MPI.Alloc_mem: mpi4py MPI Alloc_mem.
* mpi4py.MPI.Attach_buffer: mpi4py MPI Attach_buffer.
* mpi4py.MPI.Close_port: mpi4py MPI Close_port.
* mpi4py.MPI.Compute_dims: mpi4py MPI Compute_dims.
* mpi4py.MPI.Detach_buffer: mpi4py MPI Detach_buffer.
* mpi4py.MPI.Finalize: mpi4py MPI Finalize.
* mpi4py.MPI.Flush_buffer: mpi4py MPI Flush_buffer.
* mpi4py.MPI.Free_mem: mpi4py MPI Free_mem.
* mpi4py.MPI.Get_address: mpi4py MPI Get_address.
* mpi4py.MPI.Get_error_class: mpi4py MPI Get_error_class.
* mpi4py.MPI.Get_error_string: mpi4py MPI Get_error_string.
* mpi4py.MPI.Get_hw_resource_info: mpi4py MPI Get_hw_resource_info.
* mpi4py.MPI.Get_library_version: mpi4py MPI Get_library_version.
* mpi4py.MPI.Get_processor_name: mpi4py MPI Get_processor_name.
* mpi4py.MPI.Get_version: mpi4py MPI Get_version.
* mpi4py.MPI.Iflush_buffer: mpi4py MPI Iflush_buffer.
* mpi4py.MPI.Init: mpi4py MPI Init.
* mpi4py.MPI.Init_thread: mpi4py MPI Init_thread.
* mpi4py.MPI.Is_finalized: mpi4py MPI Is_finalized.
* mpi4py.MPI.Is_initialized: mpi4py MPI Is_initialized.
* mpi4py.MPI.Is_thread_main: mpi4py MPI Is_thread_main.
* mpi4py.MPI.Lookup_name: mpi4py MPI Lookup_name.
* mpi4py.MPI.Open_port: mpi4py MPI Open_port.
* mpi4py.MPI.Pcontrol: mpi4py MPI Pcontrol.
* mpi4py.MPI.Publish_name: mpi4py MPI Publish_name.
* mpi4py.MPI.Query_thread: mpi4py MPI Query_thread.
* mpi4py.MPI.Register_datarep: mpi4py MPI Register_datarep.
* mpi4py.MPI.Remove_error_class: mpi4py MPI Remove_error_class.
* mpi4py.MPI.Remove_error_code: mpi4py MPI Remove_error_code.
* mpi4py.MPI.Remove_error_string: mpi4py MPI Remove_error_string.
* mpi4py.MPI.Unpublish_name: mpi4py MPI Unpublish_name.
* mpi4py.MPI.Wtick: mpi4py MPI Wtick.
* mpi4py.MPI.Wtime: mpi4py MPI Wtime.
* mpi4py.MPI.get_vendor: mpi4py MPI get_vendor.
* mpi4py.MPI.UNDEFINED: mpi4py MPI UNDEFINED.
* mpi4py.MPI.ANY_SOURCE: mpi4py MPI ANY_SOURCE.
* mpi4py.MPI.ANY_TAG: mpi4py MPI ANY_TAG.
* mpi4py.MPI.PROC_NULL: mpi4py MPI PROC_NULL.
* mpi4py.MPI.ROOT: mpi4py MPI ROOT.
* mpi4py.MPI.BOTTOM: mpi4py MPI BOTTOM.
* mpi4py.MPI.IN_PLACE: mpi4py MPI IN_PLACE.
* mpi4py.MPI.KEYVAL_INVALID: mpi4py MPI KEYVAL_INVALID.
* mpi4py.MPI.TAG_UB: mpi4py MPI TAG_UB.
* mpi4py.MPI.IO: mpi4py MPI IO.
* mpi4py.MPI.WTIME_IS_GLOBAL: mpi4py MPI WTIME_IS_GLOBAL.
* mpi4py.MPI.UNIVERSE_SIZE: mpi4py MPI UNIVERSE_SIZE.
* mpi4py.MPI.APPNUM: mpi4py MPI APPNUM.
* mpi4py.MPI.LASTUSEDCODE: mpi4py MPI LASTUSEDCODE.
* mpi4py.MPI.WIN_BASE: mpi4py MPI WIN_BASE.
* mpi4py.MPI.WIN_SIZE: mpi4py MPI WIN_SIZE.
* mpi4py.MPI.WIN_DISP_UNIT: mpi4py MPI WIN_DISP_UNIT.
* mpi4py.MPI.WIN_CREATE_FLAVOR: mpi4py MPI WIN_CREATE_FLAVOR.
* mpi4py.MPI.WIN_FLAVOR: mpi4py MPI WIN_FLAVOR.
* mpi4py.MPI.WIN_MODEL: mpi4py MPI WIN_MODEL.
* mpi4py.MPI.SUCCESS: mpi4py MPI SUCCESS.
* mpi4py.MPI.ERR_LASTCODE: mpi4py MPI ERR_LASTCODE.
* mpi4py.MPI.ERR_TYPE: mpi4py MPI ERR_TYPE.
* mpi4py.MPI.ERR_REQUEST: mpi4py MPI ERR_REQUEST.
* mpi4py.MPI.ERR_OP: mpi4py MPI ERR_OP.
* mpi4py.MPI.ERR_GROUP: mpi4py MPI ERR_GROUP.
* mpi4py.MPI.ERR_INFO: mpi4py MPI ERR_INFO.
* mpi4py.MPI.ERR_ERRHANDLER: mpi4py MPI ERR_ERRHANDLER.
* mpi4py.MPI.ERR_SESSION: mpi4py MPI ERR_SESSION.
* mpi4py.MPI.ERR_COMM: mpi4py MPI ERR_COMM.
* mpi4py.MPI.ERR_WIN: mpi4py MPI ERR_WIN.
* mpi4py.MPI.ERR_FILE: mpi4py MPI ERR_FILE.
* mpi4py.MPI.ERR_BUFFER: mpi4py MPI ERR_BUFFER.
* mpi4py.MPI.ERR_COUNT: mpi4py MPI ERR_COUNT.
* mpi4py.MPI.ERR_TAG: mpi4py MPI ERR_TAG.
* mpi4py.MPI.ERR_RANK: mpi4py MPI ERR_RANK.
* mpi4py.MPI.ERR_ROOT: mpi4py MPI ERR_ROOT.
* mpi4py.MPI.ERR_TRUNCATE: mpi4py MPI ERR_TRUNCATE.
* mpi4py.MPI.ERR_IN_STATUS: mpi4py MPI ERR_IN_STATUS.
* mpi4py.MPI.ERR_PENDING: mpi4py MPI ERR_PENDING.
* mpi4py.MPI.ERR_TOPOLOGY: mpi4py MPI ERR_TOPOLOGY.
* mpi4py.MPI.ERR_DIMS: mpi4py MPI ERR_DIMS.
* mpi4py.MPI.ERR_ARG: mpi4py MPI ERR_ARG.
* mpi4py.MPI.ERR_OTHER: mpi4py MPI ERR_OTHER.
* mpi4py.MPI.ERR_UNKNOWN: mpi4py MPI ERR_UNKNOWN.
* mpi4py.MPI.ERR_INTERN: mpi4py MPI ERR_INTERN.
* mpi4py.MPI.ERR_KEYVAL: mpi4py MPI ERR_KEYVAL.
* mpi4py.MPI.ERR_NO_MEM: mpi4py MPI ERR_NO_MEM.
* mpi4py.MPI.ERR_INFO_KEY: mpi4py MPI ERR_INFO_KEY.
* mpi4py.MPI.ERR_INFO_VALUE: mpi4py MPI ERR_INFO_VALUE.
* mpi4py.MPI.ERR_INFO_NOKEY: mpi4py MPI ERR_INFO_NOKEY.
* mpi4py.MPI.ERR_SPAWN: mpi4py MPI ERR_SPAWN.
* mpi4py.MPI.ERR_PORT: mpi4py MPI ERR_PORT.
* mpi4py.MPI.ERR_SERVICE: mpi4py MPI ERR_SERVICE.
* mpi4py.MPI.ERR_NAME: mpi4py MPI ERR_NAME.
* mpi4py.MPI.ERR_PROC_ABORTED: mpi4py MPI ERR_PROC_ABORTED.
* mpi4py.MPI.ERR_BASE: mpi4py MPI ERR_BASE.
* mpi4py.MPI.ERR_SIZE: mpi4py MPI ERR_SIZE.
* mpi4py.MPI.ERR_DISP: mpi4py MPI ERR_DISP.
* mpi4py.MPI.ERR_ASSERT: mpi4py MPI ERR_ASSERT.
* mpi4py.MPI.ERR_LOCKTYPE: mpi4py MPI ERR_LOCKTYPE.
* mpi4py.MPI.ERR_RMA_CONFLICT: mpi4py MPI ERR_RMA_CONFLICT.
* mpi4py.MPI.ERR_RMA_SYNC: mpi4py MPI ERR_RMA_SYNC.
* mpi4py.MPI.ERR_RMA_RANGE: mpi4py MPI ERR_RMA_RANGE.
* mpi4py.MPI.ERR_RMA_ATTACH: mpi4py MPI ERR_RMA_ATTACH.
* mpi4py.MPI.ERR_RMA_SHARED: mpi4py MPI ERR_RMA_SHARED.
* mpi4py.MPI.ERR_RMA_FLAVOR: mpi4py MPI ERR_RMA_FLAVOR.
* mpi4py.MPI.ERR_BAD_FILE: mpi4py MPI ERR_BAD_FILE.
* mpi4py.MPI.ERR_NO_SUCH_FILE: mpi4py MPI ERR_NO_SUCH_FILE.
* mpi4py.MPI.ERR_FILE_EXISTS: mpi4py MPI ERR_FILE_EXISTS.
* mpi4py.MPI.ERR_FILE_IN_USE: mpi4py MPI ERR_FILE_IN_USE.
* mpi4py.MPI.ERR_AMODE: mpi4py MPI ERR_AMODE.
* mpi4py.MPI.ERR_ACCESS: mpi4py MPI ERR_ACCESS.
* mpi4py.MPI.ERR_READ_ONLY: mpi4py MPI ERR_READ_ONLY.
* mpi4py.MPI.ERR_NO_SPACE: mpi4py MPI ERR_NO_SPACE.
* mpi4py.MPI.ERR_QUOTA: mpi4py MPI ERR_QUOTA.
* mpi4py.MPI.ERR_NOT_SAME: mpi4py MPI ERR_NOT_SAME.
* mpi4py.MPI.ERR_IO: mpi4py MPI ERR_IO.
* mpi4py.MPI.ERR_UNSUPPORTED_OPERATION: mpi4py MPI ERR_UNSUPPORTED_OPERATION.
* mpi4py.MPI.ERR_UNSUPPORTED_DATAREP: mpi4py MPI ERR_UNSUPPORTED_DATAREP.
* mpi4py.MPI.ERR_CONVERSION: mpi4py MPI ERR_CONVERSION.
* mpi4py.MPI.ERR_DUP_DATAREP: mpi4py MPI ERR_DUP_DATAREP.
* mpi4py.MPI.ERR_VALUE_TOO_LARGE: mpi4py MPI ERR_VALUE_TOO_LARGE.
* mpi4py.MPI.ERR_REVOKED: mpi4py MPI ERR_REVOKED.
* mpi4py.MPI.ERR_PROC_FAILED: mpi4py MPI ERR_PROC_FAILED.
* mpi4py.MPI.ERR_PROC_FAILED_PENDING: mpi4py MPI ERR_PROC_FAILED_PENDING.
* mpi4py.MPI.ORDER_C: mpi4py MPI ORDER_C.
* mpi4py.MPI.ORDER_FORTRAN: mpi4py MPI ORDER_FORTRAN.
* mpi4py.MPI.ORDER_F: mpi4py MPI ORDER_F.
* mpi4py.MPI.TYPECLASS_INTEGER: mpi4py MPI TYPECLASS_INTEGER.
* mpi4py.MPI.TYPECLASS_REAL: mpi4py MPI TYPECLASS_REAL.
* mpi4py.MPI.TYPECLASS_COMPLEX: mpi4py MPI TYPECLASS_COMPLEX.
* mpi4py.MPI.DISTRIBUTE_NONE: mpi4py MPI DISTRIBUTE_NONE.
* mpi4py.MPI.DISTRIBUTE_BLOCK: mpi4py MPI DISTRIBUTE_BLOCK.
* mpi4py.MPI.DISTRIBUTE_CYCLIC: mpi4py MPI DISTRIBUTE_CYCLIC.
* mpi4py.MPI.DISTRIBUTE_DFLT_DARG: mpi4py MPI DISTRIBUTE_DFLT_DARG.
* mpi4py.MPI.COMBINER_NAMED: mpi4py MPI COMBINER_NAMED.
* mpi4py.MPI.COMBINER_DUP: mpi4py MPI COMBINER_DUP.
* mpi4py.MPI.COMBINER_CONTIGUOUS: mpi4py MPI COMBINER_CONTIGUOUS.
* mpi4py.MPI.COMBINER_VECTOR: mpi4py MPI COMBINER_VECTOR.
* mpi4py.MPI.COMBINER_HVECTOR: mpi4py MPI COMBINER_HVECTOR.
* mpi4py.MPI.COMBINER_INDEXED: mpi4py MPI COMBINER_INDEXED.
* mpi4py.MPI.COMBINER_HINDEXED: mpi4py MPI COMBINER_HINDEXED.
* mpi4py.MPI.COMBINER_INDEXED_BLOCK: mpi4py MPI COMBINER_INDEXED_BLOCK.
* mpi4py.MPI.COMBINER_HINDEXED_BLOCK: mpi4py MPI COMBINER_HINDEXED_BLOCK.
* mpi4py.MPI.COMBINER_STRUCT: mpi4py MPI COMBINER_STRUCT.
* mpi4py.MPI.COMBINER_SUBARRAY: mpi4py MPI COMBINER_SUBARRAY.
* mpi4py.MPI.COMBINER_DARRAY: mpi4py MPI COMBINER_DARRAY.
* mpi4py.MPI.COMBINER_RESIZED: mpi4py MPI COMBINER_RESIZED.
* mpi4py.MPI.COMBINER_VALUE_INDEX: mpi4py MPI COMBINER_VALUE_INDEX.
* mpi4py.MPI.COMBINER_F90_INTEGER: mpi4py MPI COMBINER_F90_INTEGER.
* mpi4py.MPI.COMBINER_F90_REAL: mpi4py MPI COMBINER_F90_REAL.
* mpi4py.MPI.COMBINER_F90_COMPLEX: mpi4py MPI COMBINER_F90_COMPLEX.
* mpi4py.MPI.F_SOURCE: mpi4py MPI F_SOURCE.
* mpi4py.MPI.F_TAG: mpi4py MPI F_TAG.
* mpi4py.MPI.F_ERROR: mpi4py MPI F_ERROR.
* mpi4py.MPI.F_STATUS_SIZE: mpi4py MPI F_STATUS_SIZE.
* mpi4py.MPI.IDENT: mpi4py MPI IDENT.
* mpi4py.MPI.CONGRUENT: mpi4py MPI CONGRUENT.
* mpi4py.MPI.SIMILAR: mpi4py MPI SIMILAR.
* mpi4py.MPI.UNEQUAL: mpi4py MPI UNEQUAL.
* mpi4py.MPI.CART: mpi4py MPI CART.
* mpi4py.MPI.GRAPH: mpi4py MPI GRAPH.
* mpi4py.MPI.DIST_GRAPH: mpi4py MPI DIST_GRAPH.
* mpi4py.MPI.UNWEIGHTED: mpi4py MPI UNWEIGHTED.
* mpi4py.MPI.WEIGHTS_EMPTY: mpi4py MPI WEIGHTS_EMPTY.
* mpi4py.MPI.COMM_TYPE_SHARED: mpi4py MPI COMM_TYPE_SHARED.
* mpi4py.MPI.COMM_TYPE_HW_GUIDED: mpi4py MPI COMM_TYPE_HW_GUIDED.
* mpi4py.MPI.COMM_TYPE_HW_UNGUIDED: mpi4py MPI COMM_TYPE_HW_UNGUIDED.
* mpi4py.MPI.COMM_TYPE_RESOURCE_GUIDED: mpi4py MPI COMM_TYPE_RESOURCE_GUIDED.
* mpi4py.MPI.BSEND_OVERHEAD: mpi4py MPI BSEND_OVERHEAD.
* mpi4py.MPI.BUFFER_AUTOMATIC: mpi4py MPI BUFFER_AUTOMATIC.
* mpi4py.MPI.WIN_FLAVOR_CREATE: mpi4py MPI WIN_FLAVOR_CREATE.
* mpi4py.MPI.WIN_FLAVOR_ALLOCATE: mpi4py MPI WIN_FLAVOR_ALLOCATE.
* mpi4py.MPI.WIN_FLAVOR_DYNAMIC: mpi4py MPI WIN_FLAVOR_DYNAMIC.
* mpi4py.MPI.WIN_FLAVOR_SHARED: mpi4py MPI WIN_FLAVOR_SHARED.
* mpi4py.MPI.WIN_SEPARATE: mpi4py MPI WIN_SEPARATE.
* mpi4py.MPI.WIN_UNIFIED: mpi4py MPI WIN_UNIFIED.
* mpi4py.MPI.MODE_NOCHECK: mpi4py MPI MODE_NOCHECK.
* mpi4py.MPI.MODE_NOSTORE: mpi4py MPI MODE_NOSTORE.
* mpi4py.MPI.MODE_NOPUT: mpi4py MPI MODE_NOPUT.
* mpi4py.MPI.MODE_NOPRECEDE: mpi4py MPI MODE_NOPRECEDE.
* mpi4py.MPI.MODE_NOSUCCEED: mpi4py MPI MODE_NOSUCCEED.
* mpi4py.MPI.LOCK_EXCLUSIVE: mpi4py MPI LOCK_EXCLUSIVE.
* mpi4py.MPI.LOCK_SHARED: mpi4py MPI LOCK_SHARED.
* mpi4py.MPI.MODE_RDONLY: mpi4py MPI MODE_RDONLY.
* mpi4py.MPI.MODE_WRONLY: mpi4py MPI MODE_WRONLY.
* mpi4py.MPI.MODE_RDWR: mpi4py MPI MODE_RDWR.
* mpi4py.MPI.MODE_CREATE: mpi4py MPI MODE_CREATE.
* mpi4py.MPI.MODE_EXCL: mpi4py MPI MODE_EXCL.
* mpi4py.MPI.MODE_DELETE_ON_CLOSE: mpi4py MPI MODE_DELETE_ON_CLOSE.
* mpi4py.MPI.MODE_UNIQUE_OPEN: mpi4py MPI MODE_UNIQUE_OPEN.
* mpi4py.MPI.MODE_SEQUENTIAL: mpi4py MPI MODE_SEQUENTIAL.
* mpi4py.MPI.MODE_APPEND: mpi4py MPI MODE_APPEND.
* mpi4py.MPI.SEEK_SET: mpi4py MPI SEEK_SET.
* mpi4py.MPI.SEEK_CUR: mpi4py MPI SEEK_CUR.
* mpi4py.MPI.SEEK_END: mpi4py MPI SEEK_END.
* mpi4py.MPI.DISPLACEMENT_CURRENT: mpi4py MPI DISPLACEMENT_CURRENT.
* mpi4py.MPI.DISP_CUR: mpi4py MPI DISP_CUR.
* mpi4py.MPI.THREAD_SINGLE: mpi4py MPI THREAD_SINGLE.
* mpi4py.MPI.THREAD_FUNNELED: mpi4py MPI THREAD_FUNNELED.
* mpi4py.MPI.THREAD_SERIALIZED: mpi4py MPI THREAD_SERIALIZED.
* mpi4py.MPI.THREAD_MULTIPLE: mpi4py MPI THREAD_MULTIPLE.
* mpi4py.MPI.VERSION: mpi4py MPI VERSION.
* mpi4py.MPI.SUBVERSION: mpi4py MPI SUBVERSION.
* mpi4py.MPI.MAX_PROCESSOR_NAME: mpi4py MPI MAX_PROCESSOR_NAME.
* mpi4py.MPI.MAX_ERROR_STRING: mpi4py MPI MAX_ERROR_STRING.
* mpi4py.MPI.MAX_PORT_NAME: mpi4py MPI MAX_PORT_NAME.
* mpi4py.MPI.MAX_INFO_KEY: mpi4py MPI MAX_INFO_KEY.
* mpi4py.MPI.MAX_INFO_VAL: mpi4py MPI MAX_INFO_VAL.
* mpi4py.MPI.MAX_OBJECT_NAME: mpi4py MPI MAX_OBJECT_NAME.
* mpi4py.MPI.MAX_DATAREP_STRING: mpi4py MPI MAX_DATAREP_STRING.
* mpi4py.MPI.MAX_LIBRARY_VERSION_STRING: mpi4py MPI MAX_LIBRARY_VERSION_STRING.
* mpi4py.MPI.MAX_PSET_NAME_LEN: mpi4py MPI MAX_PSET_NAME_LEN.
* mpi4py.MPI.MAX_STRINGTAG_LEN: mpi4py MPI MAX_STRINGTAG_LEN.
* mpi4py.MPI.DATATYPE_NULL: mpi4py MPI DATATYPE_NULL.
* mpi4py.MPI.PACKED: mpi4py MPI PACKED.
* mpi4py.MPI.BYTE: mpi4py MPI BYTE.
* mpi4py.MPI.AINT: mpi4py MPI AINT.
* mpi4py.MPI.OFFSET: mpi4py MPI OFFSET.
* mpi4py.MPI.COUNT: mpi4py MPI COUNT.
* mpi4py.MPI.CHAR: mpi4py MPI CHAR.
* mpi4py.MPI.WCHAR: mpi4py MPI WCHAR.
* mpi4py.MPI.SIGNED_CHAR: mpi4py MPI SIGNED_CHAR.
* mpi4py.MPI.SHORT: mpi4py MPI SHORT.
* mpi4py.MPI.INT: mpi4py MPI INT.
* mpi4py.MPI.LONG: mpi4py MPI LONG.
* mpi4py.MPI.LONG_LONG: mpi4py MPI LONG_LONG.
* mpi4py.MPI.UNSIGNED_CHAR: mpi4py MPI UNSIGNED_CHAR.
* mpi4py.MPI.UNSIGNED_SHORT: mpi4py MPI UNSIGNED_SHORT.
* mpi4py.MPI.UNSIGNED: mpi4py MPI UNSIGNED.
* mpi4py.MPI.UNSIGNED_LONG: mpi4py MPI UNSIGNED_LONG.
* mpi4py.MPI.UNSIGNED_LONG_LONG: mpi4py MPI UNSIGNED_LONG_LONG.
* mpi4py.MPI.FLOAT: mpi4py MPI FLOAT.
* mpi4py.MPI.DOUBLE: mpi4py MPI DOUBLE.
* mpi4py.MPI.LONG_DOUBLE: mpi4py MPI LONG_DOUBLE.
* mpi4py.MPI.C_BOOL: mpi4py MPI C_BOOL.
* mpi4py.MPI.INT8_T: mpi4py MPI INT8_T.
* mpi4py.MPI.INT16_T: mpi4py MPI INT16_T.
* mpi4py.MPI.INT32_T: mpi4py MPI INT32_T.
* mpi4py.MPI.INT64_T: mpi4py MPI INT64_T.
* mpi4py.MPI.UINT8_T: mpi4py MPI UINT8_T.
* mpi4py.MPI.UINT16_T: mpi4py MPI UINT16_T.
* mpi4py.MPI.UINT32_T: mpi4py MPI UINT32_T.
* mpi4py.MPI.UINT64_T: mpi4py MPI UINT64_T.
* mpi4py.MPI.C_COMPLEX: mpi4py MPI C_COMPLEX.
* mpi4py.MPI.C_FLOAT_COMPLEX: mpi4py MPI C_FLOAT_COMPLEX.
* mpi4py.MPI.C_DOUBLE_COMPLEX: mpi4py MPI C_DOUBLE_COMPLEX.
* mpi4py.MPI.C_LONG_DOUBLE_COMPLEX: mpi4py MPI C_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_BOOL: mpi4py MPI CXX_BOOL.
* mpi4py.MPI.CXX_FLOAT_COMPLEX: mpi4py MPI CXX_FLOAT_COMPLEX.
* mpi4py.MPI.CXX_DOUBLE_COMPLEX: mpi4py MPI CXX_DOUBLE_COMPLEX.
* mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX.
* mpi4py.MPI.SHORT_INT: mpi4py MPI SHORT_INT.
* mpi4py.MPI.INT_INT: mpi4py MPI INT_INT.
* mpi4py.MPI.TWOINT: mpi4py MPI TWOINT.
* mpi4py.MPI.LONG_INT: mpi4py MPI LONG_INT.
* mpi4py.MPI.FLOAT_INT: mpi4py MPI FLOAT_INT.
* mpi4py.MPI.DOUBLE_INT: mpi4py MPI DOUBLE_INT.
* mpi4py.MPI.LONG_DOUBLE_INT: mpi4py MPI LONG_DOUBLE_INT.
* mpi4py.MPI.CHARACTER: mpi4py MPI CHARACTER.
* mpi4py.MPI.LOGICAL: mpi4py MPI LOGICAL.
* mpi4py.MPI.INTEGER: mpi4py MPI INTEGER.
* mpi4py.MPI.REAL: mpi4py MPI REAL.
* mpi4py.MPI.DOUBLE_PRECISION: mpi4py MPI DOUBLE_PRECISION.
* mpi4py.MPI.COMPLEX: mpi4py MPI COMPLEX.
* mpi4py.MPI.DOUBLE_COMPLEX: mpi4py MPI DOUBLE_COMPLEX.
* mpi4py.MPI.LOGICAL1: mpi4py MPI LOGICAL1.
* mpi4py.MPI.LOGICAL2: mpi4py MPI LOGICAL2.
* mpi4py.MPI.LOGICAL4: mpi4py MPI LOGICAL4.
* mpi4py.MPI.LOGICAL8: mpi4py MPI LOGICAL8.
* mpi4py.MPI.INTEGER1: mpi4py MPI INTEGER1.
* mpi4py.MPI.INTEGER2: mpi4py MPI INTEGER2.
* mpi4py.MPI.INTEGER4: mpi4py MPI INTEGER4.
* mpi4py.MPI.INTEGER8: mpi4py MPI INTEGER8.
* mpi4py.MPI.INTEGER16: mpi4py MPI INTEGER16.
* mpi4py.MPI.REAL2: mpi4py MPI REAL2.
* mpi4py.MPI.REAL4: mpi4py MPI REAL4.
* mpi4py.MPI.REAL8: mpi4py MPI REAL8.
* mpi4py.MPI.REAL16: mpi4py MPI REAL16.
* mpi4py.MPI.COMPLEX4: mpi4py MPI COMPLEX4.
* mpi4py.MPI.COMPLEX8: mpi4py MPI COMPLEX8.
* mpi4py.MPI.COMPLEX16: mpi4py MPI COMPLEX16.
* mpi4py.MPI.COMPLEX32: mpi4py MPI COMPLEX32.
* mpi4py.MPI.UNSIGNED_INT: mpi4py MPI UNSIGNED_INT.
* mpi4py.MPI.SIGNED_SHORT: mpi4py MPI SIGNED_SHORT.
* mpi4py.MPI.SIGNED_INT: mpi4py MPI SIGNED_INT.
* mpi4py.MPI.SIGNED_LONG: mpi4py MPI SIGNED_LONG.
* mpi4py.MPI.SIGNED_LONG_LONG: mpi4py MPI SIGNED_LONG_LONG.
* mpi4py.MPI.BOOL: mpi4py MPI BOOL.
* mpi4py.MPI.SINT8_T: mpi4py MPI SINT8_T.
* mpi4py.MPI.SINT16_T: mpi4py MPI SINT16_T.
* mpi4py.MPI.SINT32_T: mpi4py MPI SINT32_T.
* mpi4py.MPI.SINT64_T: mpi4py MPI SINT64_T.
* mpi4py.MPI.F_BOOL: mpi4py MPI F_BOOL.
* mpi4py.MPI.F_INT: mpi4py MPI F_INT.
* mpi4py.MPI.F_FLOAT: mpi4py MPI F_FLOAT.
* mpi4py.MPI.F_DOUBLE: mpi4py MPI F_DOUBLE.
* mpi4py.MPI.F_COMPLEX: mpi4py MPI F_COMPLEX.
* mpi4py.MPI.F_FLOAT_COMPLEX: mpi4py MPI F_FLOAT_COMPLEX.
* mpi4py.MPI.F_DOUBLE_COMPLEX: mpi4py MPI F_DOUBLE_COMPLEX.
* mpi4py.MPI.REQUEST_NULL: mpi4py MPI REQUEST_NULL.
* mpi4py.MPI.MESSAGE_NULL: mpi4py MPI MESSAGE_NULL.
* mpi4py.MPI.MESSAGE_NO_PROC: mpi4py MPI MESSAGE_NO_PROC.
* mpi4py.MPI.OP_NULL: mpi4py MPI OP_NULL.
* mpi4py.MPI.MAX: mpi4py MPI MAX.
* mpi4py.MPI.MIN: mpi4py MPI MIN.
* mpi4py.MPI.SUM: mpi4py MPI SUM.
* mpi4py.MPI.PROD: mpi4py MPI PROD.
* mpi4py.MPI.LAND: mpi4py MPI LAND.
* mpi4py.MPI.BAND: mpi4py MPI BAND.
* mpi4py.MPI.LOR: mpi4py MPI LOR.
* mpi4py.MPI.BOR: mpi4py MPI BOR.
* mpi4py.MPI.LXOR: mpi4py MPI LXOR.
* mpi4py.MPI.BXOR: mpi4py MPI BXOR.
* mpi4py.MPI.MAXLOC: mpi4py MPI MAXLOC.
* mpi4py.MPI.MINLOC: mpi4py MPI MINLOC.
* mpi4py.MPI.REPLACE: mpi4py MPI REPLACE.
* mpi4py.MPI.NO_OP: mpi4py MPI NO_OP.
* mpi4py.MPI.GROUP_NULL: mpi4py MPI GROUP_NULL.
* mpi4py.MPI.GROUP_EMPTY: mpi4py MPI GROUP_EMPTY.
* mpi4py.MPI.INFO_NULL: mpi4py MPI INFO_NULL.
* mpi4py.MPI.INFO_ENV: mpi4py MPI INFO_ENV.
* mpi4py.MPI.ERRHANDLER_NULL: mpi4py MPI ERRHANDLER_NULL.
* mpi4py.MPI.ERRORS_RETURN: mpi4py MPI ERRORS_RETURN.
* mpi4py.MPI.ERRORS_ABORT: mpi4py MPI ERRORS_ABORT.
* mpi4py.MPI.ERRORS_ARE_FATAL: mpi4py MPI ERRORS_ARE_FATAL.
* mpi4py.MPI.SESSION_NULL: mpi4py MPI SESSION_NULL.
* mpi4py.MPI.COMM_NULL: mpi4py MPI COMM_NULL.
* mpi4py.MPI.COMM_SELF: mpi4py MPI COMM_SELF.
* mpi4py.MPI.COMM_WORLD: mpi4py MPI COMM_WORLD.
* mpi4py.MPI.WIN_NULL: mpi4py MPI WIN_NULL.
* mpi4py.MPI.FILE_NULL: mpi4py MPI FILE_NULL.
* mpi4py.MPI.pickle: mpi4py MPI pickle.


File: mpi4py.info,  Node: mpi4py MPI BottomType,  Next: mpi4py MPI BufferAutomaticType,  Up: mpi4py MPI<2>

11.1.1 mpi4py.MPI.BottomType
----------------------------

 -- Class: mpi4py.MPI.BottomType

     Bases: int(1)

     Type of *note BOTTOM: fa.

      -- Method: static __new__ (cls)


          Return type: Self(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/typing.html#typing.Self


File: mpi4py.info,  Node: mpi4py MPI BufferAutomaticType,  Next: mpi4py MPI Cartcomm,  Prev: mpi4py MPI BottomType,  Up: mpi4py MPI<2>

11.1.2 mpi4py.MPI.BufferAutomaticType
-------------------------------------

 -- Class: mpi4py.MPI.BufferAutomaticType

     Bases: int(1)

     Type of *note BUFFER_AUTOMATIC: fe.

      -- Method: static __new__ (cls)


          Return type: Self(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/typing.html#typing.Self


File: mpi4py.info,  Node: mpi4py MPI Cartcomm,  Next: mpi4py MPI Comm,  Prev: mpi4py MPI BufferAutomaticType,  Up: mpi4py MPI<2>

11.1.3 mpi4py.MPI.Cartcomm
--------------------------

 -- Class: mpi4py.MPI.Cartcomm

     Bases: *note Topocomm: d6.

     Cartesian topology intracommunicator.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (*note Cartcomm: 33.‘ | ’None(1))


          Return type: Self(2)

     Methods Summary
     ...............

     *note Get_cart_rank: 2c6.(coords)Translate logical coordinates to ranks.
                    
                    
     *note Get_coords: 2c7.(rank)Translate ranks to logical coordinates.
                    
                    
     *note Get_dim: 2c8.()Return number of dimensions.
                    
                    
     *note Get_topo: 2c9.()Return information on the cartesian topology.
                    
                    
     *note Shift: 2ca.(direction,Return a process ranks for data shifting with *note Sendrecv: 3c.
     disp)          

     *note Sub: 2cb.(remain_dims)Return a lower-dimensional Cartesian topology.
                    

     Attributes Summary
     ..................

     *note coords: 2cc.Coordinates.
                    
                    
     *note dim: 2cd.Number of dimensions.
                    
                    
     *note dims: 2ce.Dimensions.
                    
                    
     *note ndim: 2cf.Number of dimensions.
                    
                    
     *note periods: 2d0.Periodicity.
                    
                    
     *note topo: 2d1.Topology information.
                    

     Methods Documentation
     .....................

      -- Method: Get_cart_rank (coords)

          Translate logical coordinates to ranks.


          Parameters: ‘coords’ (Sequence(3)‘[’int(4)‘]’)


          Return type: int(5)

      -- Method: Get_coords (rank)

          Translate ranks to logical coordinates.


          Parameters: ‘rank’ (int(6))


          Return type: list(7)[int(8)]

      -- Method: Get_dim ()

          Return number of dimensions.


          Return type: int(9)

      -- Method: Get_topo ()

          Return information on the cartesian topology.


          Return type: tuple(10)[list(11)[int(12)], list(13)[int(14)],
          list(15)[int(16)]]

      -- Method: Shift (direction, disp)

          Return a process ranks for data shifting with *note Sendrecv:
          3c.


          Parameters:

             * ‘direction’ (int(17))

             * ‘disp’ (int(18))


          Return type: tuple(19)[int(20), int(21)]

      -- Method: Sub (remain_dims)

          Return a lower-dimensional Cartesian topology.


          Parameters: ‘remain_dims’ (Sequence(22)‘[’bool(23)‘]’)


          Return type: *note Cartcomm: 33.

     Attributes Documentation
     ........................

      -- Attribute: coords

          Coordinates.

      -- Attribute: dim

          Number of dimensions.

      -- Attribute: dims

          Dimensions.

      -- Attribute: ndim

          Number of dimensions.

      -- Attribute: periods

          Periodicity.

      -- Attribute: topo

          Topology information.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/typing.html#typing.Self

   (3) https://docs.python.org/3/library/typing.html#typing.Sequence

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/stdtypes.html#list

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/stdtypes.html#tuple

   (11) https://docs.python.org/3/library/stdtypes.html#list

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/stdtypes.html#list

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/stdtypes.html#list

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/stdtypes.html#tuple

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/typing.html#typing.Sequence

   (23) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Comm,  Next: mpi4py MPI Datatype,  Prev: mpi4py MPI Cartcomm,  Up: mpi4py MPI<2>

11.1.4 mpi4py.MPI.Comm
----------------------

 -- Class: mpi4py.MPI.Comm

     Bases: object(1)

     Communication context.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (*note Comm: 1e.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Abort: 2d5.([errorcode])Terminate the MPI execution environment.
                    
                    
     *note Ack_failed: 2d6.([num_to_ack])Acknowledge failures on a communicator.
                    
                    
     *note Agree: 2d7.(flag)Blocking agreement.
                    
                    
     *note Allgather: 50.(sendbuf,Gather to All.
     recvbuf)       

     *note Allgather_init: 2d8.(sendbuf,Persistent Gather to All.
     recvbuf[,      
     info])

     *note Allgatherv: 59.(sendbuf,Gather to All Vector.
     recvbuf)       

     *note Allgatherv_init: 2d9.(sendbuf,Persistent Gather to All Vector.
     recvbuf[,      
     info])

     *note Allreduce: 5e.(sendbuf,Reduce to All.
     recvbuf[,      
     op])

     *note Allreduce_init: 2da.(sendbuf,Persistent Reduce to All.
     recvbuf[,      
     op, info])

     *note Alltoall: 51.(sendbuf,All to All Scatter/Gather.
     recvbuf)       

     *note Alltoall_init: 2db.(sendbuf,Persistent All to All Scatter/Gather.
     recvbuf[,      
     info])

     *note Alltoallv: 5a.(sendbuf,All to All Scatter/Gather Vector.
     recvbuf)       

     *note Alltoallv_init: 2dc.(sendbuf,Persistent All to All Scatter/Gather Vector.
     recvbuf[,      
     info])

     *note Alltoallw: 5b.(sendbuf,All to All Scatter/Gather General.
     recvbuf)       

     *note Alltoallw_init: 2dd.(sendbuf,Persistent All to All Scatter/Gather General.
     recvbuf[,      
     info])

     *note Attach_buffer: 2de.(buf)Attach a user-provided buffer for sending in buffered mode.
                    
                    
     *note Barrier: 22e.()Barrier synchronization.
                    
                    
     *note Barrier_init: 2df.([info])Persistent Barrier.
                    
                    
     *note Bcast: 4d.(buf[,Broadcast data from one process to all other processes.
     root])         

     *note Bcast_init: 2e0.(buf[,Persistent Broadcast.
     root, info])   

     *note Bsend: 2e1.(buf,Blocking send in buffered mode.
     dest[, tag])   

     *note Bsend_init: 2e2.(buf,Persistent request for a send in buffered mode.
     dest[, tag])   

     *note Call_errhandler: 2e3.(errorcode)Call the error handler installed on a communicator.
                    
                    
     *note Clone: 2e.()Clone an existing communicator.
                    
                    
     *note Compare: 2e4.(comm)Compare two communicators.
                    
                    
     *note Create: 2c.(group)Create communicator from group.
                    
                    
     *note Create_errhandler: 9d.(errhandler_fn)Create a new error handler for communicators.
                    
                    
     *note Create_keyval: 2e5.([copy_fn,Create a new attribute key for communicators.
     delete_fn,     
     nopython])

     *note Delete_attr: 2e6.(keyval)Delete attribute value associated with a key.
                    
                    
     *note Detach_buffer: 2e7.()Remove an existing attached buffer.
                    
                    
     *note Disconnect: 72.()Disconnect from a communicator.
                    
                    
     *note Dup: 2f.([info])Duplicate a communicator.
                    
                    
     *note Dup_with_info: 2e8.(info)Duplicate a communicator with hints.
                    
                    
     *note Flush_buffer: 2e9.()Block until all buffered messages have been transmitted.
                    
                    
     *note Free: 2ea.()Free a communicator.
                    
                    
     *note Free_keyval: 2eb.(keyval)Free an attribute key for communicators.
                    
                    
     *note Gather: 4f.(sendbuf,Gather data to one process from all other processes.
     recvbuf[,      
     root])

     *note Gather_init: 2ec.(sendbuf,Persistent Gather.
     recvbuf[,      
     root, info])

     *note Gatherv: 58.(sendbuf,Gather Vector.
     recvbuf[,      
     root])

     *note Gatherv_init: 2ed.(sendbuf,Persistent Gather Vector.
     recvbuf[,      
     root, info])

     *note Get_attr: 94.(keyval)Retrieve attribute value by key.
                    
                    
     *note Get_errhandler: 9c.()Get the error handler for a communicator.
                    
                    
     *note Get_failed: 2ee.()Extract the group of failed processes.
                    
                    
     *note Get_group: 27.()Access the group associated with a communicator.
                    
                    
     *note Get_info: 2ef.()Return the current hints for a communicator.
                    
                    
     *note Get_name: 2f0.()Get the print name for this communicator.
                    
                    
     *note Get_parent: 6c.()Return the parent intercommunicator for this process.
                    
                    
     *note Get_rank: 26.()Return the rank of this process in a communicator.
                    
                    
     *note Get_size: 25.()Return the number of processes in a communicator.
                    
                    
     *note Get_topology: 2f1.()Return the type of topology (if any) associated with a communicator.
                    
                    
     *note Iagree: 2f2.(flag)Nonblocking agreement.
                    
                    
     *note Iallgather: 2f3.(sendbuf,Nonblocking Gather to All.
     recvbuf)       

     *note Iallgatherv: 2f4.(sendbuf,Nonblocking Gather to All Vector.
     recvbuf)       

     *note Iallreduce: 2f5.(sendbuf,Nonblocking Reduce to All.
     recvbuf[,      
     op])

     *note Ialltoall: 2f6.(sendbuf,Nonblocking All to All Scatter/Gather.
     recvbuf)       

     *note Ialltoallv: 2f7.(sendbuf,Nonblocking All to All Scatter/Gather Vector.
     recvbuf)       

     *note Ialltoallw: 2f8.(sendbuf,Nonblocking All to All Scatter/Gather General.
     recvbuf)       

     *note Ibarrier: 2f9.()Nonblocking Barrier.
                    
                    
     *note Ibcast: 2fa.(buf[,Nonblocking Broadcast.
     root])         

     *note Ibsend: 2fb.(buf,Nonblocking send in buffered mode.
     dest[, tag])   

     *note Idup: 2fc.([info])Nonblocking duplicate a communicator.
                    
                    
     *note Idup_with_info: 2fd.(info)Nonblocking duplicate a communicator with hints.
                    
                    
     *note Iflush_buffer: 2fe.()Nonblocking flush for buffered messages.
                    
                    
     *note Igather: 2ff.(sendbuf,Nonblocking Gather.
     recvbuf[,      
     root])

     *note Igatherv: 300.(sendbuf,Nonblocking Gather Vector.
     recvbuf[,      
     root])

     *note Improbe: 301.([source,Nonblocking test for a matched message.
     tag,           
     status])

     *note Iprobe: 302.([source,Nonblocking test for a message.
     tag,           
     status])

     *note Irecv: 42.(buf[,Nonblocking receive.
     source,        
     tag])

     *note Ireduce: 303.(sendbuf,Nonblocking Reduce to Root.
     recvbuf[,      
     op, root])

     *note Ireduce_scatter: 304.(sendbuf,Nonblocking Reduce-Scatter (vector version).
     recvbuf[,      
     ...])

     *note Ireduce_scatter_block: 305.(sendbuf,Nonblocking Reduce-Scatter Block (regular, non-vector version).
     recvbuf[,      
     op])

     *note Irsend: 306.(buf,Nonblocking send in ready mode.
     dest[, tag])   

     *note Is_inter: 21.()Return whether the communicator is an intercommunicator.
                    
                    
     *note Is_intra: 22.()Return whether the communicator is an intracommunicator.
                    
                    
     *note Is_revoked: 307.()Indicate whether the communicator has been revoked.
                    
                    
     *note Iscatter: 308.(sendbuf,Nonblocking Scatter.
     recvbuf[,      
     root])

     *note Iscatterv: 309.(sendbuf,Nonblocking Scatter Vector.
     recvbuf[,      
     root])

     *note Isend: 41.(buf,Nonblocking send.
     dest[, tag])   

     *note Isendrecv: 30a.(sendbuf,Nonblocking send and receive.
     dest[,         
     sendtag,
     recvbuf,
     ...])

     *note Isendrecv_replace: 30b.(buf,Send and receive a message.
     dest[,         
     sendtag,
     ...])

     *note Ishrink: 30c.()Nonblocking shrink a communicator to remove all failed processes.
                    
                    
     *note Issend: 30d.(buf,Nonblocking send in synchronous mode.
     dest[, tag])   

     *note Join: 30e.(fd)Interconnect two processes connected by a socket.
                    
                    
     *note Mprobe: 30f.([source,Blocking test for a matched message.
     tag,           
     status])

     *note Precv_init: 310.(buf,Create request for a partitioned recv operation.
     partitions[,   
     source, tag,
     info])

     *note Probe: 311.([source,Blocking test for a message.
     tag,           
     status])

     *note Psend_init: 312.(buf,Create request for a partitioned send operation.
     partitions,    
     dest[, tag,
     info])

     *note Recv: 3b.(buf[,Blocking receive.
     source, tag,   
     status])

     *note Recv_init: 49.(buf[,Create a persistent request for a receive.
     source,        
     tag])

     *note Reduce: 5c.(sendbuf,Reduce to Root.
     recvbuf[,      
     op, root])

     *note Reduce_init: 313.(sendbuf,Persistent Reduce to Root.
     recvbuf[,      
     op, root,
     info])

     *note Reduce_scatter: 5d.(sendbuf,Reduce-Scatter (vector version).
     recvbuf[,      
     ...])

     *note Reduce_scatter_block: 314.(sendbuf,Reduce-Scatter Block (regular, non-vector version).
     recvbuf[,      
     op])

     *note Reduce_scatter_block_init: 315.(sendbuf,Persistent Reduce-Scatter Block (regular, non-vector version).
     recvbuf)       

     *note Reduce_scatter_init: 316.(sendbuf,Persistent Reduce-Scatter (vector version).
     recvbuf[,      
     ...])

     *note Revoke: 317.()Revoke a communicator.
                    
                    
     *note Rsend: 318.(buf,Blocking send in ready mode.
     dest[, tag])   

     *note Rsend_init: 319.(buf,Persistent request for a send in ready mode.
     dest[, tag])   

     *note Scatter: 4e.(sendbuf,Scatter data from one process to all other processes.
     recvbuf[,      
     root])

     *note Scatter_init: 31a.(sendbuf,Persistent Scatter.
     recvbuf[,      
     root, info])

     *note Scatterv: 57.(sendbuf,Scatter Vector.
     recvbuf[,      
     root])

     *note Scatterv_init: 31b.(sendbuf,Persistent Scatter Vector.
     recvbuf[,      
     root, info])

     *note Send: 3a.(buf,Blocking send.
     dest[, tag])   

     *note Send_init: 48.(buf,Create a persistent request for a standard send.
     dest[, tag])   

     *note Sendrecv: 3c.(sendbuf,Send and receive a message.
     dest[,         
     sendtag,
     recvbuf,
     ...])

     *note Sendrecv_replace: 31c.(buf,Send and receive a message.
     dest[,         
     sendtag,
     ...])

     *note Set_attr: 31d.(keyval,Store attribute value associated with a key.
     attrval)       

     *note Set_errhandler: 9b.(errhandler)Set the error handler for a communicator.
                    
                    
     *note Set_info: 31e.(info)Set new values for the hints associated with a communicator.
                    
                    
     *note Set_name: 31f.(name)Set the print name for this communicator.
                    
                    
     *note Shrink: 320.()Shrink a communicator to remove all failed processes.
                    
                    
     *note Split: 30.([color,Split communicator by color and key.
     key])          

     *note Split_type: 321.(split_type[,Split communicator by split type.
     key, info])    

     *note Ssend: 322.(buf,Blocking send in synchronous mode.
     dest[, tag])   

     *note Ssend_init: 323.(buf,Persistent request for a send in synchronous mode.
     dest[, tag])   

     *note allgather: 55.(sendobj)Gather to All.
                    
                    
     *note allreduce: 62.(sendobj[,Reduce to All.
     op])           

     *note alltoall: 56.(sendobj)All to All Scatter/Gather.
                    
                    
     *note barrier: 324.()Barrier synchronization.
                    
                    
     *note bcast: 52.(obj[,Broadcast.
     root])         

     *note bsend: 325.(obj,Send in buffered mode.
     dest[, tag])   

     *note f2py: 326.(arg)

     *note free: 327.()Call *note Free: 2ea. if not null or predefined.
                    
                    
     *note fromhandle: 328.(handle)Create object from MPI handle.
                    
                    
     *note gather: 54.(sendobj[,Gather.
     root])         

     *note ibsend: 329.(obj,Nonblocking send in buffered mode.
     dest[, tag])   

     *note improbe: 32a.([source,Nonblocking test for a matched message.
     tag,           
     status])

     *note iprobe: 32b.([source,Nonblocking test for a message.
     tag,           
     status])

     *note irecv: a2.([buf,Nonblocking receive.
     source,        
     tag])

     *note isend: a1.(obj,Nonblocking send.
     dest[, tag])   

     *note issend: 32c.(obj,Nonblocking send in synchronous mode.
     dest[, tag])   

     *note mprobe: 32d.([source,Blocking test for a matched message.
     tag,           
     status])

     *note probe: 32e.([source,Blocking test for a message.
     tag,           
     status])

     *note py2f: 32f.()

     *note recv: 3e.([buf,Receive.
     source, tag,   
     status])

     *note reduce: 61.(sendobj[,Reduce to Root.
     op, root])     

     *note scatter: 53.(sendobj[,Scatter.
     root])         

     *note send: 3d.(obj,Send in standard mode.
     dest[, tag])   

     *note sendrecv: 3f.(sendobj,Send and Receive.
     dest[,         
     sendtag,
     recvbuf,
     ...])

     *note ssend: 330.(obj,Send in synchronous mode.
     dest[, tag])   

     Attributes Summary
     ..................

     *note group: 331.Group.
                    
                    
     *note handle: 332.MPI handle.
                    
                    
     *note info: 333.Info hints.
                    
                    
     *note is_inter: 334.Is intercommunicator.
                    
                    
     *note is_intra: 335.Is intracommunicator.
                    
                    
     *note is_topo: 336.Is a topology.
                    
                    
     *note name: 337.Print name.
                    
                    
     *note rank: 338.Rank of this process.
                    
                    
     *note size: a5.Number of processes.
                    
                    
     *note topology: 339.Topology type.
                    

     Methods Documentation
     .....................

      -- Method: Abort (errorcode=0)

          Terminate the MPI execution environment.

               Warning: The invocation of this method prevents the
               execution of various Python exit and cleanup mechanisms.
               Use this method as a last resort to prevent parallel
               deadlocks in case of unrecoverable errors.


          Parameters: ‘errorcode’ (int(4))


          Return type: NoReturn(5)

      -- Method: Ack_failed (num_to_ack=None)

          Acknowledge failures on a communicator.


          Parameters: ‘num_to_ack’ (int(6)‘ | ’None(7))


          Return type: int(8)

      -- Method: Agree (flag)

          Blocking agreement.


          Parameters: ‘flag’ (int(9))


          Return type: int(10)

      -- Method: Allgather (sendbuf, recvbuf)

          Gather to All.

          Gather data from all processes and broadcast the combined data
          to all other processes.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecB: 213.)


          Return type: None(11)

      -- Method: Allgather_init (sendbuf, recvbuf, info=INFO_NULL)

          Persistent Gather to All.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecB: 213.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Allgatherv (sendbuf, recvbuf)

          Gather to All Vector.

          Gather data from all processes and send it to all other
          processes providing different amounts of data and
          displacements.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecV: 214.)


          Return type: None(12)

      -- Method: Allgatherv_init (sendbuf, recvbuf, info=INFO_NULL)

          Persistent Gather to All Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecV: 214.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Allreduce (sendbuf, recvbuf, op=SUM)

          Reduce to All.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.)

             * ‘op’ (*note Op: d3.)


          Return type: None(13)

      -- Method: Allreduce_init (sendbuf, recvbuf, op=SUM,
               info=INFO_NULL)

          Persistent Reduce to All.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.)

             * ‘op’ (*note Op: d3.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Alltoall (sendbuf, recvbuf)

          All to All Scatter/Gather.

          Send data to all processes and recv data from all processes.


          Parameters:

             * ‘sendbuf’ (*note BufSpecB: 213.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecB: 213.)


          Return type: None(14)

      -- Method: Alltoall_init (sendbuf, recvbuf, info=INFO_NULL)

          Persistent All to All Scatter/Gather.


          Parameters:

             * ‘sendbuf’ (*note BufSpecB: 213.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecB: 213.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Alltoallv (sendbuf, recvbuf)

          All to All Scatter/Gather Vector.

          Send data to all processes and recv data from all processes
          providing different amounts of data and displacements.


          Parameters:

             * ‘sendbuf’ (*note BufSpecV: 214.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecV: 214.)


          Return type: None(15)

      -- Method: Alltoallv_init (sendbuf, recvbuf, info=INFO_NULL)

          Persistent All to All Scatter/Gather Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpecV: 214.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecV: 214.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Alltoallw (sendbuf, recvbuf)

          All to All Scatter/Gather General.

          Send/recv data to/from all processes allowing the
          specification of different counts, displacements, and
          datatypes for each dest/source.


          Parameters:

             * ‘sendbuf’ (*note BufSpecW: 215.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecW: 215.)


          Return type: None(16)

      -- Method: Alltoallw_init (sendbuf, recvbuf, info=INFO_NULL)

          Persistent All to All Scatter/Gather General.


          Parameters:

             * ‘sendbuf’ (*note BufSpecW: 215.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecW: 215.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Attach_buffer (buf)

          Attach a user-provided buffer for sending in buffered mode.


          Parameters: ‘buf’ (*note Buffer: 20a.‘ | ’None(17))


          Return type: None(18)

      -- Method: Barrier ()

          Barrier synchronization.


          Return type: None(19)

      -- Method: Barrier_init (info=INFO_NULL)

          Persistent Barrier.


          Parameters: ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Bcast (buf, root=0)

          Broadcast data from one process to all other processes.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘root’ (int(20))


          Return type: None(21)

      -- Method: Bcast_init (buf, root=0, info=INFO_NULL)

          Persistent Broadcast.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘root’ (int(22))

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Bsend (buf, dest, tag=0)

          Blocking send in buffered mode.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(23))

             * ‘tag’ (int(24))


          Return type: None(25)

      -- Method: Bsend_init (buf, dest, tag=0)

          Persistent request for a send in buffered mode.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(26))

             * ‘tag’ (int(27))


          Return type: *note Request: 43.

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a communicator.


          Parameters: ‘errorcode’ (int(28))


          Return type: None(29)

      -- Method: Clone ()

          Clone an existing communicator.


          Return type: Self(30)

      -- Method: Compare (comm)

          Compare two communicators.


          Parameters: ‘comm’ (*note Comm: 1e.)


          Return type: int(31)

      -- Method: Create (group)

          Create communicator from group.


          Parameters: ‘group’ (*note Group: 28.)


          Return type: *note Comm: 1e.

      -- Method: classmethod Create_errhandler (errhandler_fn)

          Create a new error handler for communicators.


          Parameters: ‘errhandler_fn’ (Callable(32)‘[’‘[’*note Comm:
          1e.‘, ’int(33)‘]’‘, ’None(34)‘]’)


          Return type: *note Errhandler: d8.

      -- Method: classmethod Create_keyval (copy_fn=None,
               delete_fn=None, nopython=False)

          Create a new attribute key for communicators.


          Parameters:

             * ‘copy_fn’ (Callable(35)‘[’‘[’*note Comm: 1e.‘, ’int(36)‘,
               ’Any(37)‘]’‘, ’Any(38)‘] ’‘| ’None(39))

             * ‘delete_fn’ (Callable(40)‘[’‘[’*note Comm: 1e.‘,
               ’int(41)‘, ’Any(42)‘]’‘, ’None(43)‘] ’‘| ’None(44))

             * ‘nopython’ (bool(45))


          Return type: int(46)

      -- Method: Delete_attr (keyval)

          Delete attribute value associated with a key.


          Parameters: ‘keyval’ (int(47))


          Return type: None(48)

      -- Method: Detach_buffer ()

          Remove an existing attached buffer.


          Return type: *note Buffer: 20a. | None(49)

      -- Method: Disconnect ()

          Disconnect from a communicator.


          Return type: None(50)

      -- Method: Dup (info=None)

          Duplicate a communicator.


          Parameters: ‘info’ (*note Info: d4.‘ | ’None(51))


          Return type: Self(52)

      -- Method: Dup_with_info (info)

          Duplicate a communicator with hints.


          Parameters: ‘info’ (*note Info: d4.)


          Return type: Self(53)

      -- Method: Flush_buffer ()

          Block until all buffered messages have been transmitted.


          Return type: None(54)

      -- Method: Free ()

          Free a communicator.


          Return type: None(55)

      -- Method: classmethod Free_keyval (keyval)

          Free an attribute key for communicators.


          Parameters: ‘keyval’ (int(56))


          Return type: int(57)

      -- Method: Gather (sendbuf, recvbuf, root=0)

          Gather data to one process from all other processes.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecB: 213.‘ | ’None(58))

             * ‘root’ (int(59))


          Return type: None(60)

      -- Method: Gather_init (sendbuf, recvbuf, root=0, info=INFO_NULL)

          Persistent Gather.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecB: 213.‘ | ’None(61))

             * ‘root’ (int(62))

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Gatherv (sendbuf, recvbuf, root=0)

          Gather Vector.

          Gather data to one process from all other processes providing
          different amounts of data and displacements.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecV: 214.‘ | ’None(63))

             * ‘root’ (int(64))


          Return type: None(65)

      -- Method: Gatherv_init (sendbuf, recvbuf, root=0, info=INFO_NULL)

          Persistent Gather Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecV: 214.‘ | ’None(66))

             * ‘root’ (int(67))

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Get_attr (keyval)

          Retrieve attribute value by key.


          Parameters: ‘keyval’ (int(68))


          Return type: int(69) | Any(70) | None(71)

      -- Method: Get_errhandler ()

          Get the error handler for a communicator.


          Return type: *note Errhandler: d8.

      -- Method: Get_failed ()

          Extract the group of failed processes.


          Return type: *note Group: 28.

      -- Method: Get_group ()

          Access the group associated with a communicator.


          Return type: *note Group: 28.

      -- Method: Get_info ()

          Return the current hints for a communicator.


          Return type: *note Info: d4.

      -- Method: Get_name ()

          Get the print name for this communicator.


          Return type: str(72)

      -- Method: classmethod Get_parent ()

          Return the parent intercommunicator for this process.


          Return type: *note Intercomm: 20.

      -- Method: Get_rank ()

          Return the rank of this process in a communicator.


          Return type: int(73)

      -- Method: Get_size ()

          Return the number of processes in a communicator.


          Return type: int(74)

      -- Method: Get_topology ()

          Return the type of topology (if any) associated with a
          communicator.


          Return type: int(75)

      -- Method: Iagree (flag)

          Nonblocking agreement.


          Parameters: ‘flag’ (*note Buffer: 20a.)


          Return type: *note Request: 43.

      -- Method: Iallgather (sendbuf, recvbuf)

          Nonblocking Gather to All.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecB: 213.)


          Return type: *note Request: 43.

      -- Method: Iallgatherv (sendbuf, recvbuf)

          Nonblocking Gather to All Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecV: 214.)


          Return type: *note Request: 43.

      -- Method: Iallreduce (sendbuf, recvbuf, op=SUM)

          Nonblocking Reduce to All.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.)

             * ‘op’ (*note Op: d3.)


          Return type: *note Request: 43.

      -- Method: Ialltoall (sendbuf, recvbuf)

          Nonblocking All to All Scatter/Gather.


          Parameters:

             * ‘sendbuf’ (*note BufSpecB: 213.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecB: 213.)


          Return type: *note Request: 43.

      -- Method: Ialltoallv (sendbuf, recvbuf)

          Nonblocking All to All Scatter/Gather Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpecV: 214.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecV: 214.)


          Return type: *note Request: 43.

      -- Method: Ialltoallw (sendbuf, recvbuf)

          Nonblocking All to All Scatter/Gather General.


          Parameters:

             * ‘sendbuf’ (*note BufSpecW: 215.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecW: 215.)


          Return type: *note Request: 43.

      -- Method: Ibarrier ()

          Nonblocking Barrier.


          Return type: *note Request: 43.

      -- Method: Ibcast (buf, root=0)

          Nonblocking Broadcast.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘root’ (int(76))


          Return type: *note Request: 43.

      -- Method: Ibsend (buf, dest, tag=0)

          Nonblocking send in buffered mode.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(77))

             * ‘tag’ (int(78))


          Return type: *note Request: 43.

      -- Method: Idup (info=None)

          Nonblocking duplicate a communicator.


          Parameters: ‘info’ (*note Info: d4.‘ | ’None(79))


          Return type: tuple(80)[Self(81), *note Request: 43.]

      -- Method: Idup_with_info (info)

          Nonblocking duplicate a communicator with hints.


          Parameters: ‘info’ (*note Info: d4.)


          Return type: tuple(82)[Self(83), *note Request: 43.]

      -- Method: Iflush_buffer ()

          Nonblocking flush for buffered messages.


          Return type: *note Request: 43.

      -- Method: Igather (sendbuf, recvbuf, root=0)

          Nonblocking Gather.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecB: 213.‘ | ’None(84))

             * ‘root’ (int(85))


          Return type: *note Request: 43.

      -- Method: Igatherv (sendbuf, recvbuf, root=0)

          Nonblocking Gather Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpecV: 214.‘ | ’None(86))

             * ‘root’ (int(87))


          Return type: *note Request: 43.

      -- Method: Improbe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a matched message.


          Parameters:

             * ‘source’ (int(88))

             * ‘tag’ (int(89))

             * ‘status’ (*note Status: d1.‘ | ’None(90))


          Return type: *note Message: d7. | None(91)

      -- Method: Iprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a message.


          Parameters:

             * ‘source’ (int(92))

             * ‘tag’ (int(93))

             * ‘status’ (*note Status: d1.‘ | ’None(94))


          Return type: bool(95)

      -- Method: Irecv (buf, source=ANY_SOURCE, tag=ANY_TAG)

          Nonblocking receive.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘source’ (int(96))

             * ‘tag’ (int(97))


          Return type: *note Request: 43.

      -- Method: Ireduce (sendbuf, recvbuf, op=SUM, root=0)

          Nonblocking Reduce to Root.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’None(98))

             * ‘op’ (*note Op: d3.)

             * ‘root’ (int(99))


          Return type: *note Request: 43.

      -- Method: Ireduce_scatter (sendbuf, recvbuf, recvcounts=None,
               op=SUM)

          Nonblocking Reduce-Scatter (vector version).


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.)

             * ‘recvcounts’ (‘Sequence’‘[’int(100)‘] ’‘| ’None(101))

             * ‘op’ (*note Op: d3.)


          Return type: *note Request: 43.

      -- Method: Ireduce_scatter_block (sendbuf, recvbuf, op=SUM)

          Nonblocking Reduce-Scatter Block (regular, non-vector
          version).


          Parameters:

             * ‘sendbuf’ (*note BufSpecB: 213.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’*note BufSpecB: 213.)

             * ‘op’ (*note Op: d3.)


          Return type: *note Request: 43.

      -- Method: Irsend (buf, dest, tag=0)

          Nonblocking send in ready mode.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(102))

             * ‘tag’ (int(103))


          Return type: *note Request: 43.

      -- Method: Is_inter ()

          Return whether the communicator is an intercommunicator.


          Return type: bool(104)

      -- Method: Is_intra ()

          Return whether the communicator is an intracommunicator.


          Return type: bool(105)

      -- Method: Is_revoked ()

          Indicate whether the communicator has been revoked.


          Return type: bool(106)

      -- Method: Iscatter (sendbuf, recvbuf, root=0)

          Nonblocking Scatter.


          Parameters:

             * ‘sendbuf’ (*note BufSpecB: 213.‘ | ’None(107))

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘root’ (int(108))


          Return type: *note Request: 43.

      -- Method: Iscatterv (sendbuf, recvbuf, root=0)

          Nonblocking Scatter Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpecV: 214.‘ | ’None(109))

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘root’ (int(110))


          Return type: *note Request: 43.

      -- Method: Isend (buf, dest, tag=0)

          Nonblocking send.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(111))

             * ‘tag’ (int(112))


          Return type: *note Request: 43.

      -- Method: Isendrecv (sendbuf, dest, sendtag=0, recvbuf=None,
               source=ANY_SOURCE, recvtag=ANY_TAG)

          Nonblocking send and receive.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.)

             * ‘dest’ (int(113))

             * ‘sendtag’ (int(114))

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’None(115))

             * ‘source’ (int(116))

             * ‘recvtag’ (int(117))


          Return type: *note Request: 43.

      -- Method: Isendrecv_replace (buf, dest, sendtag=0,
               source=ANY_SOURCE, recvtag=ANY_TAG)

          Send and receive a message.

               Note: This function is guaranteed not to deadlock in
               situations where pairs of blocking sends and receives may
               deadlock.

               Caution: A common mistake when using this function is to
               mismatch the tags with the source and destination ranks,
               which can result in deadlock.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(118))

             * ‘sendtag’ (int(119))

             * ‘source’ (int(120))

             * ‘recvtag’ (int(121))


          Return type: *note Request: 43.

      -- Method: Ishrink ()

          Nonblocking shrink a communicator to remove all failed
          processes.


          Return type: tuple(122)[*note Comm: 1e, *note Request: 43.]

      -- Method: Issend (buf, dest, tag=0)

          Nonblocking send in synchronous mode.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(123))

             * ‘tag’ (int(124))


          Return type: *note Request: 43.

      -- Method: classmethod Join (fd)

          Interconnect two processes connected by a socket.


          Parameters: ‘fd’ (int(125))


          Return type: *note Intercomm: 20.

      -- Method: Mprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a matched message.


          Parameters:

             * ‘source’ (int(126))

             * ‘tag’ (int(127))

             * ‘status’ (*note Status: d1.‘ | ’None(128))


          Return type: *note Message: d7.

      -- Method: Precv_init (buf, partitions, source=ANY_SOURCE,
               tag=ANY_TAG, info=INFO_NULL)

          Create request for a partitioned recv operation.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘partitions’ (int(129))

             * ‘source’ (int(130))

             * ‘tag’ (int(131))

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Probe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a message.

               Note: This function blocks until the message arrives.


          Parameters:

             * ‘source’ (int(132))

             * ‘tag’ (int(133))

             * ‘status’ (*note Status: d1.‘ | ’None(134))


          Return type: Literal(135)[True]

      -- Method: Psend_init (buf, partitions, dest, tag=0,
               info=INFO_NULL)

          Create request for a partitioned send operation.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘partitions’ (int(136))

             * ‘dest’ (int(137))

             * ‘tag’ (int(138))

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Recv (buf, source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking receive.

               Note: This function blocks until the message is received.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘source’ (int(139))

             * ‘tag’ (int(140))

             * ‘status’ (*note Status: d1.‘ | ’None(141))


          Return type: None(142)

      -- Method: Recv_init (buf, source=ANY_SOURCE, tag=ANY_TAG)

          Create a persistent request for a receive.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘source’ (int(143))

             * ‘tag’ (int(144))


          Return type: *note Prequest: 4a.

      -- Method: Reduce (sendbuf, recvbuf, op=SUM, root=0)

          Reduce to Root.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’None(145))

             * ‘op’ (*note Op: d3.)

             * ‘root’ (int(146))


          Return type: None(147)

      -- Method: Reduce_init (sendbuf, recvbuf, op=SUM, root=0,
               info=INFO_NULL)

          Persistent Reduce to Root.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’None(148))

             * ‘op’ (*note Op: d3.)

             * ‘root’ (int(149))

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Reduce_scatter (sendbuf, recvbuf, recvcounts=None,
               op=SUM)

          Reduce-Scatter (vector version).


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.)

             * ‘recvcounts’ (‘Sequence’‘[’int(150)‘] ’‘| ’None(151))

             * ‘op’ (*note Op: d3.)


          Return type: None(152)

      -- Method: Reduce_scatter_block (sendbuf, recvbuf, op=SUM)

          Reduce-Scatter Block (regular, non-vector version).


          Parameters:

             * ‘sendbuf’ (*note BufSpecB: 213.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’*note BufSpecB: 213.)

             * ‘op’ (*note Op: d3.)


          Return type: None(153)

      -- Method: Reduce_scatter_block_init (sendbuf, recvbuf, op=SUM,
               info=INFO_NULL)

          Persistent Reduce-Scatter Block (regular, non-vector version).


          Parameters:

             * ‘sendbuf’ (*note BufSpecB: 213.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’*note BufSpecB: 213.)

             * ‘op’ (*note Op: d3.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Reduce_scatter_init (sendbuf, recvbuf, recvcounts=None,
               op=SUM, info=INFO_NULL)

          Persistent Reduce-Scatter (vector version).


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.)

             * ‘recvcounts’ (‘Sequence’‘[’int(154)‘] ’‘| ’None(155))

             * ‘op’ (*note Op: d3.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Revoke ()

          Revoke a communicator.


          Return type: None(156)

      -- Method: Rsend (buf, dest, tag=0)

          Blocking send in ready mode.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(157))

             * ‘tag’ (int(158))


          Return type: None(159)

      -- Method: Rsend_init (buf, dest, tag=0)

          Persistent request for a send in ready mode.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(160))

             * ‘tag’ (int(161))


          Return type: *note Request: 43.

      -- Method: Scatter (sendbuf, recvbuf, root=0)

          Scatter data from one process to all other processes.


          Parameters:

             * ‘sendbuf’ (*note BufSpecB: 213.‘ | ’None(162))

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘root’ (int(163))


          Return type: None(164)

      -- Method: Scatter_init (sendbuf, recvbuf, root=0, info=INFO_NULL)

          Persistent Scatter.


          Parameters:

             * ‘sendbuf’ (*note BufSpecB: 213.‘ | ’None(165))

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘root’ (int(166))

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Scatterv (sendbuf, recvbuf, root=0)

          Scatter Vector.

          Scatter data from one process to all other processes providing
          different amounts of data and displacements.


          Parameters:

             * ‘sendbuf’ (*note BufSpecV: 214.‘ | ’None(167))

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘root’ (int(168))


          Return type: None(169)

      -- Method: Scatterv_init (sendbuf, recvbuf, root=0,
               info=INFO_NULL)

          Persistent Scatter Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpecV: 214.‘ | ’None(170))

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘root’ (int(171))

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Send (buf, dest, tag=0)

          Blocking send.

               Note: This function may block until the message is
               received.  Whether *note Send: 3a. blocks or not depends
               on several factors and is implementation dependent.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(172))

             * ‘tag’ (int(173))


          Return type: None(174)

      -- Method: Send_init (buf, dest, tag=0)

          Create a persistent request for a standard send.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(175))

             * ‘tag’ (int(176))


          Return type: *note Prequest: 4a.

      -- Method: Sendrecv (sendbuf, dest, sendtag=0, recvbuf=None,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and receive a message.

               Note: This function is guaranteed not to deadlock in
               situations where pairs of blocking sends and receives may
               deadlock.

               Caution: A common mistake when using this function is to
               mismatch the tags with the source and destination ranks,
               which can result in deadlock.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.)

             * ‘dest’ (int(177))

             * ‘sendtag’ (int(178))

             * ‘recvbuf’ (*note BufSpec: 212.‘ | ’None(179))

             * ‘source’ (int(180))

             * ‘recvtag’ (int(181))

             * ‘status’ (*note Status: d1.‘ | ’None(182))


          Return type: None(183)

      -- Method: Sendrecv_replace (buf, dest, sendtag=0,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and receive a message.

               Note: This function is guaranteed not to deadlock in
               situations where pairs of blocking sends and receives may
               deadlock.

               Caution: A common mistake when using this function is to
               mismatch the tags with the source and destination ranks,
               which can result in deadlock.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(184))

             * ‘sendtag’ (int(185))

             * ‘source’ (int(186))

             * ‘recvtag’ (int(187))

             * ‘status’ (*note Status: d1.‘ | ’None(188))


          Return type: None(189)

      -- Method: Set_attr (keyval, attrval)

          Store attribute value associated with a key.


          Parameters:

             * ‘keyval’ (int(190))

             * ‘attrval’ (Any(191))


          Return type: None(192)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a communicator.


          Parameters: ‘errhandler’ (*note Errhandler: d8.)


          Return type: None(193)

      -- Method: Set_info (info)

          Set new values for the hints associated with a communicator.


          Parameters: ‘info’ (*note Info: d4.)


          Return type: None(194)

      -- Method: Set_name (name)

          Set the print name for this communicator.


          Parameters: ‘name’ (str(195))


          Return type: None(196)

      -- Method: Shrink ()

          Shrink a communicator to remove all failed processes.


          Return type: *note Comm: 1e.

      -- Method: Split (color=0, key=0)

          Split communicator by color and key.


          Parameters:

             * ‘color’ (int(197))

             * ‘key’ (int(198))


          Return type: *note Comm: 1e.

      -- Method: Split_type (split_type, key=0, info=INFO_NULL)

          Split communicator by split type.


          Parameters:

             * ‘split_type’ (int(199))

             * ‘key’ (int(200))

             * ‘info’ (*note Info: d4.)


          Return type: *note Comm: 1e.

      -- Method: Ssend (buf, dest, tag=0)

          Blocking send in synchronous mode.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(201))

             * ‘tag’ (int(202))


          Return type: None(203)

      -- Method: Ssend_init (buf, dest, tag=0)

          Persistent request for a send in synchronous mode.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘dest’ (int(204))

             * ‘tag’ (int(205))


          Return type: *note Request: 43.

      -- Method: allgather (sendobj)

          Gather to All.


          Parameters: ‘sendobj’ (Any(206))


          Return type: list(207)[Any(208)]

      -- Method: allreduce (sendobj, op=SUM)

          Reduce to All.


          Parameters:

             * ‘sendobj’ (Any(209))

             * ‘op’ (*note Op: d3.‘ | ’Callable(210)‘[’‘[’Any(211)‘,
               ’Any(212)‘]’‘, ’Any(213)‘]’)


          Return type: Any(214)

      -- Method: alltoall (sendobj)

          All to All Scatter/Gather.


          Parameters: ‘sendobj’ (Sequence(215)‘[’Any(216)‘]’)


          Return type: list(217)[Any(218)]

      -- Method: barrier ()

          Barrier synchronization.

               Note: This method is equivalent to *note Barrier: 22e.


          Return type: None(219)

      -- Method: bcast (obj, root=0)

          Broadcast.


          Parameters:

             * ‘obj’ (Any(220))

             * ‘root’ (int(221))


          Return type: Any(222)

      -- Method: bsend (obj, dest, tag=0)

          Send in buffered mode.


          Parameters:

             * ‘obj’ (Any(223))

             * ‘dest’ (int(224))

             * ‘tag’ (int(225))


          Return type: None(226)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(227))


          Return type: *note Comm: 1e.

      -- Method: free ()

          Call *note Free: 2ea. if not null or predefined.


          Return type: None(228)

      -- Method: classmethod fromhandle (handle)

          Create object from MPI handle.


          Parameters: ‘handle’ (int(229))


          Return type: *note Comm: 1e.

      -- Method: gather (sendobj, root=0)

          Gather.


          Parameters:

             * ‘sendobj’ (Any(230))

             * ‘root’ (int(231))


          Return type: list(232)[Any(233)] | None(234)

      -- Method: ibsend (obj, dest, tag=0)

          Nonblocking send in buffered mode.


          Parameters:

             * ‘obj’ (Any(235))

             * ‘dest’ (int(236))

             * ‘tag’ (int(237))


          Return type: *note Request: 43.

      -- Method: improbe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a matched message.


          Parameters:

             * ‘source’ (int(238))

             * ‘tag’ (int(239))

             * ‘status’ (*note Status: d1.‘ | ’None(240))


          Return type: *note Message: d7. | None(241)

      -- Method: iprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Nonblocking test for a message.


          Parameters:

             * ‘source’ (int(242))

             * ‘tag’ (int(243))

             * ‘status’ (*note Status: d1.‘ | ’None(244))


          Return type: bool(245)

      -- Method: irecv (buf=None, source=ANY_SOURCE, tag=ANY_TAG)

          Nonblocking receive.


          Parameters:

             * ‘buf’ (*note Buffer: 20a.‘ | ’None(246))

             * ‘source’ (int(247))

             * ‘tag’ (int(248))


          Return type: *note Request: 43.

      -- Method: isend (obj, dest, tag=0)

          Nonblocking send.


          Parameters:

             * ‘obj’ (Any(249))

             * ‘dest’ (int(250))

             * ‘tag’ (int(251))


          Return type: *note Request: 43.

      -- Method: issend (obj, dest, tag=0)

          Nonblocking send in synchronous mode.


          Parameters:

             * ‘obj’ (Any(252))

             * ‘dest’ (int(253))

             * ‘tag’ (int(254))


          Return type: *note Request: 43.

      -- Method: mprobe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a matched message.


          Parameters:

             * ‘source’ (int(255))

             * ‘tag’ (int(256))

             * ‘status’ (*note Status: d1.‘ | ’None(257))


          Return type: *note Message: d7.

      -- Method: probe (source=ANY_SOURCE, tag=ANY_TAG, status=None)

          Blocking test for a message.


          Parameters:

             * ‘source’ (int(258))

             * ‘tag’ (int(259))

             * ‘status’ (*note Status: d1.‘ | ’None(260))


          Return type: Literal(261)[True]

      -- Method: py2f ()


          Return type: int(262)

      -- Method: recv (buf=None, source=ANY_SOURCE, tag=ANY_TAG,
               status=None)

          Receive.


          Parameters:

             * ‘buf’ (*note Buffer: 20a.‘ | ’None(263))

             * ‘source’ (int(264))

             * ‘tag’ (int(265))

             * ‘status’ (*note Status: d1.‘ | ’None(266))


          Return type: Any

      -- Method: reduce (sendobj, op=SUM, root=0)

          Reduce to Root.


          Parameters:

             * ‘sendobj’ (Any(267))

             * ‘op’ (*note Op: d3.‘ | ’Callable(268)‘[’‘[’Any(269)‘,
               ’Any(270)‘]’‘, ’Any(271)‘]’)

             * ‘root’ (int(272))


          Return type: Any(273) | None(274)

      -- Method: scatter (sendobj, root=0)

          Scatter.


          Parameters:

             * ‘sendobj’ (Sequence(275)‘[’Any(276)‘] ’‘| ’None(277))

             * ‘root’ (int(278))


          Return type: Any(279)

      -- Method: send (obj, dest, tag=0)

          Send in standard mode.


          Parameters:

             * ‘obj’ (Any(280))

             * ‘dest’ (int(281))

             * ‘tag’ (int(282))


          Return type: None(283)

      -- Method: sendrecv (sendobj, dest, sendtag=0, recvbuf=None,
               source=ANY_SOURCE, recvtag=ANY_TAG, status=None)

          Send and Receive.


          Parameters:

             * ‘sendobj’ (‘Any’)

             * ‘dest’ (int(284))

             * ‘sendtag’ (int(285))

             * ‘recvbuf’ (*note Buffer: 20a.‘ | ’None(286))

             * ‘source’ (int(287))

             * ‘recvtag’ (int(288))

             * ‘status’ (*note Status: d1.‘ | ’None(289))


          Return type: Any

      -- Method: ssend (obj, dest, tag=0)

          Send in synchronous mode.


          Parameters:

             * ‘obj’ (Any(290))

             * ‘dest’ (int(291))

             * ‘tag’ (int(292))


          Return type: None(293)

     Attributes Documentation
     ........................

      -- Attribute: group

          Group.

      -- Attribute: handle

          MPI handle.

      -- Attribute: info

          Info hints.

      -- Attribute: is_inter

          Is intercommunicator.

      -- Attribute: is_intra

          Is intracommunicator.

      -- Attribute: is_topo

          Is a topology.

      -- Attribute: name

          Print name.

      -- Attribute: rank

          Rank of this process.

      -- Attribute: size

          Number of processes.

      -- Attribute: topology

          Topology type.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/typing.html#typing.NoReturn

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/constants.html#None

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/constants.html#None

   (16) https://docs.python.org/3/library/constants.html#None

   (17) https://docs.python.org/3/library/constants.html#None

   (18) https://docs.python.org/3/library/constants.html#None

   (19) https://docs.python.org/3/library/constants.html#None

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/constants.html#None

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/constants.html#None

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/constants.html#None

   (30) https://docs.python.org/3/library/typing.html#typing.Self

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/typing.html#typing.Callable

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/constants.html#None

   (35) https://docs.python.org/3/library/typing.html#typing.Callable

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/typing.html#typing.Any

   (38) https://docs.python.org/3/library/typing.html#typing.Any

   (39) https://docs.python.org/3/library/constants.html#None

   (40) https://docs.python.org/3/library/typing.html#typing.Callable

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/typing.html#typing.Any

   (43) https://docs.python.org/3/library/constants.html#None

   (44) https://docs.python.org/3/library/constants.html#None

   (45) https://docs.python.org/3/library/functions.html#bool

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/constants.html#None

   (49) https://docs.python.org/3/library/constants.html#None

   (50) https://docs.python.org/3/library/constants.html#None

   (51) https://docs.python.org/3/library/constants.html#None

   (52) https://docs.python.org/3/library/typing.html#typing.Self

   (53) https://docs.python.org/3/library/typing.html#typing.Self

   (54) https://docs.python.org/3/library/constants.html#None

   (55) https://docs.python.org/3/library/constants.html#None

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/constants.html#None

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/constants.html#None

   (61) https://docs.python.org/3/library/constants.html#None

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/constants.html#None

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/constants.html#None

   (66) https://docs.python.org/3/library/constants.html#None

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/typing.html#typing.Any

   (71) https://docs.python.org/3/library/constants.html#None

   (72) https://docs.python.org/3/library/stdtypes.html#str

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/constants.html#None

   (80) https://docs.python.org/3/library/stdtypes.html#tuple

   (81) https://docs.python.org/3/library/typing.html#typing.Self

   (82) https://docs.python.org/3/library/stdtypes.html#tuple

   (83) https://docs.python.org/3/library/typing.html#typing.Self

   (84) https://docs.python.org/3/library/constants.html#None

   (85) https://docs.python.org/3/library/functions.html#int

   (86) https://docs.python.org/3/library/constants.html#None

   (87) https://docs.python.org/3/library/functions.html#int

   (88) https://docs.python.org/3/library/functions.html#int

   (89) https://docs.python.org/3/library/functions.html#int

   (90) https://docs.python.org/3/library/constants.html#None

   (91) https://docs.python.org/3/library/constants.html#None

   (92) https://docs.python.org/3/library/functions.html#int

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/constants.html#None

   (95) https://docs.python.org/3/library/functions.html#bool

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/functions.html#int

   (98) https://docs.python.org/3/library/constants.html#None

   (99) https://docs.python.org/3/library/functions.html#int

   (100) https://docs.python.org/3/library/functions.html#int

   (101) https://docs.python.org/3/library/constants.html#None

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/functions.html#bool

   (105) https://docs.python.org/3/library/functions.html#bool

   (106) https://docs.python.org/3/library/functions.html#bool

   (107) https://docs.python.org/3/library/constants.html#None

   (108) https://docs.python.org/3/library/functions.html#int

   (109) https://docs.python.org/3/library/constants.html#None

   (110) https://docs.python.org/3/library/functions.html#int

   (111) https://docs.python.org/3/library/functions.html#int

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/functions.html#int

   (115) https://docs.python.org/3/library/constants.html#None

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/functions.html#int

   (118) https://docs.python.org/3/library/functions.html#int

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/functions.html#int

   (121) https://docs.python.org/3/library/functions.html#int

   (122) https://docs.python.org/3/library/stdtypes.html#tuple

   (123) https://docs.python.org/3/library/functions.html#int

   (124) https://docs.python.org/3/library/functions.html#int

   (125) https://docs.python.org/3/library/functions.html#int

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/constants.html#None

   (129) https://docs.python.org/3/library/functions.html#int

   (130) https://docs.python.org/3/library/functions.html#int

   (131) https://docs.python.org/3/library/functions.html#int

   (132) https://docs.python.org/3/library/functions.html#int

   (133) https://docs.python.org/3/library/functions.html#int

   (134) https://docs.python.org/3/library/constants.html#None

   (135) https://docs.python.org/3/library/typing.html#typing.Literal

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/functions.html#int

   (139) https://docs.python.org/3/library/functions.html#int

   (140) https://docs.python.org/3/library/functions.html#int

   (141) https://docs.python.org/3/library/constants.html#None

   (142) https://docs.python.org/3/library/constants.html#None

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/functions.html#int

   (145) https://docs.python.org/3/library/constants.html#None

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/constants.html#None

   (148) https://docs.python.org/3/library/constants.html#None

   (149) https://docs.python.org/3/library/functions.html#int

   (150) https://docs.python.org/3/library/functions.html#int

   (151) https://docs.python.org/3/library/constants.html#None

   (152) https://docs.python.org/3/library/constants.html#None

   (153) https://docs.python.org/3/library/constants.html#None

   (154) https://docs.python.org/3/library/functions.html#int

   (155) https://docs.python.org/3/library/constants.html#None

   (156) https://docs.python.org/3/library/constants.html#None

   (157) https://docs.python.org/3/library/functions.html#int

   (158) https://docs.python.org/3/library/functions.html#int

   (159) https://docs.python.org/3/library/constants.html#None

   (160) https://docs.python.org/3/library/functions.html#int

   (161) https://docs.python.org/3/library/functions.html#int

   (162) https://docs.python.org/3/library/constants.html#None

   (163) https://docs.python.org/3/library/functions.html#int

   (164) https://docs.python.org/3/library/constants.html#None

   (165) https://docs.python.org/3/library/constants.html#None

   (166) https://docs.python.org/3/library/functions.html#int

   (167) https://docs.python.org/3/library/constants.html#None

   (168) https://docs.python.org/3/library/functions.html#int

   (169) https://docs.python.org/3/library/constants.html#None

   (170) https://docs.python.org/3/library/constants.html#None

   (171) https://docs.python.org/3/library/functions.html#int

   (172) https://docs.python.org/3/library/functions.html#int

   (173) https://docs.python.org/3/library/functions.html#int

   (174) https://docs.python.org/3/library/constants.html#None

   (175) https://docs.python.org/3/library/functions.html#int

   (176) https://docs.python.org/3/library/functions.html#int

   (177) https://docs.python.org/3/library/functions.html#int

   (178) https://docs.python.org/3/library/functions.html#int

   (179) https://docs.python.org/3/library/constants.html#None

   (180) https://docs.python.org/3/library/functions.html#int

   (181) https://docs.python.org/3/library/functions.html#int

   (182) https://docs.python.org/3/library/constants.html#None

   (183) https://docs.python.org/3/library/constants.html#None

   (184) https://docs.python.org/3/library/functions.html#int

   (185) https://docs.python.org/3/library/functions.html#int

   (186) https://docs.python.org/3/library/functions.html#int

   (187) https://docs.python.org/3/library/functions.html#int

   (188) https://docs.python.org/3/library/constants.html#None

   (189) https://docs.python.org/3/library/constants.html#None

   (190) https://docs.python.org/3/library/functions.html#int

   (191) https://docs.python.org/3/library/typing.html#typing.Any

   (192) https://docs.python.org/3/library/constants.html#None

   (193) https://docs.python.org/3/library/constants.html#None

   (194) https://docs.python.org/3/library/constants.html#None

   (195) https://docs.python.org/3/library/stdtypes.html#str

   (196) https://docs.python.org/3/library/constants.html#None

   (197) https://docs.python.org/3/library/functions.html#int

   (198) https://docs.python.org/3/library/functions.html#int

   (199) https://docs.python.org/3/library/functions.html#int

   (200) https://docs.python.org/3/library/functions.html#int

   (201) https://docs.python.org/3/library/functions.html#int

   (202) https://docs.python.org/3/library/functions.html#int

   (203) https://docs.python.org/3/library/constants.html#None

   (204) https://docs.python.org/3/library/functions.html#int

   (205) https://docs.python.org/3/library/functions.html#int

   (206) https://docs.python.org/3/library/typing.html#typing.Any

   (207) https://docs.python.org/3/library/stdtypes.html#list

   (208) https://docs.python.org/3/library/typing.html#typing.Any

   (209) https://docs.python.org/3/library/typing.html#typing.Any

   (210) https://docs.python.org/3/library/typing.html#typing.Callable

   (211) https://docs.python.org/3/library/typing.html#typing.Any

   (212) https://docs.python.org/3/library/typing.html#typing.Any

   (213) https://docs.python.org/3/library/typing.html#typing.Any

   (214) https://docs.python.org/3/library/typing.html#typing.Any

   (215) https://docs.python.org/3/library/typing.html#typing.Sequence

   (216) https://docs.python.org/3/library/typing.html#typing.Any

   (217) https://docs.python.org/3/library/stdtypes.html#list

   (218) https://docs.python.org/3/library/typing.html#typing.Any

   (219) https://docs.python.org/3/library/constants.html#None

   (220) https://docs.python.org/3/library/typing.html#typing.Any

   (221) https://docs.python.org/3/library/functions.html#int

   (222) https://docs.python.org/3/library/typing.html#typing.Any

   (223) https://docs.python.org/3/library/typing.html#typing.Any

   (224) https://docs.python.org/3/library/functions.html#int

   (225) https://docs.python.org/3/library/functions.html#int

   (226) https://docs.python.org/3/library/constants.html#None

   (227) https://docs.python.org/3/library/functions.html#int

   (228) https://docs.python.org/3/library/constants.html#None

   (229) https://docs.python.org/3/library/functions.html#int

   (230) https://docs.python.org/3/library/typing.html#typing.Any

   (231) https://docs.python.org/3/library/functions.html#int

   (232) https://docs.python.org/3/library/stdtypes.html#list

   (233) https://docs.python.org/3/library/typing.html#typing.Any

   (234) https://docs.python.org/3/library/constants.html#None

   (235) https://docs.python.org/3/library/typing.html#typing.Any

   (236) https://docs.python.org/3/library/functions.html#int

   (237) https://docs.python.org/3/library/functions.html#int

   (238) https://docs.python.org/3/library/functions.html#int

   (239) https://docs.python.org/3/library/functions.html#int

   (240) https://docs.python.org/3/library/constants.html#None

   (241) https://docs.python.org/3/library/constants.html#None

   (242) https://docs.python.org/3/library/functions.html#int

   (243) https://docs.python.org/3/library/functions.html#int

   (244) https://docs.python.org/3/library/constants.html#None

   (245) https://docs.python.org/3/library/functions.html#bool

   (246) https://docs.python.org/3/library/constants.html#None

   (247) https://docs.python.org/3/library/functions.html#int

   (248) https://docs.python.org/3/library/functions.html#int

   (249) https://docs.python.org/3/library/typing.html#typing.Any

   (250) https://docs.python.org/3/library/functions.html#int

   (251) https://docs.python.org/3/library/functions.html#int

   (252) https://docs.python.org/3/library/typing.html#typing.Any

   (253) https://docs.python.org/3/library/functions.html#int

   (254) https://docs.python.org/3/library/functions.html#int

   (255) https://docs.python.org/3/library/functions.html#int

   (256) https://docs.python.org/3/library/functions.html#int

   (257) https://docs.python.org/3/library/constants.html#None

   (258) https://docs.python.org/3/library/functions.html#int

   (259) https://docs.python.org/3/library/functions.html#int

   (260) https://docs.python.org/3/library/constants.html#None

   (261) https://docs.python.org/3/library/typing.html#typing.Literal

   (262) https://docs.python.org/3/library/functions.html#int

   (263) https://docs.python.org/3/library/constants.html#None

   (264) https://docs.python.org/3/library/functions.html#int

   (265) https://docs.python.org/3/library/functions.html#int

   (266) https://docs.python.org/3/library/constants.html#None

   (267) https://docs.python.org/3/library/typing.html#typing.Any

   (268) https://docs.python.org/3/library/typing.html#typing.Callable

   (269) https://docs.python.org/3/library/typing.html#typing.Any

   (270) https://docs.python.org/3/library/typing.html#typing.Any

   (271) https://docs.python.org/3/library/typing.html#typing.Any

   (272) https://docs.python.org/3/library/functions.html#int

   (273) https://docs.python.org/3/library/typing.html#typing.Any

   (274) https://docs.python.org/3/library/constants.html#None

   (275) https://docs.python.org/3/library/typing.html#typing.Sequence

   (276) https://docs.python.org/3/library/typing.html#typing.Any

   (277) https://docs.python.org/3/library/constants.html#None

   (278) https://docs.python.org/3/library/functions.html#int

   (279) https://docs.python.org/3/library/typing.html#typing.Any

   (280) https://docs.python.org/3/library/typing.html#typing.Any

   (281) https://docs.python.org/3/library/functions.html#int

   (282) https://docs.python.org/3/library/functions.html#int

   (283) https://docs.python.org/3/library/constants.html#None

   (284) https://docs.python.org/3/library/functions.html#int

   (285) https://docs.python.org/3/library/functions.html#int

   (286) https://docs.python.org/3/library/constants.html#None

   (287) https://docs.python.org/3/library/functions.html#int

   (288) https://docs.python.org/3/library/functions.html#int

   (289) https://docs.python.org/3/library/constants.html#None

   (290) https://docs.python.org/3/library/typing.html#typing.Any

   (291) https://docs.python.org/3/library/functions.html#int

   (292) https://docs.python.org/3/library/functions.html#int

   (293) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Datatype,  Next: mpi4py MPI Distgraphcomm,  Prev: mpi4py MPI Comm,  Up: mpi4py MPI<2>

11.1.5 mpi4py.MPI.Datatype
--------------------------

 -- Class: mpi4py.MPI.Datatype

     Bases: object(1)

     Datatype object.

      -- Method: static __new__ (cls, datatype=None)


          Parameters: ‘datatype’ (*note Datatype: d0.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Commit: 33d.()Commit the datatype.
                    
                    
     *note Create_contiguous: 33e.(count)Create a contiguous datatype.
                    
                    
     *note Create_darray: 33f.(size,Create a datatype for a distributed array on Cartesian process grids.
     rank,          
     gsizes,
     distribs,
     ...)

     *note Create_f90_complex: 340.(p,Return a bounded complex datatype.
     r)             

     *note Create_f90_integer: 341.(r)Return a bounded integer datatype.
                    
                    
     *note Create_f90_real: 342.(p,Return a bounded real datatype.
     r)             

     *note Create_hindexed: 343.(blocklengths,Create an indexed datatype.
     displacements) 

     *note Create_hindexed_block: 344.(blocklength,Create an indexed datatype with constant-sized blocks.
     displacements) 

     *note Create_hvector: 345.(count,Create a vector (strided) datatype with stride in bytes.
     blocklength,   
     stride)

     *note Create_indexed: 346.(blocklengths,Create an indexed datatype.
     displacements) 

     *note Create_indexed_block: 347.(blocklength,Create an indexed datatype with constant-sized blocks.
     displacements) 

     *note Create_keyval: 348.([copy_fn,Create a new attribute key for datatypes.
     delete_fn,     
     nopython])

     *note Create_resized: 349.(lb,Create a datatype with a new lower bound and extent.
     extent)        

     *note Create_struct: 34a.(blocklengths,Create a general composite (struct) datatype.
     displacements, 
     ...)

     *note Create_subarray: 34b.(sizes,Create a datatype for a subarray of a multidimensional array.
     subsizes,      
     starts[,
     order])

     *note Create_vector: 34c.(count,Create a vector (strided) datatype.
     blocklength,   
     stride)

     *note Delete_attr: 34d.(keyval)Delete attribute value associated with a key.
                    
                    
     *note Dup: 34e.()Duplicate a datatype.
                    
                    
     *note Free: 34f.()Free the datatype.
                    
                    
     *note Free_keyval: 350.(keyval)Free an attribute key for datatypes.
                    
                    
     *note Get_attr: 351.(keyval)Retrieve attribute value by key.
                    
                    
     *note Get_contents: 352.()Return the input arguments used to create a datatype.
                    
                    
     *note Get_envelope: 353.()Return the number of input arguments used to create a datatype.
                    
                    
     *note Get_extent: 354.()Return lower bound and extent of datatype.
                    
                    
     *note Get_name: 355.()Get the print name for this datatype.
                    
                    
     *note Get_size: 356.()Return the number of bytes occupied by entries in the datatype.
                    
                    
     *note Get_true_extent: 357.()Return the true lower bound and extent of a datatype.
                    
                    
     *note Get_value_index: 358.(value,Return a predefined pair datatype.
     index)         

     *note Match_size: 359.(typeclass,Find a datatype matching a specified size in bytes.
     size)          

     *note Pack: 35a.(inbuf,Pack into contiguous memory according to datatype.
     outbuf,        
     position,
     comm)

     *note Pack_external: 35b.(datarep,Pack into contiguous memory according to datatype.
     inbuf,         
     outbuf,
     position)

     *note Pack_external_size: 35c.(datarep,Determine the amount of space needed to pack a message.
     count)         

     *note Pack_size: 35d.(count,Determine the amount of space needed to pack a message.
     comm)          

     *note Set_attr: 35e.(keyval,Store attribute value associated with a key.
     attrval)       

     *note Set_name: 35f.(name)Set the print name for this datatype.
                    
                    
     *note Unpack: 360.(inbuf,Unpack from contiguous memory according to datatype.
     position,      
     outbuf,
     comm)

     *note Unpack_external: 361.(datarep,Unpack from contiguous memory according to datatype.
     inbuf,         
     position,
     outbuf)

     *note decode: 362.()Convenience method for decoding a datatype.
                    
                    
     *note f2py: 363.(arg)

     *note free: 364.()Call *note Free: 34f. if not null or predefined.
                    
                    
     *note fromcode: 365.(code)Get predefined MPI datatype from character code or type string.
                    
                    
     *note fromhandle: 366.(handle)Create object from MPI handle.
                    
                    
     *note py2f: 367.()

     *note tocode: 368.()Get character code or type string from predefined MPI datatype.
                    

     Attributes Summary
     ..................

     *note combiner: 369.Combiner.
                    
                    
     *note contents: 36a.Contents.
                    
                    
     *note envelope: 36b.Envelope.
                    
                    
     *note extent: 36c.Extent.
                    
                    
     *note handle: 36d.MPI handle.
                    
                    
     *note is_named: 36e.Is a named datatype.
                    
                    
     *note is_predefined: 36f.Is a predefined datatype.
                    
                    
     *note lb: 370. Lower bound.
                    
                    
     *note name: 371.Print name.
                    
                    
     *note size: 372.Size (in bytes).
                    
                    
     *note true_extent: 373.True extent.
                    
                    
     *note true_lb: 374.True lower bound.
                    
                    
     *note true_ub: 375.True upper bound.
                    
                    
     *note typechar: 376.Character code.
                    
                    
     *note typestr: 377.Type string.
                    
                    
     *note ub: 378. Upper bound.
                    

     Methods Documentation
     .....................

      -- Method: Commit ()

          Commit the datatype.


          Return type: Self(4)

      -- Method: Create_contiguous (count)

          Create a contiguous datatype.


          Parameters: ‘count’ (int(5))


          Return type: Self(6)

      -- Method: Create_darray (size, rank, gsizes, distribs, dargs,
               psizes, order=ORDER_C)

          Create a datatype for a distributed array on Cartesian process
          grids.


          Parameters:

             * ‘size’ (int(7))

             * ‘rank’ (int(8))

             * ‘gsizes’ (Sequence(9)‘[’int(10)‘]’)

             * ‘distribs’ (Sequence(11)‘[’int(12)‘]’)

             * ‘dargs’ (Sequence(13)‘[’int(14)‘]’)

             * ‘psizes’ (Sequence(15)‘[’int(16)‘]’)

             * ‘order’ (int(17))


          Return type: Self(18)

      -- Method: classmethod Create_f90_complex (p, r)

          Return a bounded complex datatype.


          Parameters:

             * ‘p’ (int(19))

             * ‘r’ (int(20))


          Return type: Self(21)

      -- Method: classmethod Create_f90_integer (r)

          Return a bounded integer datatype.


          Parameters: ‘r’ (int(22))


          Return type: Self(23)

      -- Method: classmethod Create_f90_real (p, r)

          Return a bounded real datatype.


          Parameters:

             * ‘p’ (int(24))

             * ‘r’ (int(25))


          Return type: Self(26)

      -- Method: Create_hindexed (blocklengths, displacements)

          Create an indexed datatype.

               Note: Displacements are measured in bytes.


          Parameters:

             * ‘blocklengths’ (Sequence(27)‘[’int(28)‘]’)

             * ‘displacements’ (Sequence(29)‘[’int(30)‘]’)


          Return type: Self(31)

      -- Method: Create_hindexed_block (blocklength, displacements)

          Create an indexed datatype with constant-sized blocks.

               Note: Displacements are measured in bytes.


          Parameters:

             * ‘blocklength’ (int(32))

             * ‘displacements’ (Sequence(33)‘[’int(34)‘]’)


          Return type: Self(35)

      -- Method: Create_hvector (count, blocklength, stride)

          Create a vector (strided) datatype with stride in bytes.


          Parameters:

             * ‘count’ (int(36))

             * ‘blocklength’ (int(37))

             * ‘stride’ (int(38))


          Return type: Self(39)

      -- Method: Create_indexed (blocklengths, displacements)

          Create an indexed datatype.


          Parameters:

             * ‘blocklengths’ (Sequence(40)‘[’int(41)‘]’)

             * ‘displacements’ (Sequence(42)‘[’int(43)‘]’)


          Return type: Self(44)

      -- Method: Create_indexed_block (blocklength, displacements)

          Create an indexed datatype with constant-sized blocks.


          Parameters:

             * ‘blocklength’ (int(45))

             * ‘displacements’ (Sequence(46)‘[’int(47)‘]’)


          Return type: Self(48)

      -- Method: classmethod Create_keyval (copy_fn=None,
               delete_fn=None, nopython=False)

          Create a new attribute key for datatypes.


          Parameters:

             * ‘copy_fn’ (Callable(49)‘[’‘[’*note Datatype: d0.‘,
               ’int(50)‘, ’Any(51)‘]’‘, ’Any(52)‘] ’‘| ’None(53))

             * ‘delete_fn’ (Callable(54)‘[’‘[’*note Datatype: d0.‘,
               ’int(55)‘, ’Any(56)‘]’‘, ’None(57)‘] ’‘| ’None(58))

             * ‘nopython’ (bool(59))


          Return type: int(60)

      -- Method: Create_resized (lb, extent)

          Create a datatype with a new lower bound and extent.


          Parameters:

             * ‘lb’ (int(61))

             * ‘extent’ (int(62))


          Return type: Self(63)

      -- Method: classmethod Create_struct (blocklengths, displacements,
               datatypes)

          Create a general composite (struct) datatype.

               Note: Displacements are measured in bytes.


          Parameters:

             * ‘blocklengths’ (Sequence(64)‘[’int(65)‘]’)

             * ‘displacements’ (Sequence(66)‘[’int(67)‘]’)

             * ‘datatypes’ (Sequence(68)‘[’*note Datatype: d0.‘]’)


          Return type: Self(69)

      -- Method: Create_subarray (sizes, subsizes, starts,
               order=ORDER_C)

          Create a datatype for a subarray of a multidimensional array.


          Parameters:

             * ‘sizes’ (Sequence(70)‘[’int(71)‘]’)

             * ‘subsizes’ (Sequence(72)‘[’int(73)‘]’)

             * ‘starts’ (Sequence(74)‘[’int(75)‘]’)

             * ‘order’ (int(76))


          Return type: Self(77)

      -- Method: Create_vector (count, blocklength, stride)

          Create a vector (strided) datatype.


          Parameters:

             * ‘count’ (int(78))

             * ‘blocklength’ (int(79))

             * ‘stride’ (int(80))


          Return type: Self(81)

      -- Method: Delete_attr (keyval)

          Delete attribute value associated with a key.


          Parameters: ‘keyval’ (int(82))


          Return type: None(83)

      -- Method: Dup ()

          Duplicate a datatype.


          Return type: Self(84)

      -- Method: Free ()

          Free the datatype.


          Return type: None(85)

      -- Method: classmethod Free_keyval (keyval)

          Free an attribute key for datatypes.


          Parameters: ‘keyval’ (int(86))


          Return type: int(87)

      -- Method: Get_attr (keyval)

          Retrieve attribute value by key.


          Parameters: ‘keyval’ (int(88))


          Return type: int(89) | Any(90) | None(91)

      -- Method: Get_contents ()

          Return the input arguments used to create a datatype.


          Return type: tuple(92)[list(93)[int(94)], list(95)[int(96)],
          list(97)[int(98)], list(99)[*note Datatype: d0.]]

      -- Method: Get_envelope ()

          Return the number of input arguments used to create a
          datatype.


          Return type: tuple(100)[int(101), int(102), int(103),
          int(104), int(105)]

      -- Method: Get_extent ()

          Return lower bound and extent of datatype.


          Return type: tuple(106)[int(107), int(108)]

      -- Method: Get_name ()

          Get the print name for this datatype.


          Return type: str(109)

      -- Method: Get_size ()

          Return the number of bytes occupied by entries in the
          datatype.


          Return type: int(110)

      -- Method: Get_true_extent ()

          Return the true lower bound and extent of a datatype.


          Return type: tuple(111)[int(112), int(113)]

      -- Method: classmethod Get_value_index (value, index)

          Return a predefined pair datatype.


          Parameters:

             * ‘value’ (*note Datatype: d0.)

             * ‘index’ (*note Datatype: d0.)


          Return type: Self(114)

      -- Method: classmethod Match_size (typeclass, size)

          Find a datatype matching a specified size in bytes.


          Parameters:

             * ‘typeclass’ (int(115))

             * ‘size’ (int(116))


          Return type: Self(117)

      -- Method: Pack (inbuf, outbuf, position, comm)

          Pack into contiguous memory according to datatype.


          Parameters:

             * ‘inbuf’ (*note BufSpec: 212.)

             * ‘outbuf’ (*note BufSpec: 212.)

             * ‘position’ (int(118))

             * ‘comm’ (*note Comm: 1e.)


          Return type: int(119)

      -- Method: Pack_external (datarep, inbuf, outbuf, position)

          Pack into contiguous memory according to datatype.

          Uses the portable data representation 'external32'.


          Parameters:

             * ‘datarep’ (str(120))

             * ‘inbuf’ (*note BufSpec: 212.)

             * ‘outbuf’ (*note BufSpec: 212.)

             * ‘position’ (int(121))


          Return type: int(122)

      -- Method: Pack_external_size (datarep, count)

          Determine the amount of space needed to pack a message.

          Uses the portable data representation 'external32'.

               Note: Returns an upper bound measured in bytes.


          Parameters:

             * ‘datarep’ (str(123))

             * ‘count’ (int(124))


          Return type: int(125)

      -- Method: Pack_size (count, comm)

          Determine the amount of space needed to pack a message.

               Note: Returns an upper bound measured in bytes.


          Parameters:

             * ‘count’ (int(126))

             * ‘comm’ (*note Comm: 1e.)


          Return type: int(127)

      -- Method: Set_attr (keyval, attrval)

          Store attribute value associated with a key.


          Parameters:

             * ‘keyval’ (int(128))

             * ‘attrval’ (Any(129))


          Return type: None(130)

      -- Method: Set_name (name)

          Set the print name for this datatype.


          Parameters: ‘name’ (str(131))


          Return type: None(132)

      -- Method: Unpack (inbuf, position, outbuf, comm)

          Unpack from contiguous memory according to datatype.


          Parameters:

             * ‘inbuf’ (*note BufSpec: 212.)

             * ‘position’ (int(133))

             * ‘outbuf’ (*note BufSpec: 212.)

             * ‘comm’ (*note Comm: 1e.)


          Return type: int(134)

      -- Method: Unpack_external (datarep, inbuf, position, outbuf)

          Unpack from contiguous memory according to datatype.

          Uses the portable data representation 'external32'.


          Parameters:

             * ‘datarep’ (str(135))

             * ‘inbuf’ (*note BufSpec: 212.)

             * ‘position’ (int(136))

             * ‘outbuf’ (*note BufSpec: 212.)


          Return type: int(137)

      -- Method: decode ()

          Convenience method for decoding a datatype.


          Return type: tuple(138)[*note Datatype: d0, str(139),
          dict(140)[str(141), Any(142)]]

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(143))


          Return type: *note Datatype: d0.

      -- Method: free ()

          Call *note Free: 34f. if not null or predefined.


          Return type: None(144)

      -- Method: classmethod fromcode (code)

          Get predefined MPI datatype from character code or type
          string.


          Parameters: ‘code’ (str(145))


          Return type: *note Datatype: d0.

      -- Method: classmethod fromhandle (handle)

          Create object from MPI handle.


          Parameters: ‘handle’ (int(146))


          Return type: *note Datatype: d0.

      -- Method: py2f ()


          Return type: int(147)

      -- Method: tocode ()

          Get character code or type string from predefined MPI
          datatype.


          Return type: str(148)

     Attributes Documentation
     ........................

      -- Attribute: combiner

          Combiner.

      -- Attribute: contents

          Contents.

      -- Attribute: envelope

          Envelope.

      -- Attribute: extent

          Extent.

      -- Attribute: handle

          MPI handle.

      -- Attribute: is_named

          Is a named datatype.

      -- Attribute: is_predefined

          Is a predefined datatype.

      -- Attribute: lb

          Lower bound.

      -- Attribute: name

          Print name.

      -- Attribute: size

          Size (in bytes).

      -- Attribute: true_extent

          True extent.

      -- Attribute: true_lb

          True lower bound.

      -- Attribute: true_ub

          True upper bound.

      -- Attribute: typechar

          Character code.

      -- Attribute: typestr

          Type string.

      -- Attribute: ub

          Upper bound.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/typing.html#typing.Self

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/typing.html#typing.Self

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/typing.html#typing.Sequence

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/typing.html#typing.Sequence

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/typing.html#typing.Sequence

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/typing.html#typing.Sequence

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/typing.html#typing.Self

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/typing.html#typing.Self

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/typing.html#typing.Self

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/typing.html#typing.Self

   (27) https://docs.python.org/3/library/typing.html#typing.Sequence

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/typing.html#typing.Sequence

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/typing.html#typing.Self

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/typing.html#typing.Sequence

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/typing.html#typing.Self

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/typing.html#typing.Self

   (40) https://docs.python.org/3/library/typing.html#typing.Sequence

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/typing.html#typing.Sequence

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/typing.html#typing.Self

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/typing.html#typing.Sequence

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/typing.html#typing.Self

   (49) https://docs.python.org/3/library/typing.html#typing.Callable

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/typing.html#typing.Any

   (52) https://docs.python.org/3/library/typing.html#typing.Any

   (53) https://docs.python.org/3/library/constants.html#None

   (54) https://docs.python.org/3/library/typing.html#typing.Callable

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/typing.html#typing.Any

   (57) https://docs.python.org/3/library/constants.html#None

   (58) https://docs.python.org/3/library/constants.html#None

   (59) https://docs.python.org/3/library/functions.html#bool

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/typing.html#typing.Self

   (64) https://docs.python.org/3/library/typing.html#typing.Sequence

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/typing.html#typing.Sequence

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/typing.html#typing.Sequence

   (69) https://docs.python.org/3/library/typing.html#typing.Self

   (70) https://docs.python.org/3/library/typing.html#typing.Sequence

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/typing.html#typing.Sequence

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/typing.html#typing.Sequence

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/typing.html#typing.Self

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/functions.html#int

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/typing.html#typing.Self

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/constants.html#None

   (84) https://docs.python.org/3/library/typing.html#typing.Self

   (85) https://docs.python.org/3/library/constants.html#None

   (86) https://docs.python.org/3/library/functions.html#int

   (87) https://docs.python.org/3/library/functions.html#int

   (88) https://docs.python.org/3/library/functions.html#int

   (89) https://docs.python.org/3/library/functions.html#int

   (90) https://docs.python.org/3/library/typing.html#typing.Any

   (91) https://docs.python.org/3/library/constants.html#None

   (92) https://docs.python.org/3/library/stdtypes.html#tuple

   (93) https://docs.python.org/3/library/stdtypes.html#list

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/stdtypes.html#list

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/stdtypes.html#list

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/stdtypes.html#list

   (100) https://docs.python.org/3/library/stdtypes.html#tuple

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/functions.html#int

   (105) https://docs.python.org/3/library/functions.html#int

   (106) https://docs.python.org/3/library/stdtypes.html#tuple

   (107) https://docs.python.org/3/library/functions.html#int

   (108) https://docs.python.org/3/library/functions.html#int

   (109) https://docs.python.org/3/library/stdtypes.html#str

   (110) https://docs.python.org/3/library/functions.html#int

   (111) https://docs.python.org/3/library/stdtypes.html#tuple

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/typing.html#typing.Self

   (115) https://docs.python.org/3/library/functions.html#int

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/typing.html#typing.Self

   (118) https://docs.python.org/3/library/functions.html#int

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/stdtypes.html#str

   (121) https://docs.python.org/3/library/functions.html#int

   (122) https://docs.python.org/3/library/functions.html#int

   (123) https://docs.python.org/3/library/stdtypes.html#str

   (124) https://docs.python.org/3/library/functions.html#int

   (125) https://docs.python.org/3/library/functions.html#int

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/functions.html#int

   (129) https://docs.python.org/3/library/typing.html#typing.Any

   (130) https://docs.python.org/3/library/constants.html#None

   (131) https://docs.python.org/3/library/stdtypes.html#str

   (132) https://docs.python.org/3/library/constants.html#None

   (133) https://docs.python.org/3/library/functions.html#int

   (134) https://docs.python.org/3/library/functions.html#int

   (135) https://docs.python.org/3/library/stdtypes.html#str

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/stdtypes.html#tuple

   (139) https://docs.python.org/3/library/stdtypes.html#str

   (140) https://docs.python.org/3/library/stdtypes.html#dict

   (141) https://docs.python.org/3/library/stdtypes.html#str

   (142) https://docs.python.org/3/library/typing.html#typing.Any

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/constants.html#None

   (145) https://docs.python.org/3/library/stdtypes.html#str

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/functions.html#int

   (148) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Distgraphcomm,  Next: mpi4py MPI Errhandler,  Prev: mpi4py MPI Datatype,  Up: mpi4py MPI<2>

11.1.6 mpi4py.MPI.Distgraphcomm
-------------------------------

 -- Class: mpi4py.MPI.Distgraphcomm

     Bases: *note Topocomm: d6.

     Distributed graph topology intracommunicator.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (*note Distgraphcomm: 35.‘ | ’None(1))


          Return type: Self(2)

     Methods Summary
     ...............

     *note Get_dist_neighbors: 37c.()Return adjacency information for a distributed graph topology.
                    
                    
     *note Get_dist_neighbors_count: 37d.()Return adjacency information for a distributed graph topology.
                    

     Methods Documentation
     .....................

      -- Method: Get_dist_neighbors ()

          Return adjacency information for a distributed graph topology.


          Return type: tuple(3)[list(4)[int(5)], list(6)[int(7)],
          tuple(8)[list(9)[int(10)], list(11)[int(12)]] | None(13)]

      -- Method: Get_dist_neighbors_count ()

          Return adjacency information for a distributed graph topology.


          Return type: int(14)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/typing.html#typing.Self

   (3) https://docs.python.org/3/library/stdtypes.html#tuple

   (4) https://docs.python.org/3/library/stdtypes.html#list

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/stdtypes.html#list

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/stdtypes.html#tuple

   (9) https://docs.python.org/3/library/stdtypes.html#list

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/stdtypes.html#list

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Errhandler,  Next: mpi4py MPI File,  Prev: mpi4py MPI Distgraphcomm,  Up: mpi4py MPI<2>

11.1.7 mpi4py.MPI.Errhandler
----------------------------

 -- Class: mpi4py.MPI.Errhandler

     Bases: object(1)

     Error handler.

      -- Method: static __new__ (cls, errhandler=None)


          Parameters: ‘errhandler’ (*note Errhandler: d8.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Free: 381.()Free an error handler.
                    
                    
     *note f2py: 382.(arg)

     *note free: 383.()Call *note Free: 381. if not null.
                    
                    
     *note fromhandle: 384.(handle)Create object from MPI handle.
                    
                    
     *note py2f: 385.()

     Attributes Summary
     ..................

     *note handle: 386.MPI handle.
                    

     Methods Documentation
     .....................

      -- Method: Free ()

          Free an error handler.


          Return type: None(4)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(5))


          Return type: *note Errhandler: d8.

      -- Method: free ()

          Call *note Free: 381. if not null.


          Return type: None(6)

      -- Method: classmethod fromhandle (handle)

          Create object from MPI handle.


          Parameters: ‘handle’ (int(7))


          Return type: *note Errhandler: d8.

      -- Method: py2f ()


          Return type: int(8)

     Attributes Documentation
     ........................

      -- Attribute: handle

          MPI handle.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI File,  Next: mpi4py MPI Graphcomm,  Prev: mpi4py MPI Errhandler,  Up: mpi4py MPI<2>

11.1.8 mpi4py.MPI.File
----------------------

 -- Class: mpi4py.MPI.File

     Bases: object(1)

     File I/O context.

      -- Method: static __new__ (cls, file=None)


          Parameters: ‘file’ (*note File: 84.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Call_errhandler: 38a.(errorcode)Call the error handler installed on a file.
                    
                    
     *note Close: 86.()Close a file.
                    
                    
     *note Create_errhandler: 38b.(errhandler_fn)Create a new error handler for files.
                    
                    
     *note Delete: 87.(filename[,Delete a file.
     info])         

     *note Get_amode: 38c.()Return the file access mode.
                    
                    
     *note Get_atomicity: 38d.()Return the atomicity mode.
                    
                    
     *note Get_byte_offset: 38e.(offset)Return the absolute byte position in the file.
                    
                    
     *note Get_errhandler: 38f.()Get the error handler for a file.
                    
                    
     *note Get_group: 390.()Access the group of processes that opened the file.
                    
                    
     *note Get_info: 391.()Return the current hints for a file.
                    
                    
     *note Get_position: 392.()Return the current position of the individual file pointer.
                    
                    
     *note Get_position_shared: 393.()Return the current position of the shared file pointer.
                    
                    
     *note Get_size: 394.()Return the file size.
                    
                    
     *note Get_type_extent: 395.(datatype)Return the extent of datatype in the file.
                    
                    
     *note Get_view: 89.()Return the file view.
                    
                    
     *note Iread: 396.(buf)Nonblocking read using individual file pointer.
                    
                    
     *note Iread_all: 397.(buf)Nonblocking collective read using individual file pointer.
                    
                    
     *note Iread_at: 398.(offset,Nonblocking read using explicit offset.
     buf)           

     *note Iread_at_all: 399.(offset,Nonblocking collective read using explicit offset.
     buf)           

     *note Iread_shared: 39a.(buf)Nonblocking read using shared file pointer.
                    
                    
     *note Iwrite: 39b.(buf)Nonblocking write using individual file pointer.
                    
                    
     *note Iwrite_all: 39c.(buf)Nonblocking collective write using individual file pointer.
                    
                    
     *note Iwrite_at: 39d.(offset,Nonblocking write using explicit offset.
     buf)           

     *note Iwrite_at_all: 39e.(offset,Nonblocking collective write using explicit offset.
     buf)           

     *note Iwrite_shared: 39f.(buf)Nonblocking write using shared file pointer.
                    
                    
     *note Open: 85.(comm,Open a file.
     filename[,     
     amode,
     info])

     *note Preallocate: 3a0.(size)Preallocate storage space for a file.
                    
                    
     *note Read: 3a1.(buf[,Read using individual file pointer.
     status])       

     *note Read_all: 3a2.(buf[,Collective read using individual file pointer.
     status])       

     *note Read_all_begin: 3a3.(buf)Start a split collective read using individual file pointer.
                    
                    
     *note Read_all_end: 3a4.(buf[,Complete a split collective read using individual file pointer.
     status])       

     *note Read_at: 3a5.(offset,Read using explicit offset.
     buf[,          
     status])

     *note Read_at_all: 3a6.(offset,Collective read using explicit offset.
     buf[,          
     status])

     *note Read_at_all_begin: 3a7.(offset,Start a split collective read using explicit offset.
     buf)           

     *note Read_at_all_end: 3a8.(buf[,Complete a split collective read using explicit offset.
     status])       

     *note Read_ordered: 3a9.(buf[,Collective read using shared file pointer.
     status])       

     *note Read_ordered_begin: 3aa.(buf)Start a split collective read using shared file pointer.
                    
                    
     *note Read_ordered_end: 3ab.(buf[,Complete a split collective read using shared file pointer.
     status])       

     *note Read_shared: 3ac.(buf[,Read using shared file pointer.
     status])       

     *note Seek: 3ad.(offset[,Update the individual file pointer.
     whence])       

     *note Seek_shared: 3ae.(offset[,Update the shared file pointer.
     whence])       

     *note Set_atomicity: 3af.(flag)Set the atomicity mode.
                    
                    
     *note Set_errhandler: 3b0.(errhandler)Set the error handler for a file.
                    
                    
     *note Set_info: 3b1.(info)Set new values for the hints associated with a file.
                    
                    
     *note Set_size: 3b2.(size)Set the file size.
                    
                    
     *note Set_view: 88.([disp,Set the file view.
     etype,         
     filetype,
     datarep,
     info])

     *note Sync: 3b3.()Causes all previous writes to be transferred to the storage device.
                    
                    
     *note Write: 3b4.(buf[,Write using individual file pointer.
     status])       

     *note Write_all: 3b5.(buf[,Collective write using individual file pointer.
     status])       

     *note Write_all_begin: 3b6.(buf)Start a split collective write using individual file pointer.
                    
                    
     *note Write_all_end: 3b7.(buf[,Complete a split collective write using individual file pointer.
     status])       

     *note Write_at: 3b8.(offset,Write using explicit offset.
     buf[,          
     status])

     *note Write_at_all: 3b9.(offset,Collective write using explicit offset.
     buf[,          
     status])

     *note Write_at_all_begin: 3ba.(offset,Start a split collective write using explicit offset.
     buf)           

     *note Write_at_all_end: 3bb.(buf[,Complete a split collective write using explicit offset.
     status])       

     *note Write_ordered: 3bc.(buf[,Collective write using shared file pointer.
     status])       

     *note Write_ordered_begin: 3bd.(buf)Start a split collective write using shared file pointer.
                    
                    
     *note Write_ordered_end: 3be.(buf[,Complete a split collective write using shared file pointer.
     status])       

     *note Write_shared: 3bf.(buf[,Write using shared file pointer.
     status])       

     *note f2py: 3c0.(arg)

     *note free: 3c1.()Call *note Close: 86. if not null.
                    
                    
     *note fromhandle: 3c2.(handle)Create object from MPI handle.
                    
                    
     *note py2f: 3c3.()

     Attributes Summary
     ..................

     *note amode: 3c4.Access mode.
                    
                    
     *note atomicity: 3c5.Atomicity mode.
                    
                    
     *note group: 3c6.Group.
                    
                    
     *note group_rank: 3c7.Group rank.
                    
                    
     *note group_size: 3c8.Group size.
                    
                    
     *note handle: 3c9.MPI handle.
                    
                    
     *note info: 3ca.Info hints.
                    
                    
     *note size: 3cb.Size (in bytes).
                    

     Methods Documentation
     .....................

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a file.


          Parameters: ‘errorcode’ (int(4))


          Return type: None(5)

      -- Method: Close ()

          Close a file.


          Return type: None(6)

      -- Method: classmethod Create_errhandler (errhandler_fn)

          Create a new error handler for files.


          Parameters: ‘errhandler_fn’ (Callable(7)‘[’‘[’*note File:
          84.‘, ’int(8)‘]’‘, ’None(9)‘]’)


          Return type: *note Errhandler: d8.

      -- Method: classmethod Delete (filename, info=INFO_NULL)

          Delete a file.


          Parameters:

             * ‘filename’ (PathLike(10)‘ | ’str(11)‘ | ’bytes(12))

             * ‘info’ (*note Info: d4.)


          Return type: None(13)

      -- Method: Get_amode ()

          Return the file access mode.


          Return type: int(14)

      -- Method: Get_atomicity ()

          Return the atomicity mode.


          Return type: bool(15)

      -- Method: Get_byte_offset (offset)

          Return the absolute byte position in the file.

               Note: Input 'offset' is measured in etype units relative
               to the current file view.


          Parameters: ‘offset’ (int(16))


          Return type: int(17)

      -- Method: Get_errhandler ()

          Get the error handler for a file.


          Return type: *note Errhandler: d8.

      -- Method: Get_group ()

          Access the group of processes that opened the file.


          Return type: *note Group: 28.

      -- Method: Get_info ()

          Return the current hints for a file.


          Return type: *note Info: d4.

      -- Method: Get_position ()

          Return the current position of the individual file pointer.

               Note: Position is measured in etype units relative to the
               current file view.


          Return type: int(18)

      -- Method: Get_position_shared ()

          Return the current position of the shared file pointer.

               Note: Position is measured in etype units relative to the
               current view.


          Return type: int(19)

      -- Method: Get_size ()

          Return the file size.


          Return type: int(20)

      -- Method: Get_type_extent (datatype)

          Return the extent of datatype in the file.


          Parameters: ‘datatype’ (*note Datatype: d0.)


          Return type: int(21)

      -- Method: Get_view ()

          Return the file view.


          Return type: tuple(22)[int(23), *note Datatype: d0, *note
          Datatype: d0, str(24)]

      -- Method: Iread (buf)

          Nonblocking read using individual file pointer.


          Parameters: ‘buf’ (*note BufSpec: 212.)


          Return type: *note Request: 43.

      -- Method: Iread_all (buf)

          Nonblocking collective read using individual file pointer.


          Parameters: ‘buf’ (*note BufSpec: 212.)


          Return type: *note Request: 43.

      -- Method: Iread_at (offset, buf)

          Nonblocking read using explicit offset.


          Parameters:

             * ‘offset’ (int(25))

             * ‘buf’ (*note BufSpec: 212.)


          Return type: *note Request: 43.

      -- Method: Iread_at_all (offset, buf)

          Nonblocking collective read using explicit offset.


          Parameters:

             * ‘offset’ (int(26))

             * ‘buf’ (*note BufSpec: 212.)


          Return type: *note Request: 43.

      -- Method: Iread_shared (buf)

          Nonblocking read using shared file pointer.


          Parameters: ‘buf’ (*note BufSpec: 212.)


          Return type: *note Request: 43.

      -- Method: Iwrite (buf)

          Nonblocking write using individual file pointer.


          Parameters: ‘buf’ (*note BufSpec: 212.)


          Return type: *note Request: 43.

      -- Method: Iwrite_all (buf)

          Nonblocking collective write using individual file pointer.


          Parameters: ‘buf’ (*note BufSpec: 212.)


          Return type: *note Request: 43.

      -- Method: Iwrite_at (offset, buf)

          Nonblocking write using explicit offset.


          Parameters:

             * ‘offset’ (int(27))

             * ‘buf’ (*note BufSpec: 212.)


          Return type: *note Request: 43.

      -- Method: Iwrite_at_all (offset, buf)

          Nonblocking collective write using explicit offset.


          Parameters:

             * ‘offset’ (int(28))

             * ‘buf’ (*note BufSpec: 212.)


          Return type: *note Request: 43.

      -- Method: Iwrite_shared (buf)

          Nonblocking write using shared file pointer.


          Parameters: ‘buf’ (*note BufSpec: 212.)


          Return type: *note Request: 43.

      -- Method: classmethod Open (comm, filename, amode=MODE_RDONLY,
               info=INFO_NULL)

          Open a file.


          Parameters:

             * ‘comm’ (*note Intracomm: 1f.)

             * ‘filename’ (PathLike(29)‘ | ’str(30)‘ | ’bytes(31))

             * ‘amode’ (int(32))

             * ‘info’ (*note Info: d4.)


          Return type: Self(33)

      -- Method: Preallocate (size)

          Preallocate storage space for a file.


          Parameters: ‘size’ (int(34))


          Return type: None(35)

      -- Method: Read (buf, status=None)

          Read using individual file pointer.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(36))


          Return type: None(37)

      -- Method: Read_all (buf, status=None)

          Collective read using individual file pointer.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(38))


          Return type: None(39)

      -- Method: Read_all_begin (buf)

          Start a split collective read using individual file pointer.


          Parameters: ‘buf’ (*note BufSpec: 212.)


          Return type: None(40)

      -- Method: Read_all_end (buf, status=None)

          Complete a split collective read using individual file
          pointer.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(41))


          Return type: None(42)

      -- Method: Read_at (offset, buf, status=None)

          Read using explicit offset.


          Parameters:

             * ‘offset’ (int(43))

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(44))


          Return type: None(45)

      -- Method: Read_at_all (offset, buf, status=None)

          Collective read using explicit offset.


          Parameters:

             * ‘offset’ (int(46))

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(47))


          Return type: None(48)

      -- Method: Read_at_all_begin (offset, buf)

          Start a split collective read using explicit offset.


          Parameters:

             * ‘offset’ (int(49))

             * ‘buf’ (*note BufSpec: 212.)


          Return type: None(50)

      -- Method: Read_at_all_end (buf, status=None)

          Complete a split collective read using explicit offset.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(51))


          Return type: None(52)

      -- Method: Read_ordered (buf, status=None)

          Collective read using shared file pointer.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(53))


          Return type: None(54)

      -- Method: Read_ordered_begin (buf)

          Start a split collective read using shared file pointer.


          Parameters: ‘buf’ (*note BufSpec: 212.)


          Return type: None(55)

      -- Method: Read_ordered_end (buf, status=None)

          Complete a split collective read using shared file pointer.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(56))


          Return type: None(57)

      -- Method: Read_shared (buf, status=None)

          Read using shared file pointer.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(58))


          Return type: None(59)

      -- Method: Seek (offset, whence=SEEK_SET)

          Update the individual file pointer.


          Parameters:

             * ‘offset’ (int(60))

             * ‘whence’ (int(61))


          Return type: None(62)

      -- Method: Seek_shared (offset, whence=SEEK_SET)

          Update the shared file pointer.


          Parameters:

             * ‘offset’ (int(63))

             * ‘whence’ (int(64))


          Return type: None(65)

      -- Method: Set_atomicity (flag)

          Set the atomicity mode.


          Parameters: ‘flag’ (bool(66))


          Return type: None(67)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a file.


          Parameters: ‘errhandler’ (*note Errhandler: d8.)


          Return type: None(68)

      -- Method: Set_info (info)

          Set new values for the hints associated with a file.


          Parameters: ‘info’ (*note Info: d4.)


          Return type: None(69)

      -- Method: Set_size (size)

          Set the file size.


          Parameters: ‘size’ (int(70))


          Return type: None(71)

      -- Method: Set_view (disp=0, etype=BYTE, filetype=None,
               datarep='native', info=INFO_NULL)

          Set the file view.


          Parameters:

             * ‘disp’ (int(72))

             * ‘etype’ (*note Datatype: d0.)

             * ‘filetype’ (*note Datatype: d0.‘ | ’None(73))

             * ‘datarep’ (str(74))

             * ‘info’ (*note Info: d4.)


          Return type: None(75)

      -- Method: Sync ()

          Causes all previous writes to be transferred to the storage
          device.


          Return type: None(76)

      -- Method: Write (buf, status=None)

          Write using individual file pointer.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(77))


          Return type: None(78)

      -- Method: Write_all (buf, status=None)

          Collective write using individual file pointer.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(79))


          Return type: None(80)

      -- Method: Write_all_begin (buf)

          Start a split collective write using individual file pointer.


          Parameters: ‘buf’ (*note BufSpec: 212.)


          Return type: None(81)

      -- Method: Write_all_end (buf, status=None)

          Complete a split collective write using individual file
          pointer.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(82))


          Return type: None(83)

      -- Method: Write_at (offset, buf, status=None)

          Write using explicit offset.


          Parameters:

             * ‘offset’ (int(84))

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(85))


          Return type: None(86)

      -- Method: Write_at_all (offset, buf, status=None)

          Collective write using explicit offset.


          Parameters:

             * ‘offset’ (int(87))

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(88))


          Return type: None(89)

      -- Method: Write_at_all_begin (offset, buf)

          Start a split collective write using explicit offset.


          Parameters:

             * ‘offset’ (int(90))

             * ‘buf’ (*note BufSpec: 212.)


          Return type: None(91)

      -- Method: Write_at_all_end (buf, status=None)

          Complete a split collective write using explicit offset.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(92))


          Return type: None(93)

      -- Method: Write_ordered (buf, status=None)

          Collective write using shared file pointer.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(94))


          Return type: None(95)

      -- Method: Write_ordered_begin (buf)

          Start a split collective write using shared file pointer.


          Parameters: ‘buf’ (*note BufSpec: 212.)


          Return type: None(96)

      -- Method: Write_ordered_end (buf, status=None)

          Complete a split collective write using shared file pointer.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(97))


          Return type: None(98)

      -- Method: Write_shared (buf, status=None)

          Write using shared file pointer.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(99))


          Return type: None(100)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(101))


          Return type: *note File: 84.

      -- Method: free ()

          Call *note Close: 86. if not null.


          Return type: None(102)

      -- Method: classmethod fromhandle (handle)

          Create object from MPI handle.


          Parameters: ‘handle’ (int(103))


          Return type: *note File: 84.

      -- Method: py2f ()


          Return type: int(104)

     Attributes Documentation
     ........................

      -- Attribute: amode

          Access mode.

      -- Attribute: atomicity

          Atomicity mode.

      -- Attribute: group

          Group.

      -- Attribute: group_rank

          Group rank.

      -- Attribute: group_size

          Group size.

      -- Attribute: handle

          MPI handle.

      -- Attribute: info

          Info hints.

      -- Attribute: size

          Size (in bytes).

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/typing.html#typing.Callable

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/os.html#os.PathLike

   (11) https://docs.python.org/3/library/stdtypes.html#str

   (12) https://docs.python.org/3/library/stdtypes.html#bytes

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#bool

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/stdtypes.html#tuple

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/stdtypes.html#str

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/os.html#os.PathLike

   (30) https://docs.python.org/3/library/stdtypes.html#str

   (31) https://docs.python.org/3/library/stdtypes.html#bytes

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/typing.html#typing.Self

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/constants.html#None

   (36) https://docs.python.org/3/library/constants.html#None

   (37) https://docs.python.org/3/library/constants.html#None

   (38) https://docs.python.org/3/library/constants.html#None

   (39) https://docs.python.org/3/library/constants.html#None

   (40) https://docs.python.org/3/library/constants.html#None

   (41) https://docs.python.org/3/library/constants.html#None

   (42) https://docs.python.org/3/library/constants.html#None

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/constants.html#None

   (45) https://docs.python.org/3/library/constants.html#None

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/constants.html#None

   (48) https://docs.python.org/3/library/constants.html#None

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/constants.html#None

   (51) https://docs.python.org/3/library/constants.html#None

   (52) https://docs.python.org/3/library/constants.html#None

   (53) https://docs.python.org/3/library/constants.html#None

   (54) https://docs.python.org/3/library/constants.html#None

   (55) https://docs.python.org/3/library/constants.html#None

   (56) https://docs.python.org/3/library/constants.html#None

   (57) https://docs.python.org/3/library/constants.html#None

   (58) https://docs.python.org/3/library/constants.html#None

   (59) https://docs.python.org/3/library/constants.html#None

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/constants.html#None

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/constants.html#None

   (66) https://docs.python.org/3/library/functions.html#bool

   (67) https://docs.python.org/3/library/constants.html#None

   (68) https://docs.python.org/3/library/constants.html#None

   (69) https://docs.python.org/3/library/constants.html#None

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/constants.html#None

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/constants.html#None

   (74) https://docs.python.org/3/library/stdtypes.html#str

   (75) https://docs.python.org/3/library/constants.html#None

   (76) https://docs.python.org/3/library/constants.html#None

   (77) https://docs.python.org/3/library/constants.html#None

   (78) https://docs.python.org/3/library/constants.html#None

   (79) https://docs.python.org/3/library/constants.html#None

   (80) https://docs.python.org/3/library/constants.html#None

   (81) https://docs.python.org/3/library/constants.html#None

   (82) https://docs.python.org/3/library/constants.html#None

   (83) https://docs.python.org/3/library/constants.html#None

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/constants.html#None

   (86) https://docs.python.org/3/library/constants.html#None

   (87) https://docs.python.org/3/library/functions.html#int

   (88) https://docs.python.org/3/library/constants.html#None

   (89) https://docs.python.org/3/library/constants.html#None

   (90) https://docs.python.org/3/library/functions.html#int

   (91) https://docs.python.org/3/library/constants.html#None

   (92) https://docs.python.org/3/library/constants.html#None

   (93) https://docs.python.org/3/library/constants.html#None

   (94) https://docs.python.org/3/library/constants.html#None

   (95) https://docs.python.org/3/library/constants.html#None

   (96) https://docs.python.org/3/library/constants.html#None

   (97) https://docs.python.org/3/library/constants.html#None

   (98) https://docs.python.org/3/library/constants.html#None

   (99) https://docs.python.org/3/library/constants.html#None

   (100) https://docs.python.org/3/library/constants.html#None

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/constants.html#None

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Graphcomm,  Next: mpi4py MPI Grequest,  Prev: mpi4py MPI File,  Up: mpi4py MPI<2>

11.1.9 mpi4py.MPI.Graphcomm
---------------------------

 -- Class: mpi4py.MPI.Graphcomm

     Bases: *note Topocomm: d6.

     General graph topology intracommunicator.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (*note Graphcomm: 34.‘ | ’None(1))


          Return type: Self(2)

     Methods Summary
     ...............

     *note Get_dims: 3cf.()Return the number of nodes and edges.
                    
                    
     *note Get_neighbors: 3d0.(rank)Return list of neighbors of a process.
                    
                    
     *note Get_neighbors_count: 3d1.(rank)Return number of neighbors of a process.
                    
                    
     *note Get_topo: 3d2.()Return index and edges.
                    

     Attributes Summary
     ..................

     *note dims: 3d3.Number of nodes and edges.
                    
                    
     *note edges: 3d4.Edges.
                    
                    
     *note index: 3d5.Index.
                    
                    
     *note nedges: 3d6.Number of edges.
                    
                    
     *note neighbors: 3d7.Neighbors.
                    
                    
     *note nneighbors: 3d8.Number of neighbors.
                    
                    
     *note nnodes: 3d9.Number of nodes.
                    
                    
     *note topo: 3da.Topology information.
                    

     Methods Documentation
     .....................

      -- Method: Get_dims ()

          Return the number of nodes and edges.


          Return type: tuple(3)[int(4), int(5)]

      -- Method: Get_neighbors (rank)

          Return list of neighbors of a process.


          Parameters: ‘rank’ (int(6))


          Return type: list(7)[int(8)]

      -- Method: Get_neighbors_count (rank)

          Return number of neighbors of a process.


          Parameters: ‘rank’ (int(9))


          Return type: int(10)

      -- Method: Get_topo ()

          Return index and edges.


          Return type: tuple(11)[list(12)[int(13)], list(14)[int(15)]]

     Attributes Documentation
     ........................

      -- Attribute: dims

          Number of nodes and edges.

      -- Attribute: edges

          Edges.

      -- Attribute: index

          Index.

      -- Attribute: nedges

          Number of edges.

      -- Attribute: neighbors

          Neighbors.

      -- Attribute: nneighbors

          Number of neighbors.

      -- Attribute: nnodes

          Number of nodes.

      -- Attribute: topo

          Topology information.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/typing.html#typing.Self

   (3) https://docs.python.org/3/library/stdtypes.html#tuple

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/stdtypes.html#list

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/stdtypes.html#tuple

   (12) https://docs.python.org/3/library/stdtypes.html#list

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/stdtypes.html#list

   (15) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Grequest,  Next: mpi4py MPI Group,  Prev: mpi4py MPI Graphcomm,  Up: mpi4py MPI<2>

11.1.10 mpi4py.MPI.Grequest
---------------------------

 -- Class: mpi4py.MPI.Grequest

     Bases: *note Request: 43.

     Generalized request handler.

      -- Method: static __new__ (cls, request=None)


          Parameters: ‘request’ (*note Grequest: d2.‘ | ’None(1))


          Return type: Self(2)

     Methods Summary
     ...............

     *note Complete: 3de.()Notify that a user-defined request is complete.
                    
                    
     *note Start: 3df.([query_fn,Create and return a user-defined request.
     free_fn,       
     cancel_fn,
     args, ...])

     *note complete: 3e0.([obj])Notify that a user-defined request is complete.
                    

     Methods Documentation
     .....................

      -- Method: Complete ()

          Notify that a user-defined request is complete.


          Return type: None(3)

      -- Method: classmethod Start (query_fn=None, free_fn=None,
               cancel_fn=None, args=None, kwargs=None)

          Create and return a user-defined request.


          Parameters:

             * ‘query_fn’ (Callable(4)‘[’‘[’‘...’‘]’‘, ’None(5)‘] ’‘|
               ’None(6))

             * ‘free_fn’ (Callable(7)‘[’‘[’‘...’‘]’‘, ’None(8)‘] ’‘|
               ’None(9))

             * ‘cancel_fn’ (Callable(10)‘[’‘[’‘...’‘]’‘, ’None(11)‘] ’‘|
               ’None(12))

             * ‘args’ (tuple(13)‘[’Any(14)‘] ’‘| ’None(15))

             * ‘kwargs’ (dict(16)‘[’str(17)‘, ’Any(18)‘] ’‘| ’None(19))


          Return type: *note Grequest: d2.

      -- Method: complete (obj=None)

          Notify that a user-defined request is complete.


          Parameters: ‘obj’ (Any(20))


          Return type: None(21)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/typing.html#typing.Self

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/typing.html#typing.Callable

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/typing.html#typing.Callable

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/typing.html#typing.Callable

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/constants.html#None

   (13) https://docs.python.org/3/library/stdtypes.html#tuple

   (14) https://docs.python.org/3/library/typing.html#typing.Any

   (15) https://docs.python.org/3/library/constants.html#None

   (16) https://docs.python.org/3/library/stdtypes.html#dict

   (17) https://docs.python.org/3/library/stdtypes.html#str

   (18) https://docs.python.org/3/library/typing.html#typing.Any

   (19) https://docs.python.org/3/library/constants.html#None

   (20) https://docs.python.org/3/library/typing.html#typing.Any

   (21) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Group,  Next: mpi4py MPI InPlaceType,  Prev: mpi4py MPI Grequest,  Up: mpi4py MPI<2>

11.1.11 mpi4py.MPI.Group
------------------------

 -- Class: mpi4py.MPI.Group

     Bases: object(1)

     Group of processes.

      -- Method: static __new__ (cls, group=None)


          Parameters: ‘group’ (*note Group: 28.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Compare: 3e4.(group)Compare two groups.
                    
                    
     *note Create_from_session_pset: 3e5.(session,Create a new group from session and process set.
     pset_name)     

     *note Difference: 2b.(group1,Create a new group from the difference of two existing groups.
     group2)        

     *note Dup: 3e6.()Duplicate a group.
                    
                    
     *note Excl: 3e7.(ranks)Create a new group by excluding listed members.
                    
                    
     *note Free: 3e8.()Free a group.
                    
                    
     *note Get_rank: 3e9.()Return the rank of this process in a group.
                    
                    
     *note Get_size: 3ea.()Return the number of processes in a group.
                    
                    
     *note Incl: 3eb.(ranks)Create a new group by including listed members.
                    
                    
     *note Intersection: 2a.(group1,Create a new group from the intersection of two existing groups.
     group2)        

     *note Range_excl: 3ec.(ranks)Create a new group by excluding ranges of members.
                    
                    
     *note Range_incl: 3ed.(ranks)Create a new group by including ranges of members.
                    
                    
     *note Translate_ranks: 3ee.([ranks,Translate ranks in a group to those in another group.
     group])        

     *note Union: 29.(group1,Create a new group from the union of two existing groups.
     group2)        

     *note f2py: 3ef.(arg)

     *note free: 3f0.()Call *note Free: 3e8. if not null or predefined.
                    
                    
     *note fromhandle: 3f1.(handle)Create object from MPI handle.
                    
                    
     *note py2f: 3f2.()

     Attributes Summary
     ..................

     *note handle: 3f3.MPI handle.
                    
                    
     *note rank: 3f4.Rank of this process.
                    
                    
     *note size: 3f5.Number of processes.
                    

     Methods Documentation
     .....................

      -- Method: Compare (group)

          Compare two groups.


          Parameters: ‘group’ (*note Group: 28.)


          Return type: int(4)

      -- Method: classmethod Create_from_session_pset (session,
               pset_name)

          Create a new group from session and process set.


          Parameters:

             * ‘session’ (*note Session: d5.)

             * ‘pset_name’ (str(5))


          Return type: Self(6)

      -- Method: classmethod Difference (group1, group2)

          Create a new group from the difference of two existing groups.


          Parameters:

             * ‘group1’ (*note Group: 28.)

             * ‘group2’ (*note Group: 28.)


          Return type: Self(7)

      -- Method: Dup ()

          Duplicate a group.


          Return type: Self(8)

      -- Method: Excl (ranks)

          Create a new group by excluding listed members.


          Parameters: ‘ranks’ (Sequence(9)‘[’int(10)‘]’)


          Return type: Self(11)

      -- Method: Free ()

          Free a group.


          Return type: None(12)

      -- Method: Get_rank ()

          Return the rank of this process in a group.


          Return type: int(13)

      -- Method: Get_size ()

          Return the number of processes in a group.


          Return type: int(14)

      -- Method: Incl (ranks)

          Create a new group by including listed members.


          Parameters: ‘ranks’ (Sequence(15)‘[’int(16)‘]’)


          Return type: Self(17)

      -- Method: classmethod Intersection (group1, group2)

          Create a new group from the intersection of two existing
          groups.


          Parameters:

             * ‘group1’ (*note Group: 28.)

             * ‘group2’ (*note Group: 28.)


          Return type: Self(18)

      -- Method: Range_excl (ranks)

          Create a new group by excluding ranges of members.


          Parameters: ‘ranks’ (Sequence(19)‘[’tuple(20)‘[’int(21)‘,
          ’int(22)‘, ’int(23)‘]’‘]’)


          Return type: Self(24)

      -- Method: Range_incl (ranks)

          Create a new group by including ranges of members.


          Parameters: ‘ranks’ (Sequence(25)‘[’tuple(26)‘[’int(27)‘,
          ’int(28)‘, ’int(29)‘]’‘]’)


          Return type: Self(30)

      -- Method: Translate_ranks (ranks=None, group=None)

          Translate ranks in a group to those in another group.


          Parameters:

             * ‘ranks’ (Sequence(31)‘[’int(32)‘] ’‘| ’None(33))

             * ‘group’ (*note Group: 28.‘ | ’None(34))


          Return type: list(35)[int(36)]

      -- Method: classmethod Union (group1, group2)

          Create a new group from the union of two existing groups.


          Parameters:

             * ‘group1’ (*note Group: 28.)

             * ‘group2’ (*note Group: 28.)


          Return type: Self(37)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(38))


          Return type: *note Group: 28.

      -- Method: free ()

          Call *note Free: 3e8. if not null or predefined.


          Return type: None(39)

      -- Method: classmethod fromhandle (handle)

          Create object from MPI handle.


          Parameters: ‘handle’ (int(40))


          Return type: *note Group: 28.

      -- Method: py2f ()


          Return type: int(41)

     Attributes Documentation
     ........................

      -- Attribute: handle

          MPI handle.

      -- Attribute: rank

          Rank of this process.

      -- Attribute: size

          Number of processes.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/typing.html#typing.Self

   (7) https://docs.python.org/3/library/typing.html#typing.Self

   (8) https://docs.python.org/3/library/typing.html#typing.Self

   (9) https://docs.python.org/3/library/typing.html#typing.Sequence

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/typing.html#typing.Self

   (12) https://docs.python.org/3/library/constants.html#None

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/typing.html#typing.Sequence

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/typing.html#typing.Self

   (18) https://docs.python.org/3/library/typing.html#typing.Self

   (19) https://docs.python.org/3/library/typing.html#typing.Sequence

   (20) https://docs.python.org/3/library/stdtypes.html#tuple

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/typing.html#typing.Self

   (25) https://docs.python.org/3/library/typing.html#typing.Sequence

   (26) https://docs.python.org/3/library/stdtypes.html#tuple

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/typing.html#typing.Self

   (31) https://docs.python.org/3/library/typing.html#typing.Sequence

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/constants.html#None

   (34) https://docs.python.org/3/library/constants.html#None

   (35) https://docs.python.org/3/library/stdtypes.html#list

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/typing.html#typing.Self

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/constants.html#None

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI InPlaceType,  Next: mpi4py MPI Info,  Prev: mpi4py MPI Group,  Up: mpi4py MPI<2>

11.1.12 mpi4py.MPI.InPlaceType
------------------------------

 -- Class: mpi4py.MPI.InPlaceType

     Bases: int(1)

     Type of *note IN_PLACE: fc.

      -- Method: static __new__ (cls)


          Return type: Self(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/typing.html#typing.Self


File: mpi4py.info,  Node: mpi4py MPI Info,  Next: mpi4py MPI Intercomm,  Prev: mpi4py MPI InPlaceType,  Up: mpi4py MPI<2>

11.1.13 mpi4py.MPI.Info
-----------------------

 -- Class: mpi4py.MPI.Info

     Bases: object(1)

     Info object.

      -- Method: static __new__ (cls, info=None)


          Parameters: ‘info’ (*note Info: d4.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Create: 3fc.([items])Create a new info object.
                    
                    
     *note Create_env: 3fd.([args])Create a new environment info object.
                    
                    
     *note Delete: 3fe.(key)Remove a (key, value) pair from info.
                    
                    
     *note Dup: 3ff.()Duplicate an existing info object.
                    
                    
     *note Free: 400.()Free an info object.
                    
                    
     *note Get: 401.(key)Retrieve the value associated with a key.
                    
                    
     *note Get_nkeys: 402.()Return the number of currently defined keys in info.
                    
                    
     *note Get_nthkey: 403.(n)Return the 'n'-th defined key in info.
                    
                    
     *note Set: 404.(key,Store a value associated with a key.
     value)         

     *note clear: 405.()Clear contents.
                    
                    
     *note copy: 406.()Copy contents.
                    
                    
     *note f2py: 407.(arg)

     *note free: 408.()Call *note Free: 400. if not null or predefined.
                    
                    
     *note fromhandle: 409.(handle)Create object from MPI handle.
                    
                    
     *note get: 40a.(key[,Retrieve value by key.
     default])      

     *note items: 40b.()Return list of items.
                    
                    
     *note keys: 40c.()Return list of keys.
                    
                    
     *note pop: 40d.(key,Pop value by key.
     *default)      

     *note popitem: 40e.()Pop first item.
                    
                    
     *note py2f: 40f.()

     *note update: 410.([items])Update contents.
                    
                    
     *note values: 411.()Return list of values.
                    

     Attributes Summary
     ..................

     *note handle: 412.MPI handle.
                    

     Methods Documentation
     .....................

      -- Method: classmethod Create (items=None)

          Create a new info object.


          Parameters: ‘items’ (*note Info: d4.‘ | ’Mapping(4)‘[’str(5)‘,
          ’str(6)‘] ’‘| ’Iterable(7)‘[’tuple(8)‘[’str(9)‘, ’str(10)‘]’‘]
          ’‘| ’None(11))


          Return type: Self(12)

      -- Method: classmethod Create_env (args=None)

          Create a new environment info object.


          Parameters: ‘args’ (Sequence(13)‘[’str(14)‘] ’‘| ’None(15))


          Return type: Self(16)

      -- Method: Delete (key)

          Remove a (key, value) pair from info.


          Parameters: ‘key’ (str(17))


          Return type: None(18)

      -- Method: Dup ()

          Duplicate an existing info object.


          Return type: Self(19)

      -- Method: Free ()

          Free an info object.


          Return type: None(20)

      -- Method: Get (key)

          Retrieve the value associated with a key.


          Parameters: ‘key’ (str(21))


          Return type: str(22) | None(23)

      -- Method: Get_nkeys ()

          Return the number of currently defined keys in info.


          Return type: int(24)

      -- Method: Get_nthkey (n)

          Return the 'n'-th defined key in info.


          Parameters: ‘n’ (int(25))


          Return type: str(26)

      -- Method: Set (key, value)

          Store a value associated with a key.


          Parameters:

             * ‘key’ (str(27))

             * ‘value’ (str(28))


          Return type: None(29)

      -- Method: clear ()

          Clear contents.


          Return type: None(30)

      -- Method: copy ()

          Copy contents.


          Return type: Self(31)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(32))


          Return type: *note Info: d4.

      -- Method: free ()

          Call *note Free: 400. if not null or predefined.


          Return type: None(33)

      -- Method: classmethod fromhandle (handle)

          Create object from MPI handle.


          Parameters: ‘handle’ (int(34))


          Return type: *note Info: d4.

      -- Method: get (key, default=None)

          Retrieve value by key.


          Parameters:

             * ‘key’ (str(35))

             * ‘default’ (str(36)‘ | ’None(37))


          Return type: str(38) | None(39)

      -- Method: items ()

          Return list of items.


          Return type: list(40)[tuple(41)[str(42), str(43)]]

      -- Method: keys ()

          Return list of keys.


          Return type: list(44)[str(45)]

      -- Method: pop (key, *default)

          Pop value by key.


          Parameters:

             * ‘key’ (str(46))

             * ‘default’ (str(47))


          Return type: str(48)

      -- Method: popitem ()

          Pop first item.


          Return type: tuple(49)[str(50), str(51)]

      -- Method: py2f ()


          Return type: int(52)

      -- Method: update (items=(), **kwds)

          Update contents.


          Parameters:

             * ‘items’ (*note Info: d4.‘ | ’Mapping(53)‘[’str(54)‘,
               ’str(55)‘] ’‘| ’Iterable(56)‘[’tuple(57)‘[’str(58)‘,
               ’str(59)‘]’‘]’)

             * ‘kwds’ (str(60))


          Return type: None(61)

      -- Method: values ()

          Return list of values.


          Return type: list(62)[str(63)]

     Attributes Documentation
     ........................

      -- Attribute: handle

          MPI handle.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/typing.html#typing.Mapping

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/stdtypes.html#str

   (7) https://docs.python.org/3/library/typing.html#typing.Iterable

   (8) https://docs.python.org/3/library/stdtypes.html#tuple

   (9) https://docs.python.org/3/library/stdtypes.html#str

   (10) https://docs.python.org/3/library/stdtypes.html#str

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/typing.html#typing.Self

   (13) https://docs.python.org/3/library/typing.html#typing.Sequence

   (14) https://docs.python.org/3/library/stdtypes.html#str

   (15) https://docs.python.org/3/library/constants.html#None

   (16) https://docs.python.org/3/library/typing.html#typing.Self

   (17) https://docs.python.org/3/library/stdtypes.html#str

   (18) https://docs.python.org/3/library/constants.html#None

   (19) https://docs.python.org/3/library/typing.html#typing.Self

   (20) https://docs.python.org/3/library/constants.html#None

   (21) https://docs.python.org/3/library/stdtypes.html#str

   (22) https://docs.python.org/3/library/stdtypes.html#str

   (23) https://docs.python.org/3/library/constants.html#None

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/stdtypes.html#str

   (27) https://docs.python.org/3/library/stdtypes.html#str

   (28) https://docs.python.org/3/library/stdtypes.html#str

   (29) https://docs.python.org/3/library/constants.html#None

   (30) https://docs.python.org/3/library/constants.html#None

   (31) https://docs.python.org/3/library/typing.html#typing.Self

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/constants.html#None

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/stdtypes.html#str

   (36) https://docs.python.org/3/library/stdtypes.html#str

   (37) https://docs.python.org/3/library/constants.html#None

   (38) https://docs.python.org/3/library/stdtypes.html#str

   (39) https://docs.python.org/3/library/constants.html#None

   (40) https://docs.python.org/3/library/stdtypes.html#list

   (41) https://docs.python.org/3/library/stdtypes.html#tuple

   (42) https://docs.python.org/3/library/stdtypes.html#str

   (43) https://docs.python.org/3/library/stdtypes.html#str

   (44) https://docs.python.org/3/library/stdtypes.html#list

   (45) https://docs.python.org/3/library/stdtypes.html#str

   (46) https://docs.python.org/3/library/stdtypes.html#str

   (47) https://docs.python.org/3/library/stdtypes.html#str

   (48) https://docs.python.org/3/library/stdtypes.html#str

   (49) https://docs.python.org/3/library/stdtypes.html#tuple

   (50) https://docs.python.org/3/library/stdtypes.html#str

   (51) https://docs.python.org/3/library/stdtypes.html#str

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/typing.html#typing.Mapping

   (54) https://docs.python.org/3/library/stdtypes.html#str

   (55) https://docs.python.org/3/library/stdtypes.html#str

   (56) https://docs.python.org/3/library/typing.html#typing.Iterable

   (57) https://docs.python.org/3/library/stdtypes.html#tuple

   (58) https://docs.python.org/3/library/stdtypes.html#str

   (59) https://docs.python.org/3/library/stdtypes.html#str

   (60) https://docs.python.org/3/library/stdtypes.html#str

   (61) https://docs.python.org/3/library/constants.html#None

   (62) https://docs.python.org/3/library/stdtypes.html#list

   (63) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Intercomm,  Next: mpi4py MPI Intracomm,  Prev: mpi4py MPI Info,  Up: mpi4py MPI<2>

11.1.14 mpi4py.MPI.Intercomm
----------------------------

 -- Class: mpi4py.MPI.Intercomm

     Bases: *note Comm: 1e.

     Intercommunicator.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (*note Intercomm: 20.‘ | ’None(1))


          Return type: Self(2)

     Methods Summary
     ...............

     *note Create_from_groups: 416.(local_group,Create communicator from group.
     ...[, ...])    

     *note Get_remote_group: 417.()Access the remote group associated with the inter-communicator.
                    
                    
     *note Get_remote_size: 418.()Intercommunicator remote size.
                    
                    
     *note Merge: 32.([high])Merge intercommunicator into an intracommunicator.
                    

     Attributes Summary
     ..................

     *note remote_group: 419.Remote group.
                    
                    
     *note remote_size: 41a.Number of remote processes.
                    

     Methods Documentation
     .....................

      -- Method: classmethod Create_from_groups (local_group,
               local_leader, remote_group, remote_leader,
               stringtag='org.mpi4py', info=INFO_NULL, errhandler=None)

          Create communicator from group.


          Parameters:

             * ‘local_group’ (*note Group: 28.)

             * ‘local_leader’ (int(3))

             * ‘remote_group’ (*note Group: 28.)

             * ‘remote_leader’ (int(4))

             * ‘stringtag’ (str(5))

             * ‘info’ (*note Info: d4.)

             * ‘errhandler’ (*note Errhandler: d8.‘ | ’None(6))


          Return type: *note Intracomm: 1f.

      -- Method: Get_remote_group ()

          Access the remote group associated with the
          inter-communicator.


          Return type: *note Group: 28.

      -- Method: Get_remote_size ()

          Intercommunicator remote size.


          Return type: int(7)

      -- Method: Merge (high=False)

          Merge intercommunicator into an intracommunicator.


          Parameters: ‘high’ (bool(8))


          Return type: *note Intracomm: 1f.

     Attributes Documentation
     ........................

      -- Attribute: remote_group

          Remote group.

      -- Attribute: remote_size

          Number of remote processes.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/typing.html#typing.Self

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/stdtypes.html#str

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Intracomm,  Next: mpi4py MPI Message,  Prev: mpi4py MPI Intercomm,  Up: mpi4py MPI<2>

11.1.15 mpi4py.MPI.Intracomm
----------------------------

 -- Class: mpi4py.MPI.Intracomm

     Bases: *note Comm: 1e.

     Intracommunicator.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (*note Intracomm: 1f.‘ | ’None(1))


          Return type: Self(2)

     Methods Summary
     ...............

     *note Accept: 6f.(port_name[,Accept a request to form a new intercommunicator.
     info, root])   

     *note Cart_map: 41e.(dims[,Determine optimal process placement on a Cartesian topology.
     periods])      

     *note Connect: 71.(port_name[,Make a request to form a new intercommunicator.
     info, root])   

     *note Create_cart: 36.(dims[,Create cartesian communicator.
     periods,       
     reorder])

     *note Create_dist_graph: 41f.(sources,Create distributed graph communicator.
     degrees,       
     destinations)

     *note Create_dist_graph_adjacent: 420.(sources,Create distributed graph communicator.
     destinations)  

     *note Create_from_group: 421.(group[,Create communicator from group.
     stringtag,     
     info, ...])

     *note Create_graph: 37.(index,Create graph communicator.
     edges[,        
     reorder])

     *note Create_group: 2d.(group[,Create communicator from group.
     tag])          

     *note Create_intercomm: 31.(local_leader,Create intercommunicator.
     peer_comm,     
     ...)

     *note Exscan: 60.(sendbuf,Exclusive Scan.
     recvbuf[,      
     op])

     *note Exscan_init: 422.(sendbuf,Persistent Exclusive Scan.
     recvbuf[,      
     op, info])

     *note Graph_map: 423.(index,Determine optimal process placement on a graph topology.
     edges)         

     *note Iexscan: 424.(sendbuf,Inclusive Scan.
     recvbuf[,      
     op])

     *note Iscan: 425.(sendbuf,Inclusive Scan.
     recvbuf[,      
     op])

     *note Scan: 5f.(sendbuf,Inclusive Scan.
     recvbuf[,      
     op])

     *note Scan_init: 426.(sendbuf,Persistent Inclusive Scan.
     recvbuf[,      
     op, info])

     *note Spawn: 6b.(command[,Spawn instances of a single MPI application.
     args,          
     maxprocs,
     info, root,
     ...])

     *note Spawn_multiple: 427.(command[,Spawn instances of multiple MPI applications.
     args,          
     maxprocs,
     ...])

     *note exscan: 64.(sendobj[,Exclusive Scan.
     op])           

     *note scan: 63.(sendobj[,Inclusive Scan.
     op])           

     Methods Documentation
     .....................

      -- Method: Accept (port_name, info=INFO_NULL, root=0)

          Accept a request to form a new intercommunicator.


          Parameters:

             * ‘port_name’ (str(3))

             * ‘info’ (*note Info: d4.)

             * ‘root’ (int(4))


          Return type: *note Intercomm: 20.

      -- Method: Cart_map (dims, periods=None)

          Determine optimal process placement on a Cartesian topology.


          Parameters:

             * ‘dims’ (Sequence(5)‘[’int(6)‘]’)

             * ‘periods’ (Sequence(7)‘[’bool(8)‘] ’‘| ’None(9))


          Return type: int(10)

      -- Method: Connect (port_name, info=INFO_NULL, root=0)

          Make a request to form a new intercommunicator.


          Parameters:

             * ‘port_name’ (str(11))

             * ‘info’ (*note Info: d4.)

             * ‘root’ (int(12))


          Return type: *note Intercomm: 20.

      -- Method: Create_cart (dims, periods=None, reorder=False)

          Create cartesian communicator.


          Parameters:

             * ‘dims’ (Sequence(13)‘[’int(14)‘]’)

             * ‘periods’ (Sequence(15)‘[’bool(16)‘] ’‘| ’None(17))

             * ‘reorder’ (bool(18))


          Return type: *note Cartcomm: 33.

      -- Method: Create_dist_graph (sources, degrees, destinations,
               weights=None, info=INFO_NULL, reorder=False)

          Create distributed graph communicator.


          Parameters:

             * ‘sources’ (Sequence(19)‘[’int(20)‘]’)

             * ‘degrees’ (Sequence(21)‘[’int(22)‘]’)

             * ‘destinations’ (Sequence(23)‘[’int(24)‘]’)

             * ‘weights’ (Sequence(25)‘[’int(26)‘] ’‘| ’None(27))

             * ‘info’ (*note Info: d4.)

             * ‘reorder’ (bool(28))


          Return type: *note Distgraphcomm: 35.

      -- Method: Create_dist_graph_adjacent (sources, destinations,
               sourceweights=None, destweights=None, info=INFO_NULL,
               reorder=False)

          Create distributed graph communicator.


          Parameters:

             * ‘sources’ (Sequence(29)‘[’int(30)‘]’)

             * ‘destinations’ (Sequence(31)‘[’int(32)‘]’)

             * ‘sourceweights’ (Sequence(33)‘[’int(34)‘] ’‘| ’None(35))

             * ‘destweights’ (Sequence(36)‘[’int(37)‘] ’‘| ’None(38))

             * ‘info’ (*note Info: d4.)

             * ‘reorder’ (bool(39))


          Return type: *note Distgraphcomm: 35.

      -- Method: classmethod Create_from_group (group,
               stringtag='org.mpi4py', info=INFO_NULL, errhandler=None)

          Create communicator from group.


          Parameters:

             * ‘group’ (*note Group: 28.)

             * ‘stringtag’ (str(40))

             * ‘info’ (*note Info: d4.)

             * ‘errhandler’ (*note Errhandler: d8.‘ | ’None(41))


          Return type: *note Intracomm: 1f.

      -- Method: Create_graph (index, edges, reorder=False)

          Create graph communicator.


          Parameters:

             * ‘index’ (Sequence(42)‘[’int(43)‘]’)

             * ‘edges’ (Sequence(44)‘[’int(45)‘]’)

             * ‘reorder’ (bool(46))


          Return type: *note Graphcomm: 34.

      -- Method: Create_group (group, tag=0)

          Create communicator from group.


          Parameters:

             * ‘group’ (*note Group: 28.)

             * ‘tag’ (int(47))


          Return type: *note Intracomm: 1f.

      -- Method: Create_intercomm (local_leader, peer_comm,
               remote_leader, tag=0)

          Create intercommunicator.


          Parameters:

             * ‘local_leader’ (int(48))

             * ‘peer_comm’ (*note Intracomm: 1f.)

             * ‘remote_leader’ (int(49))

             * ‘tag’ (int(50))


          Return type: *note Intercomm: 20.

      -- Method: Exscan (sendbuf, recvbuf, op=SUM)

          Exclusive Scan.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.)

             * ‘op’ (*note Op: d3.)


          Return type: None(51)

      -- Method: Exscan_init (sendbuf, recvbuf, op=SUM, info=INFO_NULL)

          Persistent Exclusive Scan.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.)

             * ‘op’ (*note Op: d3.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Graph_map (index, edges)

          Determine optimal process placement on a graph topology.


          Parameters:

             * ‘index’ (Sequence(52)‘[’int(53)‘]’)

             * ‘edges’ (Sequence(54)‘[’int(55)‘]’)


          Return type: int(56)

      -- Method: Iexscan (sendbuf, recvbuf, op=SUM)

          Inclusive Scan.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.)

             * ‘op’ (*note Op: d3.)


          Return type: *note Request: 43.

      -- Method: Iscan (sendbuf, recvbuf, op=SUM)

          Inclusive Scan.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.)

             * ‘op’ (*note Op: d3.)


          Return type: *note Request: 43.

      -- Method: Scan (sendbuf, recvbuf, op=SUM)

          Inclusive Scan.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.)

             * ‘op’ (*note Op: d3.)


          Return type: None(57)

      -- Method: Scan_init (sendbuf, recvbuf, op=SUM, info=INFO_NULL)

          Persistent Inclusive Scan.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.‘ | ’*note InPlace: 20c.)

             * ‘recvbuf’ (*note BufSpec: 212.)

             * ‘op’ (*note Op: d3.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Spawn (command, args=None, maxprocs=1, info=INFO_NULL,
               root=0, errcodes=None)

          Spawn instances of a single MPI application.


          Parameters:

             * ‘command’ (str(58))

             * ‘args’ (Sequence(59)‘[’str(60)‘] ’‘| ’None(61))

             * ‘maxprocs’ (int(62))

             * ‘info’ (*note Info: d4.)

             * ‘root’ (int(63))

             * ‘errcodes’ (list(64)‘[’int(65)‘] ’‘| ’None(66))


          Return type: *note Intercomm: 20.

      -- Method: Spawn_multiple (command, args=None, maxprocs=None,
               info=INFO_NULL, root=0, errcodes=None)

          Spawn instances of multiple MPI applications.


          Parameters:

             * ‘command’ (Sequence(67)‘[’str(68)‘]’)

             * ‘args’ (Sequence(69)‘[’Sequence(70)‘[’str(71)‘]’‘] ’‘|
               ’None(72))

             * ‘maxprocs’ (Sequence(73)‘[’int(74)‘] ’‘| ’None(75))

             * ‘info’ (Sequence(76)‘[’*note Info: d4.‘] ’‘| ’*note Info:
               d4.)

             * ‘root’ (int(77))

             * ‘errcodes’ (list(78)‘[’list(79)‘[’int(80)‘]’‘] ’‘|
               ’None(81))


          Return type: *note Intercomm: 20.

      -- Method: exscan (sendobj, op=SUM)

          Exclusive Scan.


          Parameters:

             * ‘sendobj’ (Any(82))

             * ‘op’ (*note Op: d3.‘ | ’Callable(83)‘[’‘[’Any(84)‘,
               ’Any(85)‘]’‘, ’Any(86)‘]’)


          Return type: Any(87)

      -- Method: scan (sendobj, op=SUM)

          Inclusive Scan.


          Parameters:

             * ‘sendobj’ (Any(88))

             * ‘op’ (*note Op: d3.‘ | ’Callable(89)‘[’‘[’Any(90)‘,
               ’Any(91)‘]’‘, ’Any(92)‘]’)


          Return type: Any(93)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/typing.html#typing.Self

   (3) https://docs.python.org/3/library/stdtypes.html#str

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/typing.html#typing.Sequence

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/typing.html#typing.Sequence

   (8) https://docs.python.org/3/library/functions.html#bool

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/stdtypes.html#str

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/typing.html#typing.Sequence

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/typing.html#typing.Sequence

   (16) https://docs.python.org/3/library/functions.html#bool

   (17) https://docs.python.org/3/library/constants.html#None

   (18) https://docs.python.org/3/library/functions.html#bool

   (19) https://docs.python.org/3/library/typing.html#typing.Sequence

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/typing.html#typing.Sequence

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/typing.html#typing.Sequence

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/typing.html#typing.Sequence

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/constants.html#None

   (28) https://docs.python.org/3/library/functions.html#bool

   (29) https://docs.python.org/3/library/typing.html#typing.Sequence

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/typing.html#typing.Sequence

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/typing.html#typing.Sequence

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/constants.html#None

   (36) https://docs.python.org/3/library/typing.html#typing.Sequence

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/constants.html#None

   (39) https://docs.python.org/3/library/functions.html#bool

   (40) https://docs.python.org/3/library/stdtypes.html#str

   (41) https://docs.python.org/3/library/constants.html#None

   (42) https://docs.python.org/3/library/typing.html#typing.Sequence

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/typing.html#typing.Sequence

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#bool

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/constants.html#None

   (52) https://docs.python.org/3/library/typing.html#typing.Sequence

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/typing.html#typing.Sequence

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/constants.html#None

   (58) https://docs.python.org/3/library/stdtypes.html#str

   (59) https://docs.python.org/3/library/typing.html#typing.Sequence

   (60) https://docs.python.org/3/library/stdtypes.html#str

   (61) https://docs.python.org/3/library/constants.html#None

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/stdtypes.html#list

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/constants.html#None

   (67) https://docs.python.org/3/library/typing.html#typing.Sequence

   (68) https://docs.python.org/3/library/stdtypes.html#str

   (69) https://docs.python.org/3/library/typing.html#typing.Sequence

   (70) https://docs.python.org/3/library/typing.html#typing.Sequence

   (71) https://docs.python.org/3/library/stdtypes.html#str

   (72) https://docs.python.org/3/library/constants.html#None

   (73) https://docs.python.org/3/library/typing.html#typing.Sequence

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/constants.html#None

   (76) https://docs.python.org/3/library/typing.html#typing.Sequence

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/stdtypes.html#list

   (79) https://docs.python.org/3/library/stdtypes.html#list

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/constants.html#None

   (82) https://docs.python.org/3/library/typing.html#typing.Any

   (83) https://docs.python.org/3/library/typing.html#typing.Callable

   (84) https://docs.python.org/3/library/typing.html#typing.Any

   (85) https://docs.python.org/3/library/typing.html#typing.Any

   (86) https://docs.python.org/3/library/typing.html#typing.Any

   (87) https://docs.python.org/3/library/typing.html#typing.Any

   (88) https://docs.python.org/3/library/typing.html#typing.Any

   (89) https://docs.python.org/3/library/typing.html#typing.Callable

   (90) https://docs.python.org/3/library/typing.html#typing.Any

   (91) https://docs.python.org/3/library/typing.html#typing.Any

   (92) https://docs.python.org/3/library/typing.html#typing.Any

   (93) https://docs.python.org/3/library/typing.html#typing.Any


File: mpi4py.info,  Node: mpi4py MPI Message,  Next: mpi4py MPI Op,  Prev: mpi4py MPI Intracomm,  Up: mpi4py MPI<2>

11.1.16 mpi4py.MPI.Message
--------------------------

 -- Class: mpi4py.MPI.Message

     Bases: object(1)

     Matched message.

      -- Method: static __new__ (cls, message=None)


          Parameters: ‘message’ (*note Message: d7.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Iprobe: 42b.(comm[,Nonblocking test for a matched message.
     source, tag,   
     status])

     *note Irecv: 42c.(buf)Nonblocking receive of matched message.
                    
                    
     *note Probe: 42d.(comm[,Blocking test for a matched message.
     source, tag,   
     status])

     *note Recv: 42e.(buf[,Blocking receive of matched message.
     status])       

     *note f2py: 42f.(arg)

     *note free: 430.()Do nothing.
                    
                    
     *note fromhandle: 431.(handle)Create object from MPI handle.
                    
                    
     *note iprobe: 432.(comm[,Nonblocking test for a matched message.
     source, tag,   
     status])

     *note irecv: 433.()Nonblocking receive of matched message.
                    
                    
     *note probe: 434.(comm[,Blocking test for a matched message.
     source, tag,   
     status])

     *note py2f: 435.()

     *note recv: 436.([status])Blocking receive of matched message.
                    

     Attributes Summary
     ..................

     *note handle: 437.MPI handle.
                    

     Methods Documentation
     .....................

      -- Method: classmethod Iprobe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Nonblocking test for a matched message.


          Parameters:

             * ‘comm’ (*note Comm: 1e.)

             * ‘source’ (int(4))

             * ‘tag’ (int(5))

             * ‘status’ (*note Status: d1.‘ | ’None(6))


          Return type: Self(7) | None(8)

      -- Method: Irecv (buf)

          Nonblocking receive of matched message.


          Parameters: ‘buf’ (*note BufSpec: 212.)


          Return type: *note Request: 43.

      -- Method: classmethod Probe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Blocking test for a matched message.


          Parameters:

             * ‘comm’ (*note Comm: 1e.)

             * ‘source’ (int(9))

             * ‘tag’ (int(10))

             * ‘status’ (*note Status: d1.‘ | ’None(11))


          Return type: Self(12)

      -- Method: Recv (buf, status=None)

          Blocking receive of matched message.


          Parameters:

             * ‘buf’ (*note BufSpec: 212.)

             * ‘status’ (*note Status: d1.‘ | ’None(13))


          Return type: None(14)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(15))


          Return type: *note Message: d7.

      -- Method: free ()

          Do nothing.


          Return type: None(16)

      -- Method: classmethod fromhandle (handle)

          Create object from MPI handle.


          Parameters: ‘handle’ (int(17))


          Return type: *note Message: d7.

      -- Method: classmethod iprobe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Nonblocking test for a matched message.


          Parameters:

             * ‘comm’ (*note Comm: 1e.)

             * ‘source’ (int(18))

             * ‘tag’ (int(19))

             * ‘status’ (*note Status: d1.‘ | ’None(20))


          Return type: Self(21) | None(22)

      -- Method: irecv ()

          Nonblocking receive of matched message.


          Return type: *note Request: 43.

      -- Method: classmethod probe (comm, source=ANY_SOURCE,
               tag=ANY_TAG, status=None)

          Blocking test for a matched message.


          Parameters:

             * ‘comm’ (*note Comm: 1e.)

             * ‘source’ (int(23))

             * ‘tag’ (int(24))

             * ‘status’ (*note Status: d1.‘ | ’None(25))


          Return type: Self(26)

      -- Method: py2f ()


          Return type: int(27)

      -- Method: recv (status=None)

          Blocking receive of matched message.


          Parameters: ‘status’ (*note Status: d1.‘ | ’None(28))


          Return type: Any(29)

     Attributes Documentation
     ........................

      -- Attribute: handle

          MPI handle.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/typing.html#typing.Self

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/typing.html#typing.Self

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/constants.html#None

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/constants.html#None

   (21) https://docs.python.org/3/library/typing.html#typing.Self

   (22) https://docs.python.org/3/library/constants.html#None

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/constants.html#None

   (26) https://docs.python.org/3/library/typing.html#typing.Self

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/constants.html#None

   (29) https://docs.python.org/3/library/typing.html#typing.Any


File: mpi4py.info,  Node: mpi4py MPI Op,  Next: mpi4py MPI Pickle,  Prev: mpi4py MPI Message,  Up: mpi4py MPI<2>

11.1.17 mpi4py.MPI.Op
---------------------

 -- Class: mpi4py.MPI.Op

     Bases: object(1)

     Reduction operation.

      -- Method: static __new__ (cls, op=None)


          Parameters: ‘op’ (*note Op: d3.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Create: 43b.(function[,Create a user-defined reduction operation.
     commute])      

     *note Free: 43c.()Free a user-defined reduction operation.
                    
                    
     *note Is_commutative: 43d.()Query reduction operations for their commutativity.
                    
                    
     *note Reduce_local: 43e.(inbuf,Apply a reduction operation to local data.
     inoutbuf)      

     *note f2py: 43f.(arg)

     *note free: 440.()Call *note Free: 43c. if not null or predefined.
                    
                    
     *note fromhandle: 441.(handle)Create object from MPI handle.
                    
                    
     *note py2f: 442.()

     Attributes Summary
     ..................

     *note handle: 443.MPI handle.
                    
                    
     *note is_commutative: 444.Is a commutative operation.
                    
                    
     *note is_predefined: 445.Is a predefined operation.
                    

     Methods Documentation
     .....................

      -- Method: classmethod Create (function, commute=False)

          Create a user-defined reduction operation.


          Parameters:

             * ‘function’ (Callable(4)‘[’‘[’*note Buffer: 20a.‘, ’*note
               Buffer: 20a.‘, ’*note Datatype: d0.‘]’‘, ’None(5)‘]’)

             * ‘commute’ (bool(6))


          Return type: Self(7)

      -- Method: Free ()

          Free a user-defined reduction operation.


          Return type: None(8)

      -- Method: Is_commutative ()

          Query reduction operations for their commutativity.


          Return type: bool(9)

      -- Method: Reduce_local (inbuf, inoutbuf)

          Apply a reduction operation to local data.


          Parameters:

             * ‘inbuf’ (*note BufSpec: 212.)

             * ‘inoutbuf’ (*note BufSpec: 212.)


          Return type: None(10)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(11))


          Return type: *note Op: d3.

      -- Method: free ()

          Call *note Free: 43c. if not null or predefined.


          Return type: None(12)

      -- Method: classmethod fromhandle (handle)

          Create object from MPI handle.


          Parameters: ‘handle’ (int(13))


          Return type: *note Op: d3.

      -- Method: py2f ()


          Return type: int(14)

     Attributes Documentation
     ........................

      -- Attribute: handle

          MPI handle.

      -- Attribute: is_commutative

          Is a commutative operation.

      -- Attribute: is_predefined

          Is a predefined operation.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/typing.html#typing.Callable

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/functions.html#bool

   (7) https://docs.python.org/3/library/typing.html#typing.Self

   (8) https://docs.python.org/3/library/constants.html#None

   (9) https://docs.python.org/3/library/functions.html#bool

   (10) https://docs.python.org/3/library/constants.html#None

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/constants.html#None

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Pickle,  Next: mpi4py MPI Prequest,  Prev: mpi4py MPI Op,  Up: mpi4py MPI<2>

11.1.18 mpi4py.MPI.Pickle
-------------------------

 -- Class: mpi4py.MPI.Pickle

     Bases: object(1)

     Pickle/unpickle Python objects.

      -- Method: static __new__ (cls, pickle=None)


          Parameters: ‘pickle’ (*note Pickle: d9.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note dumps: 449.(obj)Serialize object to pickle data stream.
                    
                    
     *note dumps_oob: 44a.(obj)Serialize object to pickle data stream and out-of-band buffers.
                    
                    
     *note loads: 44b.(data)Deserialize object from pickle data stream.
                    
                    
     *note loads_oob: 44c.(data,Deserialize object from pickle data stream and out-of-band buffers.
     buffers)       

     Attributes Summary
     ..................

     *note PROTOCOL: a7.Protocol version.
                    
                    
     *note THRESHOLD: c8.Out-of-band threshold.
                    

     Methods Documentation
     .....................

      -- Method: dumps (obj)

          Serialize object to pickle data stream.


          Parameters: ‘obj’ (Any(4))


          Return type: bytes(5)

      -- Method: dumps_oob (obj)

          Serialize object to pickle data stream and out-of-band
          buffers.


          Parameters: ‘obj’ (Any(6))


          Return type: tuple(7)[bytes(8), list(9)[*note buffer: da.]]

      -- Method: loads (data)

          Deserialize object from pickle data stream.


          Parameters: ‘data’ (*note Buffer: 20a.)


          Return type: Any(10)

      -- Method: loads_oob (data, buffers)

          Deserialize object from pickle data stream and out-of-band
          buffers.


          Parameters:

             * ‘data’ (*note Buffer: 20a.)

             * ‘buffers’ (Iterable(11)‘[’*note Buffer: 20a.‘]’)


          Return type: Any(12)

     Attributes Documentation
     ........................

      -- Attribute: PROTOCOL

          Protocol version.

      -- Attribute: THRESHOLD

          Out-of-band threshold.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/typing.html#typing.Any

   (5) https://docs.python.org/3/library/stdtypes.html#bytes

   (6) https://docs.python.org/3/library/typing.html#typing.Any

   (7) https://docs.python.org/3/library/stdtypes.html#tuple

   (8) https://docs.python.org/3/library/stdtypes.html#bytes

   (9) https://docs.python.org/3/library/stdtypes.html#list

   (10) https://docs.python.org/3/library/typing.html#typing.Any

   (11) https://docs.python.org/3/library/typing.html#typing.Iterable

   (12) https://docs.python.org/3/library/typing.html#typing.Any


File: mpi4py.info,  Node: mpi4py MPI Prequest,  Next: mpi4py MPI Request,  Prev: mpi4py MPI Pickle,  Up: mpi4py MPI<2>

11.1.19 mpi4py.MPI.Prequest
---------------------------

 -- Class: mpi4py.MPI.Prequest

     Bases: *note Request: 43.

     Persistent request handler.

      -- Method: static __new__ (cls, request=None)


          Parameters: ‘request’ (*note Prequest: 4a.‘ | ’None(1))


          Return type: Self(2)

     Methods Summary
     ...............

     *note Parrived: 450.(partition)Test partial completion of a partitioned receive operation.
                    
                    
     *note Pready: 451.(partition)Mark a given partition as ready.
                    
                    
     *note Pready_list: 452.(partitions)Mark a sequence of partitions as ready.
                    
                    
     *note Pready_range: 453.(partition_low,Mark a range of partitions as ready.
     partition_high)

     *note Start: 4b.()Initiate a communication with a persistent request.
                    
                    
     *note Startall: 454.(requests)Start a collection of persistent requests.
                    

     Methods Documentation
     .....................

      -- Method: Parrived (partition)

          Test partial completion of a partitioned receive operation.


          Parameters: ‘partition’ (int(3))


          Return type: bool(4)

      -- Method: Pready (partition)

          Mark a given partition as ready.


          Parameters: ‘partition’ (int(5))


          Return type: None(6)

      -- Method: Pready_list (partitions)

          Mark a sequence of partitions as ready.


          Parameters: ‘partitions’ (Sequence(7)‘[’int(8)‘]’)


          Return type: None(9)

      -- Method: Pready_range (partition_low, partition_high)

          Mark a range of partitions as ready.


          Parameters:

             * ‘partition_low’ (int(10))

             * ‘partition_high’ (int(11))


          Return type: None(12)

      -- Method: Start ()

          Initiate a communication with a persistent request.


          Return type: None(13)

      -- Method: classmethod Startall (requests)

          Start a collection of persistent requests.


          Parameters: ‘requests’ (list(14)‘[’*note Prequest: 4a.‘]’)


          Return type: None(15)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/typing.html#typing.Self

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#bool

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/typing.html#typing.Sequence

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/constants.html#None

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/stdtypes.html#list

   (15) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Request,  Next: mpi4py MPI Session,  Prev: mpi4py MPI Prequest,  Up: mpi4py MPI<2>

11.1.20 mpi4py.MPI.Request
--------------------------

 -- Class: mpi4py.MPI.Request

     Bases: object(1)

     Request handler.

      -- Method: static __new__ (cls, request=None)


          Parameters: ‘request’ (*note Request: 43.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Cancel: 46.()Cancel a request.
                    
                    
     *note Free: 458.()Free a communication request.
                    
                    
     *note Get_status: 459.([status])Non-destructive test for the completion of a request.
                    
                    
     *note Get_status_all: 45a.(requests[,Non-destructive test for the completion of all requests.
     statuses])     

     *note Get_status_any: 45b.(requests[,Non-destructive test for the completion of any requests.
     status])       

     *note Get_status_some: 45c.(requests[,Non-destructive test for completion of some requests.
     statuses])     

     *note Test: 44.([status])Test for the completion of a non-blocking operation.
                    
                    
     *note Testall: 45d.(requests[,Test for completion of all previously initiated requests.
     statuses])     

     *note Testany: 45e.(requests[,Test for completion of any previously initiated request.
     status])       

     *note Testsome: 45f.(requests[,Test for completion of some previously initiated requests.
     statuses])     

     *note Wait: 45.([status])Wait for a non-blocking operation to complete.
                    
                    
     *note Waitall: 460.(requests[,Wait for all previously initiated requests to complete.
     statuses])     

     *note Waitany: 461.(requests[,Wait for any previously initiated request to complete.
     status])       

     *note Waitsome: 462.(requests[,Wait for some previously initiated requests to complete.
     statuses])     

     *note cancel: 463.()Cancel a request.
                    
                    
     *note f2py: 464.(arg)

     *note free: 465.()Call *note Free: 458. if not null.
                    
                    
     *note fromhandle: 466.(handle)Create object from MPI handle.
                    
                    
     *note get_status: 467.([status])Non-destructive test for the completion of a request.
                    
                    
     *note get_status_all: 468.(requests[,Non-destructive test for the completion of all requests.
     statuses])     

     *note get_status_any: 469.(requests[,Non-destructive test for the completion of any requests.
     status])       

     *note get_status_some: 46a.(requests[,Non-destructive test for completion of some requests.
     statuses])     

     *note py2f: 46b.()

     *note test: a3.([status])Test for the completion of a non-blocking operation.
                    
                    
     *note testall: 46c.(requests[,Test for completion of all previously initiated requests.
     statuses])     

     *note testany: 46d.(requests[,Test for completion of any previously initiated request.
     status])       

     *note testsome: 46e.(requests[,Test for completion of some previously initiated requests.
     statuses])     

     *note wait: a4.([status])Wait for a non-blocking operation to complete.
                    
                    
     *note waitall: 46f.(requests[,Wait for all previously initiated requests to complete.
     statuses])     

     *note waitany: 470.(requests[,Wait for any previously initiated request to complete.
     status])       

     *note waitsome: 471.(requests[,Wait for some previously initiated requests to complete.
     statuses])     

     Attributes Summary
     ..................

     *note handle: 472.MPI handle.
                    

     Methods Documentation
     .....................

      -- Method: Cancel ()

          Cancel a request.


          Return type: None(4)

      -- Method: Free ()

          Free a communication request.


          Return type: None(5)

      -- Method: Get_status (status=None)

          Non-destructive test for the completion of a request.


          Parameters: ‘status’ (*note Status: d1.‘ | ’None(6))


          Return type: bool(7)

      -- Method: classmethod Get_status_all (requests, statuses=None)

          Non-destructive test for the completion of all requests.


          Parameters:

             * ‘requests’ (Sequence(8)‘[’*note Request: 43.‘]’)

             * ‘statuses’ (list(9)‘[’*note Status: d1.‘] ’‘| ’None(10))


          Return type: bool(11)

      -- Method: classmethod Get_status_any (requests, status=None)

          Non-destructive test for the completion of any requests.


          Parameters:

             * ‘requests’ (Sequence(12)‘[’*note Request: 43.‘]’)

             * ‘status’ (*note Status: d1.‘ | ’None(13))


          Return type: tuple(14)[int(15), bool(16)]

      -- Method: classmethod Get_status_some (requests, statuses=None)

          Non-destructive test for completion of some requests.


          Parameters:

             * ‘requests’ (Sequence(17)‘[’*note Request: 43.‘]’)

             * ‘statuses’ (list(18)‘[’*note Status: d1.‘] ’‘| ’None(19))


          Return type: list(20)[int(21)] | None(22)

      -- Method: Test (status=None)

          Test for the completion of a non-blocking operation.


          Parameters: ‘status’ (*note Status: d1.‘ | ’None(23))


          Return type: bool(24)

      -- Method: classmethod Testall (requests, statuses=None)

          Test for completion of all previously initiated requests.


          Parameters:

             * ‘requests’ (Sequence(25)‘[’*note Request: 43.‘]’)

             * ‘statuses’ (list(26)‘[’*note Status: d1.‘] ’‘| ’None(27))


          Return type: bool(28)

      -- Method: classmethod Testany (requests, status=None)

          Test for completion of any previously initiated request.


          Parameters:

             * ‘requests’ (Sequence(29)‘[’*note Request: 43.‘]’)

             * ‘status’ (*note Status: d1.‘ | ’None(30))


          Return type: tuple(31)[int(32), bool(33)]

      -- Method: classmethod Testsome (requests, statuses=None)

          Test for completion of some previously initiated requests.


          Parameters:

             * ‘requests’ (Sequence(34)‘[’*note Request: 43.‘]’)

             * ‘statuses’ (list(35)‘[’*note Status: d1.‘] ’‘| ’None(36))


          Return type: list(37)[int(38)] | None(39)

      -- Method: Wait (status=None)

          Wait for a non-blocking operation to complete.


          Parameters: ‘status’ (*note Status: d1.‘ | ’None(40))


          Return type: Literal(41)[True]

      -- Method: classmethod Waitall (requests, statuses=None)

          Wait for all previously initiated requests to complete.


          Parameters:

             * ‘requests’ (Sequence(42)‘[’*note Request: 43.‘]’)

             * ‘statuses’ (list(43)‘[’*note Status: d1.‘] ’‘| ’None(44))


          Return type: Literal(45)[True]

      -- Method: classmethod Waitany (requests, status=None)

          Wait for any previously initiated request to complete.


          Parameters:

             * ‘requests’ (Sequence(46)‘[’*note Request: 43.‘]’)

             * ‘status’ (*note Status: d1.‘ | ’None(47))


          Return type: int(48)

      -- Method: classmethod Waitsome (requests, statuses=None)

          Wait for some previously initiated requests to complete.


          Parameters:

             * ‘requests’ (Sequence(49)‘[’*note Request: 43.‘]’)

             * ‘statuses’ (list(50)‘[’*note Status: d1.‘] ’‘| ’None(51))


          Return type: list(52)[int(53)] | None(54)

      -- Method: cancel ()

          Cancel a request.


          Return type: None(55)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(56))


          Return type: *note Request: 43.

      -- Method: free ()

          Call *note Free: 458. if not null.


          Return type: None(57)

      -- Method: classmethod fromhandle (handle)

          Create object from MPI handle.


          Parameters: ‘handle’ (int(58))


          Return type: *note Request: 43.

      -- Method: get_status (status=None)

          Non-destructive test for the completion of a request.


          Parameters: ‘status’ (*note Status: d1.‘ | ’None(59))


          Return type: bool(60)

      -- Method: classmethod get_status_all (requests, statuses=None)

          Non-destructive test for the completion of all requests.


          Parameters:

             * ‘requests’ (Sequence(61)‘[’*note Request: 43.‘]’)

             * ‘statuses’ (list(62)‘[’*note Status: d1.‘] ’‘| ’None(63))


          Return type: bool(64)

      -- Method: classmethod get_status_any (requests, status=None)

          Non-destructive test for the completion of any requests.


          Parameters:

             * ‘requests’ (Sequence(65)‘[’*note Request: 43.‘]’)

             * ‘status’ (*note Status: d1.‘ | ’None(66))


          Return type: tuple(67)[int(68), bool(69)]

      -- Method: classmethod get_status_some (requests, statuses=None)

          Non-destructive test for completion of some requests.


          Parameters:

             * ‘requests’ (Sequence(70)‘[’*note Request: 43.‘]’)

             * ‘statuses’ (list(71)‘[’*note Status: d1.‘] ’‘| ’None(72))


          Return type: list(73)[int(74)] | None(75)

      -- Method: py2f ()


          Return type: int(76)

      -- Method: test (status=None)

          Test for the completion of a non-blocking operation.


          Parameters: ‘status’ (*note Status: d1.‘ | ’None(77))


          Return type: tuple(78)[bool(79), Any(80) | None(81)]

      -- Method: classmethod testall (requests, statuses=None)

          Test for completion of all previously initiated requests.


          Parameters:

             * ‘requests’ (Sequence(82)‘[’*note Request: 43.‘]’)

             * ‘statuses’ (list(83)‘[’*note Status: d1.‘] ’‘| ’None(84))


          Return type: tuple(85)[bool(86), list(87)[Any(88)] | None(89)]

      -- Method: classmethod testany (requests, status=None)

          Test for completion of any previously initiated request.


          Parameters:

             * ‘requests’ (Sequence(90)‘[’*note Request: 43.‘]’)

             * ‘status’ (*note Status: d1.‘ | ’None(91))


          Return type: tuple(92)[int(93), bool(94), Any(95) | None(96)]

      -- Method: classmethod testsome (requests, statuses=None)

          Test for completion of some previously initiated requests.


          Parameters:

             * ‘requests’ (Sequence(97)‘[’*note Request: 43.‘]’)

             * ‘statuses’ (list(98)‘[’*note Status: d1.‘] ’‘| ’None(99))


          Return type: tuple(100)[list(101)[int(102)] | None(103),
          list(104)[Any(105)] | None(106)]

      -- Method: wait (status=None)

          Wait for a non-blocking operation to complete.


          Parameters: ‘status’ (*note Status: d1.‘ | ’None(107))


          Return type: Any(108)

      -- Method: classmethod waitall (requests, statuses=None)

          Wait for all previously initiated requests to complete.


          Parameters:

             * ‘requests’ (Sequence(109)‘[’*note Request: 43.‘]’)

             * ‘statuses’ (list(110)‘[’*note Status: d1.‘] ’‘|
               ’None(111))


          Return type: list(112)[Any(113)]

      -- Method: classmethod waitany (requests, status=None)

          Wait for any previously initiated request to complete.


          Parameters:

             * ‘requests’ (Sequence(114)‘[’*note Request: 43.‘]’)

             * ‘status’ (*note Status: d1.‘ | ’None(115))


          Return type: tuple(116)[int(117), Any(118)]

      -- Method: classmethod waitsome (requests, statuses=None)

          Wait for some previously initiated requests to complete.


          Parameters:

             * ‘requests’ (Sequence(119)‘[’*note Request: 43.‘]’)

             * ‘statuses’ (list(120)‘[’*note Status: d1.‘] ’‘|
               ’None(121))


          Return type: tuple(122)[list(123)[int(124)] | None(125),
          list(126)[Any(127)] | None(128)]

     Attributes Documentation
     ........................

      -- Attribute: handle

          MPI handle.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#bool

   (8) https://docs.python.org/3/library/typing.html#typing.Sequence

   (9) https://docs.python.org/3/library/stdtypes.html#list

   (10) https://docs.python.org/3/library/constants.html#None

   (11) https://docs.python.org/3/library/functions.html#bool

   (12) https://docs.python.org/3/library/typing.html#typing.Sequence

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/stdtypes.html#tuple

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#bool

   (17) https://docs.python.org/3/library/typing.html#typing.Sequence

   (18) https://docs.python.org/3/library/stdtypes.html#list

   (19) https://docs.python.org/3/library/constants.html#None

   (20) https://docs.python.org/3/library/stdtypes.html#list

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/constants.html#None

   (23) https://docs.python.org/3/library/constants.html#None

   (24) https://docs.python.org/3/library/functions.html#bool

   (25) https://docs.python.org/3/library/typing.html#typing.Sequence

   (26) https://docs.python.org/3/library/stdtypes.html#list

   (27) https://docs.python.org/3/library/constants.html#None

   (28) https://docs.python.org/3/library/functions.html#bool

   (29) https://docs.python.org/3/library/typing.html#typing.Sequence

   (30) https://docs.python.org/3/library/constants.html#None

   (31) https://docs.python.org/3/library/stdtypes.html#tuple

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#bool

   (34) https://docs.python.org/3/library/typing.html#typing.Sequence

   (35) https://docs.python.org/3/library/stdtypes.html#list

   (36) https://docs.python.org/3/library/constants.html#None

   (37) https://docs.python.org/3/library/stdtypes.html#list

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/constants.html#None

   (40) https://docs.python.org/3/library/constants.html#None

   (41) https://docs.python.org/3/library/typing.html#typing.Literal

   (42) https://docs.python.org/3/library/typing.html#typing.Sequence

   (43) https://docs.python.org/3/library/stdtypes.html#list

   (44) https://docs.python.org/3/library/constants.html#None

   (45) https://docs.python.org/3/library/typing.html#typing.Literal

   (46) https://docs.python.org/3/library/typing.html#typing.Sequence

   (47) https://docs.python.org/3/library/constants.html#None

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/typing.html#typing.Sequence

   (50) https://docs.python.org/3/library/stdtypes.html#list

   (51) https://docs.python.org/3/library/constants.html#None

   (52) https://docs.python.org/3/library/stdtypes.html#list

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/constants.html#None

   (55) https://docs.python.org/3/library/constants.html#None

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/constants.html#None

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/constants.html#None

   (60) https://docs.python.org/3/library/functions.html#bool

   (61) https://docs.python.org/3/library/typing.html#typing.Sequence

   (62) https://docs.python.org/3/library/stdtypes.html#list

   (63) https://docs.python.org/3/library/constants.html#None

   (64) https://docs.python.org/3/library/functions.html#bool

   (65) https://docs.python.org/3/library/typing.html#typing.Sequence

   (66) https://docs.python.org/3/library/constants.html#None

   (67) https://docs.python.org/3/library/stdtypes.html#tuple

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#bool

   (70) https://docs.python.org/3/library/typing.html#typing.Sequence

   (71) https://docs.python.org/3/library/stdtypes.html#list

   (72) https://docs.python.org/3/library/constants.html#None

   (73) https://docs.python.org/3/library/stdtypes.html#list

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/constants.html#None

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/constants.html#None

   (78) https://docs.python.org/3/library/stdtypes.html#tuple

   (79) https://docs.python.org/3/library/functions.html#bool

   (80) https://docs.python.org/3/library/typing.html#typing.Any

   (81) https://docs.python.org/3/library/constants.html#None

   (82) https://docs.python.org/3/library/typing.html#typing.Sequence

   (83) https://docs.python.org/3/library/stdtypes.html#list

   (84) https://docs.python.org/3/library/constants.html#None

   (85) https://docs.python.org/3/library/stdtypes.html#tuple

   (86) https://docs.python.org/3/library/functions.html#bool

   (87) https://docs.python.org/3/library/stdtypes.html#list

   (88) https://docs.python.org/3/library/typing.html#typing.Any

   (89) https://docs.python.org/3/library/constants.html#None

   (90) https://docs.python.org/3/library/typing.html#typing.Sequence

   (91) https://docs.python.org/3/library/constants.html#None

   (92) https://docs.python.org/3/library/stdtypes.html#tuple

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/functions.html#bool

   (95) https://docs.python.org/3/library/typing.html#typing.Any

   (96) https://docs.python.org/3/library/constants.html#None

   (97) https://docs.python.org/3/library/typing.html#typing.Sequence

   (98) https://docs.python.org/3/library/stdtypes.html#list

   (99) https://docs.python.org/3/library/constants.html#None

   (100) https://docs.python.org/3/library/stdtypes.html#tuple

   (101) https://docs.python.org/3/library/stdtypes.html#list

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/constants.html#None

   (104) https://docs.python.org/3/library/stdtypes.html#list

   (105) https://docs.python.org/3/library/typing.html#typing.Any

   (106) https://docs.python.org/3/library/constants.html#None

   (107) https://docs.python.org/3/library/constants.html#None

   (108) https://docs.python.org/3/library/typing.html#typing.Any

   (109) https://docs.python.org/3/library/typing.html#typing.Sequence

   (110) https://docs.python.org/3/library/stdtypes.html#list

   (111) https://docs.python.org/3/library/constants.html#None

   (112) https://docs.python.org/3/library/stdtypes.html#list

   (113) https://docs.python.org/3/library/typing.html#typing.Any

   (114) https://docs.python.org/3/library/typing.html#typing.Sequence

   (115) https://docs.python.org/3/library/constants.html#None

   (116) https://docs.python.org/3/library/stdtypes.html#tuple

   (117) https://docs.python.org/3/library/functions.html#int

   (118) https://docs.python.org/3/library/typing.html#typing.Any

   (119) https://docs.python.org/3/library/typing.html#typing.Sequence

   (120) https://docs.python.org/3/library/stdtypes.html#list

   (121) https://docs.python.org/3/library/constants.html#None

   (122) https://docs.python.org/3/library/stdtypes.html#tuple

   (123) https://docs.python.org/3/library/stdtypes.html#list

   (124) https://docs.python.org/3/library/functions.html#int

   (125) https://docs.python.org/3/library/constants.html#None

   (126) https://docs.python.org/3/library/stdtypes.html#list

   (127) https://docs.python.org/3/library/typing.html#typing.Any

   (128) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Session,  Next: mpi4py MPI Status,  Prev: mpi4py MPI Request,  Up: mpi4py MPI<2>

11.1.21 mpi4py.MPI.Session
--------------------------

 -- Class: mpi4py.MPI.Session

     Bases: object(1)

     Session context.

      -- Method: static __new__ (cls, session=None)


          Parameters: ‘session’ (*note Session: d5.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Attach_buffer: 476.(buf)Attach a user-provided buffer for sending in buffered mode.
                    
                    
     *note Call_errhandler: 477.(errorcode)Call the error handler installed on a session.
                    
                    
     *note Create_errhandler: 478.(errhandler_fn)Create a new error handler for sessions.
                    
                    
     *note Create_group: 479.(pset_name)Create a new group from session and process set.
                    
                    
     *note Detach_buffer: 47a.()Remove an existing attached buffer.
                    
                    
     *note Finalize: 47b.()Finalize a session.
                    
                    
     *note Flush_buffer: 47c.()Block until all buffered messages have been transmitted.
                    
                    
     *note Get_errhandler: 47d.()Get the error handler for a session.
                    
                    
     *note Get_info: 47e.()Return the current hints for a session.
                    
                    
     *note Get_nth_pset: 47f.(n[,Name of the 'n'-th process set.
     info])         

     *note Get_num_psets: 480.([info])Number of available process sets.
                    
                    
     *note Get_pset_info: 481.(pset_name)Return the current hints for a session and process set.
                    
                    
     *note Iflush_buffer: 482.()Nonblocking flush for buffered messages.
                    
                    
     *note Init: 483.([info,Create a new session.
     errhandler])   

     *note Set_errhandler: 484.(errhandler)Set the error handler for a session.
                    
                    
     *note f2py: 485.(arg)

     *note free: 486.()Call *note Finalize: 47b. if not null.
                    
                    
     *note fromhandle: 487.(handle)Create object from MPI handle.
                    
                    
     *note py2f: 488.()

     Attributes Summary
     ..................

     *note handle: 489.MPI handle.
                    

     Methods Documentation
     .....................

      -- Method: Attach_buffer (buf)

          Attach a user-provided buffer for sending in buffered mode.


          Parameters: ‘buf’ (*note Buffer: 20a.‘ | ’None(4))


          Return type: None(5)

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a session.


          Parameters: ‘errorcode’ (int(6))


          Return type: None(7)

      -- Method: classmethod Create_errhandler (errhandler_fn)

          Create a new error handler for sessions.


          Parameters: ‘errhandler_fn’ (Callable(8)‘[’‘[’*note Session:
          d5.‘, ’int(9)‘]’‘, ’None(10)‘]’)


          Return type: *note Errhandler: d8.

      -- Method: Create_group (pset_name)

          Create a new group from session and process set.


          Parameters: ‘pset_name’ (str(11))


          Return type: *note Group: 28.

      -- Method: Detach_buffer ()

          Remove an existing attached buffer.


          Return type: *note Buffer: 20a. | None(12)

      -- Method: Finalize ()

          Finalize a session.


          Return type: None(13)

      -- Method: Flush_buffer ()

          Block until all buffered messages have been transmitted.


          Return type: None(14)

      -- Method: Get_errhandler ()

          Get the error handler for a session.


          Return type: *note Errhandler: d8.

      -- Method: Get_info ()

          Return the current hints for a session.


          Return type: *note Info: d4.

      -- Method: Get_nth_pset (n, info=INFO_NULL)

          Name of the 'n'-th process set.


          Parameters:

             * ‘n’ (int(15))

             * ‘info’ (*note Info: d4.)


          Return type: str(16)

      -- Method: Get_num_psets (info=INFO_NULL)

          Number of available process sets.


          Parameters: ‘info’ (*note Info: d4.)


          Return type: int(17)

      -- Method: Get_pset_info (pset_name)

          Return the current hints for a session and process set.


          Parameters: ‘pset_name’ (str(18))


          Return type: *note Info: d4.

      -- Method: Iflush_buffer ()

          Nonblocking flush for buffered messages.


          Return type: *note Request: 43.

      -- Method: classmethod Init (info=INFO_NULL, errhandler=None)

          Create a new session.


          Parameters:

             * ‘info’ (*note Info: d4.)

             * ‘errhandler’ (*note Errhandler: d8.‘ | ’None(19))


          Return type: Self(20)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a session.


          Parameters: ‘errhandler’ (*note Errhandler: d8.)


          Return type: None(21)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(22))


          Return type: *note Session: d5.

      -- Method: free ()

          Call *note Finalize: 47b. if not null.


          Return type: None(23)

      -- Method: classmethod fromhandle (handle)

          Create object from MPI handle.


          Parameters: ‘handle’ (int(24))


          Return type: *note Session: d5.

      -- Method: py2f ()


          Return type: int(25)

     Attributes Documentation
     ........................

      -- Attribute: handle

          MPI handle.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/typing.html#typing.Callable

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/constants.html#None

   (11) https://docs.python.org/3/library/stdtypes.html#str

   (12) https://docs.python.org/3/library/constants.html#None

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/constants.html#None

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/stdtypes.html#str

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/stdtypes.html#str

   (19) https://docs.python.org/3/library/constants.html#None

   (20) https://docs.python.org/3/library/typing.html#typing.Self

   (21) https://docs.python.org/3/library/constants.html#None

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/constants.html#None

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Status,  Next: mpi4py MPI Topocomm,  Prev: mpi4py MPI Session,  Up: mpi4py MPI<2>

11.1.22 mpi4py.MPI.Status
-------------------------

 -- Class: mpi4py.MPI.Status

     Bases: object(1)

     Status object.

      -- Method: static __new__ (cls, status=None)


          Parameters: ‘status’ (*note Status: d1.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Get_count: 48d.([datatype])Get the number of 'top level' elements.
                    
                    
     *note Get_elements: 48e.(datatype)Get the number of basic elements in a datatype.
                    
                    
     *note Get_error: 48f.()Get message error.
                    
                    
     *note Get_source: 490.()Get message source.
                    
                    
     *note Get_tag: 491.()Get message tag.
                    
                    
     *note Is_cancelled: 492.()Test to see if a request was cancelled.
                    
                    
     *note Set_cancelled: 493.(flag)Set the cancelled state associated with a status.
                    
                    
     *note Set_elements: 494.(datatype,Set the number of elements in a status.
     count)         

     *note Set_error: 495.(error)Set message error.
                    
                    
     *note Set_source: 496.(source)Set message source.
                    
                    
     *note Set_tag: 497.(tag)Set message tag.
                    
                    
     *note f2py: 498.(arg)

     *note py2f: 499.()

     Attributes Summary
     ..................

     *note cancelled: 49a.Cancelled state.
                    
                    
     *note count: 49b.Byte count.
                    
                    
     *note error: 49c.Message error.
                    
                    
     *note source: 49d.Message source.
                    
                    
     *note tag: 49e.Message tag.
                    

     Methods Documentation
     .....................

      -- Method: Get_count (datatype=BYTE)

          Get the number of 'top level' elements.


          Parameters: ‘datatype’ (*note Datatype: d0.)


          Return type: int(4)

      -- Method: Get_elements (datatype)

          Get the number of basic elements in a datatype.


          Parameters: ‘datatype’ (*note Datatype: d0.)


          Return type: int(5)

      -- Method: Get_error ()

          Get message error.


          Return type: int(6)

      -- Method: Get_source ()

          Get message source.


          Return type: int(7)

      -- Method: Get_tag ()

          Get message tag.


          Return type: int(8)

      -- Method: Is_cancelled ()

          Test to see if a request was cancelled.


          Return type: bool(9)

      -- Method: Set_cancelled (flag)

          Set the cancelled state associated with a status.

               Note: This method should be used only when implementing
               query callback functions for generalized requests.


          Parameters: ‘flag’ (bool(10))


          Return type: None(11)

      -- Method: Set_elements (datatype, count)

          Set the number of elements in a status.

               Note: This method should be only used when implementing
               query callback functions for generalized requests.


          Parameters:

             * ‘datatype’ (*note Datatype: d0.)

             * ‘count’ (int(12))


          Return type: None(13)

      -- Method: Set_error (error)

          Set message error.


          Parameters: ‘error’ (int(14))


          Return type: None(15)

      -- Method: Set_source (source)

          Set message source.


          Parameters: ‘source’ (int(16))


          Return type: None(17)

      -- Method: Set_tag (tag)

          Set message tag.


          Parameters: ‘tag’ (int(18))


          Return type: None(19)

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (list(20)‘[’int(21)‘]’)


          Return type: Self(22)

      -- Method: py2f ()


          Return type: list(23)[int(24)]

     Attributes Documentation
     ........................

      -- Attribute: cancelled

          Cancelled state.

      -- Attribute: count

          Byte count.

      -- Attribute: error

          Message error.

      -- Attribute: source

          Message source.

      -- Attribute: tag

          Message tag.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#bool

   (10) https://docs.python.org/3/library/functions.html#bool

   (11) https://docs.python.org/3/library/constants.html#None

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/constants.html#None

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/constants.html#None

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/constants.html#None

   (20) https://docs.python.org/3/library/stdtypes.html#list

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/typing.html#typing.Self

   (23) https://docs.python.org/3/library/stdtypes.html#list

   (24) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Topocomm,  Next: mpi4py MPI Win,  Prev: mpi4py MPI Status,  Up: mpi4py MPI<2>

11.1.23 mpi4py.MPI.Topocomm
---------------------------

 -- Class: mpi4py.MPI.Topocomm

     Bases: *note Intracomm: 1f.

     Topology intracommunicator.

      -- Method: static __new__ (cls, comm=None)


          Parameters: ‘comm’ (*note Topocomm: d6.‘ | ’None(1))


          Return type: Self(2)

     Methods Summary
     ...............

     *note Ineighbor_allgather: 4a2.(sendbuf,Nonblocking Neighbor Gather to All.
     recvbuf)       

     *note Ineighbor_allgatherv: 4a3.(sendbuf,Nonblocking Neighbor Gather to All Vector.
     recvbuf)       

     *note Ineighbor_alltoall: 4a4.(sendbuf,Nonblocking Neighbor All to All.
     recvbuf)       

     *note Ineighbor_alltoallv: 4a5.(sendbuf,Nonblocking Neighbor All to All Vector.
     recvbuf)       

     *note Ineighbor_alltoallw: 4a6.(sendbuf,Nonblocking Neighbor All to All General.
     recvbuf)       

     *note Neighbor_allgather: 4a7.(sendbuf,Neighbor Gather to All.
     recvbuf)       

     *note Neighbor_allgather_init: 4a8.(sendbuf,Persistent Neighbor Gather to All.
     recvbuf[,      
     info])

     *note Neighbor_allgatherv: 4a9.(sendbuf,Neighbor Gather to All Vector.
     recvbuf)       

     *note Neighbor_allgatherv_init: 4aa.(sendbuf,Persistent Neighbor Gather to All Vector.
     recvbuf[,      
     ...])

     *note Neighbor_alltoall: 4ab.(sendbuf,Neighbor All to All.
     recvbuf)       

     *note Neighbor_alltoall_init: 4ac.(sendbuf,Persistent Neighbor All to All.
     recvbuf[,      
     info])

     *note Neighbor_alltoallv: 4ad.(sendbuf,Neighbor All to All Vector.
     recvbuf)       

     *note Neighbor_alltoallv_init: 4ae.(sendbuf,Persistent Neighbor All to All Vector.
     recvbuf[,      
     info])

     *note Neighbor_alltoallw: 4af.(sendbuf,Neighbor All to All General.
     recvbuf)       

     *note Neighbor_alltoallw_init: 4b0.(sendbuf,Persistent Neighbor All to All General.
     recvbuf[,      
     info])

     *note neighbor_allgather: 4b1.(sendobj)Neighbor Gather to All.
                    
                    
     *note neighbor_alltoall: 4b2.(sendobj)Neighbor All to All.
                    

     Attributes Summary
     ..................

     *note degrees: 4b3.Number of incoming and outgoing neighbors.
                    
                    
     *note indegree: 4b4.Number of incoming neighbors.
                    
                    
     *note inedges: 4b5.Incoming neighbors.
                    
                    
     *note inoutedges: 4b6.Incoming and outgoing neighbors.
                    
                    
     *note outdegree: 4b7.Number of outgoing neighbors.
                    
                    
     *note outedges: 4b8.Outgoing neighbors.
                    

     Methods Documentation
     .....................

      -- Method: Ineighbor_allgather (sendbuf, recvbuf)

          Nonblocking Neighbor Gather to All.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.)

             * ‘recvbuf’ (*note BufSpecB: 213.)


          Return type: *note Request: 43.

      -- Method: Ineighbor_allgatherv (sendbuf, recvbuf)

          Nonblocking Neighbor Gather to All Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.)

             * ‘recvbuf’ (*note BufSpecV: 214.)


          Return type: *note Request: 43.

      -- Method: Ineighbor_alltoall (sendbuf, recvbuf)

          Nonblocking Neighbor All to All.


          Parameters:

             * ‘sendbuf’ (*note BufSpecB: 213.)

             * ‘recvbuf’ (*note BufSpecB: 213.)


          Return type: *note Request: 43.

      -- Method: Ineighbor_alltoallv (sendbuf, recvbuf)

          Nonblocking Neighbor All to All Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpecV: 214.)

             * ‘recvbuf’ (*note BufSpecV: 214.)


          Return type: *note Request: 43.

      -- Method: Ineighbor_alltoallw (sendbuf, recvbuf)

          Nonblocking Neighbor All to All General.


          Parameters:

             * ‘sendbuf’ (*note BufSpecW: 215.)

             * ‘recvbuf’ (*note BufSpecW: 215.)


          Return type: *note Request: 43.

      -- Method: Neighbor_allgather (sendbuf, recvbuf)

          Neighbor Gather to All.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.)

             * ‘recvbuf’ (*note BufSpecB: 213.)


          Return type: None(3)

      -- Method: Neighbor_allgather_init (sendbuf, recvbuf,
               info=INFO_NULL)

          Persistent Neighbor Gather to All.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.)

             * ‘recvbuf’ (*note BufSpecB: 213.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Neighbor_allgatherv (sendbuf, recvbuf)

          Neighbor Gather to All Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.)

             * ‘recvbuf’ (*note BufSpecV: 214.)


          Return type: None(4)

      -- Method: Neighbor_allgatherv_init (sendbuf, recvbuf,
               info=INFO_NULL)

          Persistent Neighbor Gather to All Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpec: 212.)

             * ‘recvbuf’ (*note BufSpecV: 214.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Neighbor_alltoall (sendbuf, recvbuf)

          Neighbor All to All.


          Parameters:

             * ‘sendbuf’ (*note BufSpecB: 213.)

             * ‘recvbuf’ (*note BufSpecB: 213.)


          Return type: None(5)

      -- Method: Neighbor_alltoall_init (sendbuf, recvbuf,
               info=INFO_NULL)

          Persistent Neighbor All to All.


          Parameters:

             * ‘sendbuf’ (*note BufSpecB: 213.)

             * ‘recvbuf’ (*note BufSpecB: 213.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Neighbor_alltoallv (sendbuf, recvbuf)

          Neighbor All to All Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpecV: 214.)

             * ‘recvbuf’ (*note BufSpecV: 214.)


          Return type: None(6)

      -- Method: Neighbor_alltoallv_init (sendbuf, recvbuf,
               info=INFO_NULL)

          Persistent Neighbor All to All Vector.


          Parameters:

             * ‘sendbuf’ (*note BufSpecV: 214.)

             * ‘recvbuf’ (*note BufSpecV: 214.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: Neighbor_alltoallw (sendbuf, recvbuf)

          Neighbor All to All General.


          Parameters:

             * ‘sendbuf’ (*note BufSpecW: 215.)

             * ‘recvbuf’ (*note BufSpecW: 215.)


          Return type: None(7)

      -- Method: Neighbor_alltoallw_init (sendbuf, recvbuf,
               info=INFO_NULL)

          Persistent Neighbor All to All General.


          Parameters:

             * ‘sendbuf’ (*note BufSpecW: 215.)

             * ‘recvbuf’ (*note BufSpecW: 215.)

             * ‘info’ (*note Info: d4.)


          Return type: *note Prequest: 4a.

      -- Method: neighbor_allgather (sendobj)

          Neighbor Gather to All.


          Parameters: ‘sendobj’ (Any(8))


          Return type: list(9)[Any(10)]

      -- Method: neighbor_alltoall (sendobj)

          Neighbor All to All.


          Parameters: ‘sendobj’ (list(11)‘[’Any(12)‘]’)


          Return type: list(13)[Any(14)]

     Attributes Documentation
     ........................

      -- Attribute: degrees

          Number of incoming and outgoing neighbors.

      -- Attribute: indegree

          Number of incoming neighbors.

      -- Attribute: inedges

          Incoming neighbors.

      -- Attribute: inoutedges

          Incoming and outgoing neighbors.

      -- Attribute: outdegree

          Number of outgoing neighbors.

      -- Attribute: outedges

          Outgoing neighbors.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/typing.html#typing.Self

   (3) https://docs.python.org/3/library/constants.html#None

   (4) https://docs.python.org/3/library/constants.html#None

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/constants.html#None

   (8) https://docs.python.org/3/library/typing.html#typing.Any

   (9) https://docs.python.org/3/library/stdtypes.html#list

   (10) https://docs.python.org/3/library/typing.html#typing.Any

   (11) https://docs.python.org/3/library/stdtypes.html#list

   (12) https://docs.python.org/3/library/typing.html#typing.Any

   (13) https://docs.python.org/3/library/stdtypes.html#list

   (14) https://docs.python.org/3/library/typing.html#typing.Any


File: mpi4py.info,  Node: mpi4py MPI Win,  Next: mpi4py MPI buffer,  Prev: mpi4py MPI Topocomm,  Up: mpi4py MPI<2>

11.1.24 mpi4py.MPI.Win
----------------------

 -- Class: mpi4py.MPI.Win

     Bases: object(1)

     Remote memory access context.

      -- Method: static __new__ (cls, win=None)


          Parameters: ‘win’ (*note Win: 76.‘ | ’None(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Accumulate: 7b.(origin,Accumulate data into the target process.
     target_rank[,  
     target, op])

     *note Allocate: 4bc.(size[,Create an window object for one-sided communication.
     disp_unit,     
     info, comm])

     *note Allocate_shared: 4bd.(size[,Create an window object for one-sided communication.
     disp_unit,     
     info, comm])

     *note Attach: 4be.(memory)Attach a local memory region.
                    
                    
     *note Call_errhandler: 4bf.(errorcode)Call the error handler installed on a window.
                    
                    
     *note Compare_and_swap: 4c0.(origin,Perform one-sided atomic compare-and-swap.
     compare,       
     result, ...)

     *note Complete: 7d.()Complete an RMA operation begun after an *note Start: 7c.
                    
                    
     *note Create: 77.(memory[,Create an window object for one-sided communication.
     disp_unit,     
     info, comm])

     *note Create_dynamic: 4c1.([info,Create an window object for one-sided communication.
     comm])         

     *note Create_errhandler: 4c2.(errhandler_fn)Create a new error handler for windows.
                    
                    
     *note Create_keyval: 4c3.([copy_fn,Create a new attribute key for windows.
     delete_fn,     
     nopython])

     *note Delete_attr: 4c4.(keyval)Delete attribute value associated with a key.
                    
                    
     *note Detach: 4c5.(memory)Detach a local memory region.
                    
                    
     *note Fence: 80.([assertion])Perform an MPI fence synchronization on a window.
                    
                    
     *note Fetch_and_op: 4c6.(origin,Perform one-sided read-modify-write.
     result,        
     target_rank[,
     ...])

     *note Flush: 4c7.(rank)Complete all outstanding RMA operations at a target.
                    
                    
     *note Flush_all: 4c8.()Complete all outstanding RMA operations at all targets.
                    
                    
     *note Flush_local: 4c9.(rank)Complete locally all outstanding RMA operations at a target.
                    
                    
     *note Flush_local_all: 4ca.()Complete locally all outstanding RMA operations at all targets.
                    
                    
     *note Free: 78.()Free a window.
                    
                    
     *note Free_keyval: 4cb.(keyval)Free an attribute key for windows.
                    
                    
     *note Get: 7a.(origin,Get data from a memory window on a remote process.
     target_rank[,  
     target])

     *note Get_accumulate: 4cc.(origin,Fetch-and-accumulate data into the target process.
     result,        
     target_rank)

     *note Get_attr: 4cd.(keyval)Retrieve attribute value by key.
                    
                    
     *note Get_errhandler: 4ce.()Get the error handler for a window.
                    
                    
     *note Get_group: 4cf.()Access the group of processes that created the window.
                    
                    
     *note Get_info: 4d0.()Return the current hints for a window.
                    
                    
     *note Get_name: 4d1.()Get the print name for this window.
                    
                    
     *note Lock: 81.(rank[,Begin an RMA access epoch at the target process.
     lock_type,     
     assertion])

     *note Lock_all: 4d2.([assertion])Begin an RMA access epoch at all processes.
                    
                    
     *note Post: 7e.(group[,Start an RMA exposure epoch.
     assertion])    

     *note Put: 79.(origin,Put data into a memory window on a remote process.
     target_rank[,  
     target])

     *note Raccumulate: 4d3.(origin,Fetch-and-accumulate data into the target process.
     target_rank[,  
     target, op])

     *note Rget: 4d4.(origin,Get data from a memory window on a remote process.
     target_rank[,  
     target])

     *note Rget_accumulate: 4d5.(origin,Accumulate data into the target process using remote memory access.
     result,        
     target_rank)

     *note Rput: 4d6.(origin,Put data into a memory window on a remote process.
     target_rank[,  
     target])

     *note Set_attr: 4d7.(keyval,Store attribute value associated with a key.
     attrval)       

     *note Set_errhandler: 4d8.(errhandler)Set the error handler for a window.
                    
                    
     *note Set_info: 4d9.(info)Set new values for the hints associated with a window.
                    
                    
     *note Set_name: 4da.(name)Set the print name for this window.
                    
                    
     *note Shared_query: 4db.(rank)Query the process-local address for remote memory segments.
                    
                    
     *note Start: 7c.(group[,Start an RMA access epoch for MPI.
     assertion])    

     *note Sync: 4dc.()Synchronize public and private copies of the window.
                    
                    
     *note Test: 4dd.()Test whether an RMA exposure epoch has completed.
                    
                    
     *note Unlock: 82.(rank)Complete an RMA access epoch at the target process.
                    
                    
     *note Unlock_all: 4de.()Complete an RMA access epoch at all processes.
                    
                    
     *note Wait: 7f.()Complete an RMA exposure epoch begun with *note Post: 7e.
                    
                    
     *note f2py: 4df.(arg)

     *note free: 4e0.()Call *note Free: 78. if not null.
                    
                    
     *note fromhandle: 4e1.(handle)Create object from MPI handle.
                    
                    
     *note py2f: 4e2.()

     *note tomemory: 4e3.()Return window memory buffer.
                    

     Attributes Summary
     ..................

     *note attrs: 4e4.Attributes.
                    
                    
     *note flavor: 4e5.Create flavor.
                    
                    
     *note group: 4e6.Group.
                    
                    
     *note group_rank: 4e7.Group rank.
                    
                    
     *note group_size: 4e8.Group size.
                    
                    
     *note handle: 4e9.MPI handle.
                    
                    
     *note info: 4ea.Info hints.
                    
                    
     *note model: 4eb.Memory model.
                    
                    
     *note name: 4ec.Print name.
                    

     Methods Documentation
     .....................

      -- Method: Accumulate (origin, target_rank, target=None, op=SUM)

          Accumulate data into the target process.


          Parameters:

             * ‘origin’ (*note BufSpec: 212.)

             * ‘target_rank’ (int(4))

             * ‘target’ (*note TargetSpec: 216.‘ | ’None(5))

             * ‘op’ (*note Op: d3.)


          Return type: None(6)

      -- Method: classmethod Allocate (size, disp_unit=1,
               info=INFO_NULL, comm=COMM_SELF)

          Create an window object for one-sided communication.


          Parameters:

             * ‘size’ (int(7))

             * ‘disp_unit’ (int(8))

             * ‘info’ (*note Info: d4.)

             * ‘comm’ (*note Intracomm: 1f.)


          Return type: Self(9)

      -- Method: classmethod Allocate_shared (size, disp_unit=1,
               info=INFO_NULL, comm=COMM_SELF)

          Create an window object for one-sided communication.


          Parameters:

             * ‘size’ (int(10))

             * ‘disp_unit’ (int(11))

             * ‘info’ (*note Info: d4.)

             * ‘comm’ (*note Intracomm: 1f.)


          Return type: Self(12)

      -- Method: Attach (memory)

          Attach a local memory region.


          Parameters: ‘memory’ (*note Buffer: 20a.)


          Return type: None(13)

      -- Method: Call_errhandler (errorcode)

          Call the error handler installed on a window.


          Parameters: ‘errorcode’ (int(14))


          Return type: None(15)

      -- Method: Compare_and_swap (origin, compare, result, target_rank,
               target_disp=0)

          Perform one-sided atomic compare-and-swap.


          Parameters:

             * ‘origin’ (*note BufSpec: 212.)

             * ‘compare’ (*note BufSpec: 212.)

             * ‘result’ (*note BufSpec: 212.)

             * ‘target_rank’ (int(16))

             * ‘target_disp’ (int(17))


          Return type: None(18)

      -- Method: Complete ()

          Complete an RMA operation begun after an *note Start: 7c.


          Return type: None(19)

      -- Method: classmethod Create (memory, disp_unit=1,
               info=INFO_NULL, comm=COMM_SELF)

          Create an window object for one-sided communication.


          Parameters:

             * ‘memory’ (*note Buffer: 20a.‘ | ’*note Bottom: 20b.)

             * ‘disp_unit’ (int(20))

             * ‘info’ (*note Info: d4.)

             * ‘comm’ (*note Intracomm: 1f.)


          Return type: Self

      -- Method: classmethod Create_dynamic (info=INFO_NULL,
               comm=COMM_SELF)

          Create an window object for one-sided communication.


          Parameters:

             * ‘info’ (*note Info: d4.)

             * ‘comm’ (*note Intracomm: 1f.)


          Return type: Self(21)

      -- Method: classmethod Create_errhandler (errhandler_fn)

          Create a new error handler for windows.


          Parameters: ‘errhandler_fn’ (Callable(22)‘[’‘[’*note Win:
          76.‘, ’int(23)‘]’‘, ’None(24)‘]’)


          Return type: *note Errhandler: d8.

      -- Method: classmethod Create_keyval (copy_fn=None,
               delete_fn=None, nopython=False)

          Create a new attribute key for windows.


          Parameters:

             * ‘copy_fn’ (Callable(25)‘[’‘[’*note Win: 76.‘, ’int(26)‘,
               ’Any(27)‘]’‘, ’Any(28)‘] ’‘| ’None(29))

             * ‘delete_fn’ (Callable(30)‘[’‘[’*note Win: 76.‘,
               ’int(31)‘, ’Any(32)‘]’‘, ’None(33)‘] ’‘| ’None(34))

             * ‘nopython’ (bool(35))


          Return type: int(36)

      -- Method: Delete_attr (keyval)

          Delete attribute value associated with a key.


          Parameters: ‘keyval’ (int(37))


          Return type: None(38)

      -- Method: Detach (memory)

          Detach a local memory region.


          Parameters: ‘memory’ (*note Buffer: 20a.)


          Return type: None(39)

      -- Method: Fence (assertion=0)

          Perform an MPI fence synchronization on a window.


          Parameters: ‘assertion’ (int(40))


          Return type: None(41)

      -- Method: Fetch_and_op (origin, result, target_rank,
               target_disp=0, op=SUM)

          Perform one-sided read-modify-write.


          Parameters:

             * ‘origin’ (*note BufSpec: 212.)

             * ‘result’ (*note BufSpec: 212.)

             * ‘target_rank’ (int(42))

             * ‘target_disp’ (int(43))

             * ‘op’ (*note Op: d3.)


          Return type: None(44)

      -- Method: Flush (rank)

          Complete all outstanding RMA operations at a target.


          Parameters: ‘rank’ (int(45))


          Return type: None(46)

      -- Method: Flush_all ()

          Complete all outstanding RMA operations at all targets.


          Return type: None(47)

      -- Method: Flush_local (rank)

          Complete locally all outstanding RMA operations at a target.


          Parameters: ‘rank’ (int(48))


          Return type: None(49)

      -- Method: Flush_local_all ()

          Complete locally all outstanding RMA operations at all
          targets.


          Return type: None(50)

      -- Method: Free ()

          Free a window.


          Return type: None(51)

      -- Method: classmethod Free_keyval (keyval)

          Free an attribute key for windows.


          Parameters: ‘keyval’ (int(52))


          Return type: int(53)

      -- Method: Get (origin, target_rank, target=None)

          Get data from a memory window on a remote process.


          Parameters:

             * ‘origin’ (*note BufSpec: 212.)

             * ‘target_rank’ (int(54))

             * ‘target’ (*note TargetSpec: 216.‘ | ’None(55))


          Return type: None(56)

      -- Method: Get_accumulate (origin, result, target_rank,
               target=None, op=SUM)

          Fetch-and-accumulate data into the target process.


          Parameters:

             * ‘origin’ (*note BufSpec: 212.)

             * ‘result’ (*note BufSpec: 212.)

             * ‘target_rank’ (int(57))

             * ‘target’ (*note TargetSpec: 216.‘ | ’None(58))

             * ‘op’ (*note Op: d3.)


          Return type: None(59)

      -- Method: Get_attr (keyval)

          Retrieve attribute value by key.


          Parameters: ‘keyval’ (int(60))


          Return type: int(61) | Any(62) | None(63)

      -- Method: Get_errhandler ()

          Get the error handler for a window.


          Return type: *note Errhandler: d8.

      -- Method: Get_group ()

          Access the group of processes that created the window.


          Return type: *note Group: 28.

      -- Method: Get_info ()

          Return the current hints for a window.


          Return type: *note Info: d4.

      -- Method: Get_name ()

          Get the print name for this window.


          Return type: str(64)

      -- Method: Lock (rank, lock_type=LOCK_EXCLUSIVE, assertion=0)

          Begin an RMA access epoch at the target process.


          Parameters:

             * ‘rank’ (int(65))

             * ‘lock_type’ (int(66))

             * ‘assertion’ (int(67))


          Return type: None(68)

      -- Method: Lock_all (assertion=0)

          Begin an RMA access epoch at all processes.


          Parameters: ‘assertion’ (int(69))


          Return type: None(70)

      -- Method: Post (group, assertion=0)

          Start an RMA exposure epoch.


          Parameters:

             * ‘group’ (*note Group: 28.)

             * ‘assertion’ (int(71))


          Return type: None(72)

      -- Method: Put (origin, target_rank, target=None)

          Put data into a memory window on a remote process.


          Parameters:

             * ‘origin’ (*note BufSpec: 212.)

             * ‘target_rank’ (int(73))

             * ‘target’ (*note TargetSpec: 216.‘ | ’None(74))


          Return type: None(75)

      -- Method: Raccumulate (origin, target_rank, target=None, op=SUM)

          Fetch-and-accumulate data into the target process.


          Parameters:

             * ‘origin’ (*note BufSpec: 212.)

             * ‘target_rank’ (int(76))

             * ‘target’ (*note TargetSpec: 216.‘ | ’None(77))

             * ‘op’ (*note Op: d3.)


          Return type: *note Request: 43.

      -- Method: Rget (origin, target_rank, target=None)

          Get data from a memory window on a remote process.


          Parameters:

             * ‘origin’ (*note BufSpec: 212.)

             * ‘target_rank’ (int(78))

             * ‘target’ (*note TargetSpec: 216.‘ | ’None(79))


          Return type: *note Request: 43.

      -- Method: Rget_accumulate (origin, result, target_rank,
               target=None, op=SUM)

          Accumulate data into the target process using remote memory
          access.


          Parameters:

             * ‘origin’ (*note BufSpec: 212.)

             * ‘result’ (*note BufSpec: 212.)

             * ‘target_rank’ (int(80))

             * ‘target’ (*note TargetSpec: 216.‘ | ’None(81))

             * ‘op’ (*note Op: d3.)


          Return type: *note Request: 43.

      -- Method: Rput (origin, target_rank, target=None)

          Put data into a memory window on a remote process.


          Parameters:

             * ‘origin’ (*note BufSpec: 212.)

             * ‘target_rank’ (int(82))

             * ‘target’ (*note TargetSpec: 216.‘ | ’None(83))


          Return type: *note Request: 43.

      -- Method: Set_attr (keyval, attrval)

          Store attribute value associated with a key.


          Parameters:

             * ‘keyval’ (int(84))

             * ‘attrval’ (Any(85))


          Return type: None(86)

      -- Method: Set_errhandler (errhandler)

          Set the error handler for a window.


          Parameters: ‘errhandler’ (*note Errhandler: d8.)


          Return type: None(87)

      -- Method: Set_info (info)

          Set new values for the hints associated with a window.


          Parameters: ‘info’ (*note Info: d4.)


          Return type: None(88)

      -- Method: Set_name (name)

          Set the print name for this window.


          Parameters: ‘name’ (str(89))


          Return type: None(90)

      -- Method: Shared_query (rank)

          Query the process-local address for remote memory segments.


          Parameters: ‘rank’ (int(91))


          Return type: tuple(92)[*note buffer: da, int(93)]

      -- Method: Start (group, assertion=0)

          Start an RMA access epoch for MPI.


          Parameters:

             * ‘group’ (*note Group: 28.)

             * ‘assertion’ (int(94))


          Return type: None(95)

      -- Method: Sync ()

          Synchronize public and private copies of the window.


          Return type: None(96)

      -- Method: Test ()

          Test whether an RMA exposure epoch has completed.


          Return type: bool(97)

      -- Method: Unlock (rank)

          Complete an RMA access epoch at the target process.


          Parameters: ‘rank’ (int(98))


          Return type: None(99)

      -- Method: Unlock_all ()

          Complete an RMA access epoch at all processes.


          Return type: None(100)

      -- Method: Wait ()

          Complete an RMA exposure epoch begun with *note Post: 7e.


          Return type: Literal(101)[True]

      -- Method: classmethod f2py (arg)


          Parameters: ‘arg’ (int(102))


          Return type: *note Win: 76.

      -- Method: free ()

          Call *note Free: 78. if not null.


          Return type: None(103)

      -- Method: classmethod fromhandle (handle)

          Create object from MPI handle.


          Parameters: ‘handle’ (int(104))


          Return type: *note Win: 76.

      -- Method: py2f ()


          Return type: int(105)

      -- Method: tomemory ()

          Return window memory buffer.


          Return type: *note buffer: da.

     Attributes Documentation
     ........................

      -- Attribute: attrs

          Attributes.

      -- Attribute: flavor

          Create flavor.

      -- Attribute: group

          Group.

      -- Attribute: group_rank

          Group rank.

      -- Attribute: group_size

          Group size.

      -- Attribute: handle

          MPI handle.

      -- Attribute: info

          Info hints.

      -- Attribute: model

          Memory model.

      -- Attribute: name

          Print name.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/constants.html#None

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/constants.html#None

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/typing.html#typing.Self

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/typing.html#typing.Self

   (13) https://docs.python.org/3/library/constants.html#None

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/constants.html#None

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/constants.html#None

   (19) https://docs.python.org/3/library/constants.html#None

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/typing.html#typing.Self

   (22) https://docs.python.org/3/library/typing.html#typing.Callable

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/constants.html#None

   (25) https://docs.python.org/3/library/typing.html#typing.Callable

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/typing.html#typing.Any

   (28) https://docs.python.org/3/library/typing.html#typing.Any

   (29) https://docs.python.org/3/library/constants.html#None

   (30) https://docs.python.org/3/library/typing.html#typing.Callable

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/typing.html#typing.Any

   (33) https://docs.python.org/3/library/constants.html#None

   (34) https://docs.python.org/3/library/constants.html#None

   (35) https://docs.python.org/3/library/functions.html#bool

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/constants.html#None

   (39) https://docs.python.org/3/library/constants.html#None

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/constants.html#None

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/constants.html#None

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/constants.html#None

   (47) https://docs.python.org/3/library/constants.html#None

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/constants.html#None

   (50) https://docs.python.org/3/library/constants.html#None

   (51) https://docs.python.org/3/library/constants.html#None

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/constants.html#None

   (56) https://docs.python.org/3/library/constants.html#None

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/constants.html#None

   (59) https://docs.python.org/3/library/constants.html#None

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/typing.html#typing.Any

   (63) https://docs.python.org/3/library/constants.html#None

   (64) https://docs.python.org/3/library/stdtypes.html#str

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/constants.html#None

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/constants.html#None

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/constants.html#None

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/constants.html#None

   (75) https://docs.python.org/3/library/constants.html#None

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/constants.html#None

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/constants.html#None

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/constants.html#None

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/constants.html#None

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/typing.html#typing.Any

   (86) https://docs.python.org/3/library/constants.html#None

   (87) https://docs.python.org/3/library/constants.html#None

   (88) https://docs.python.org/3/library/constants.html#None

   (89) https://docs.python.org/3/library/stdtypes.html#str

   (90) https://docs.python.org/3/library/constants.html#None

   (91) https://docs.python.org/3/library/functions.html#int

   (92) https://docs.python.org/3/library/stdtypes.html#tuple

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/constants.html#None

   (96) https://docs.python.org/3/library/constants.html#None

   (97) https://docs.python.org/3/library/functions.html#bool

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/constants.html#None

   (100) https://docs.python.org/3/library/constants.html#None

   (101) https://docs.python.org/3/library/typing.html#typing.Literal

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/constants.html#None

   (104) https://docs.python.org/3/library/functions.html#int

   (105) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI buffer,  Next: mpi4py MPI memory,  Prev: mpi4py MPI Win,  Up: mpi4py MPI<2>

11.1.25 mpi4py.MPI.buffer
-------------------------

 -- Class: mpi4py.MPI.buffer

     Bases: object(1)

     Buffer.

      -- Method: static __new__ (cls, buf)


          Parameters: ‘buf’ (*note Buffer: 20a.)


          Return type: Self(2)

     Methods Summary
     ...............

     *note allocate: 4f0.(nbytes[,Buffer allocation.
     clear])        

     *note cast: 4f1.(format[,Cast to a memoryview(3) with new format or shape.
     shape])        

     *note fromaddress: 4f2.(address,Buffer from address and size in bytes.
     nbytes[,       
     readonly])

     *note frombuffer: 4f3.(obj[,Buffer from buffer-like object.
     readonly])     

     *note release: 4f4.()Release the underlying buffer exposed by the buffer object.
                    
                    
     *note tobytes: 4f5.([order])Return the data in the buffer as a byte string.
                    
                    
     *note toreadonly: 4f6.()Return a readonly version of the buffer object.
                    

     Attributes Summary
     ..................

     *note address: 4f7.Buffer address.
                    
                    
     *note format: 4f8.Format of each element.
                    
                    
     *note itemsize: 4f9.Size (in bytes) of each element.
                    
                    
     *note nbytes: 4fa.Buffer size (in bytes).
                    
                    
     *note obj: 4fb.Object exposing buffer.
                    
                    
     *note readonly: 4fc.Buffer is read-only.
                    

     Methods Documentation
     .....................

      -- Method: static allocate (nbytes, clear=False)

          Buffer allocation.


          Parameters:

             * ‘nbytes’ (int(4))

             * ‘clear’ (bool(5))


          Return type: *note buffer: da.

      -- Method: cast (format, shape=Ellipsis)

          Cast to a memoryview(6) with new format or shape.


          Parameters:

             * ‘format’ (str(7))

             * ‘shape’ (list(8)‘[’int(9)‘] ’‘| ’tuple(10)‘[’int(11)‘,
               ’‘...’‘]’)


          Return type: memoryview(12)

      -- Method: static fromaddress (address, nbytes, readonly=False)

          Buffer from address and size in bytes.


          Parameters:

             * ‘address’ (int(13))

             * ‘nbytes’ (int(14))

             * ‘readonly’ (bool(15))


          Return type: *note buffer: da.

      -- Method: static frombuffer (obj, readonly=False)

          Buffer from buffer-like object.


          Parameters:

             * ‘obj’ (*note Buffer: 20a.)

             * ‘readonly’ (bool(16))


          Return type: *note buffer: da.

      -- Method: release ()

          Release the underlying buffer exposed by the buffer object.


          Return type: None(17)

      -- Method: tobytes (order=None)

          Return the data in the buffer as a byte string.


          Parameters: ‘order’ (str(18)‘ | ’None(19))


          Return type: bytes(20)

      -- Method: toreadonly ()

          Return a readonly version of the buffer object.


          Return type: *note buffer: da.

     Attributes Documentation
     ........................

      -- Attribute: address

          Buffer address.

      -- Attribute: format

          Format of each element.

      -- Attribute: itemsize

          Size (in bytes) of each element.

      -- Attribute: nbytes

          Buffer size (in bytes).

      -- Attribute: obj

          Object exposing buffer.

      -- Attribute: readonly

          Buffer is read-only.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#object

   (2) https://docs.python.org/3/library/typing.html#typing.Self

   (3) https://docs.python.org/3/library/stdtypes.html#memoryview

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#bool

   (6) https://docs.python.org/3/library/stdtypes.html#memoryview

   (7) https://docs.python.org/3/library/stdtypes.html#str

   (8) https://docs.python.org/3/library/stdtypes.html#list

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/stdtypes.html#tuple

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/stdtypes.html#memoryview

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#bool

   (16) https://docs.python.org/3/library/functions.html#bool

   (17) https://docs.python.org/3/library/constants.html#None

   (18) https://docs.python.org/3/library/stdtypes.html#str

   (19) https://docs.python.org/3/library/constants.html#None

   (20) https://docs.python.org/3/library/stdtypes.html#bytes


File: mpi4py.info,  Node: mpi4py MPI memory,  Next: mpi4py MPI Exception,  Prev: mpi4py MPI buffer,  Up: mpi4py MPI<2>

11.1.26 mpi4py.MPI.memory
-------------------------

 -- Attribute: mpi4py.MPI.memory

     alias of *note buffer: da.

Exceptions
..........

*note Exception: 9e.Exception class.
               


File: mpi4py.info,  Node: mpi4py MPI Exception,  Next: mpi4py MPI Add_error_class,  Prev: mpi4py MPI memory,  Up: mpi4py MPI<2>

11.1.27 mpi4py.MPI.Exception
----------------------------

 -- Exception: mpi4py.MPI.Exception

     Bases: RuntimeError(1)

     Exception class.

      -- Method: static __new__ (cls, ierr=SUCCESS)


          Parameters: ‘ierr’ (int(2))


          Return type: Self(3)

     Methods Summary
     ...............

     *note Get_error_class: 502.()Error class.
                    
                    
     *note Get_error_code: 503.()Error code.
                    
                    
     *note Get_error_string: 504.()Error string.
                    

     Attributes Summary
     ..................

     *note error_class: 505.Error class.
                    
                    
     *note error_code: 506.Error code.
                    
                    
     *note error_string: 507.Error string.
                    

     Methods Documentation
     .....................

      -- Method: Get_error_class ()

          Error class.


          Return type: int(4)

      -- Method: Get_error_code ()

          Error code.


          Return type: int(5)

      -- Method: Get_error_string ()

          Error string.


          Return type: str(6)

     Attributes Documentation
     ........................

      -- Attribute: error_class

          Error class.

      -- Attribute: error_code

          Error code.

      -- Attribute: error_string

          Error string.

Functions
.........

*note Add_error_class: e6.()Add an 'error class' to the known error classes.
               
               
*note Add_error_code: e7.(errorclass)Add an 'error code' to an 'error class'.
               
               
*note Add_error_string: e8.(errorcode,Associate an 'error string' with an 'error class' or 'error code'.
string)        

*note Aint_add: e2.(base,Return the sum of base address and displacement.
disp)          

*note Aint_diff: e3.(addr1,Return the difference between absolute addresses.
addr2)         

*note Alloc_mem: df.(size[,Allocate memory for message passing and remote memory access.
info])         

*note Attach_buffer: ec.(buf)Attach a user-provided buffer for sending in buffered mode.
               
               
*note Close_port: 74.(port_name)Close a port.
               
               
*note Compute_dims: f0.(nnodes,Return a balanced distribution of processes per coordinate direction.
dims)          

*note Detach_buffer: ed.()Remove an existing attached buffer.
               
               
*note Finalize: 8e.()Terminate the MPI execution environment.
               
               
*note Flush_buffer: ee.()Block until all buffered messages have been transmitted.
               
               
*note Free_mem: e0.(mem)Free memory allocated with *note Alloc_mem: df.
               
               
*note Get_address: e1.(location)Get the address of a location in memory.
               
               
*note Get_error_class: e4.(errorcode)Convert an 'error code' into an 'error class'.
               
               
*note Get_error_string: e5.(errorcode)Return the 'error string' for a given 'error class' or 'error code'.
               
               
*note Get_hw_resource_info: 508.()Obtain information about the hardware platform of the calling processor.
               
               
*note Get_library_version: dc.()Obtain the version string of the MPI library.
               
               
*note Get_processor_name: 93.()Obtain the name of the calling processor.
               
               
*note Get_version: 92.()Obtain the version number of the MPI standard.
               
               
*note Iflush_buffer: ef.()Nonblocking flush for buffered messages.
               
               
*note Init: 8c.()Initialize the MPI execution environment.
               
               
*note Init_thread: 8d.([required])Initialize the MPI execution environment.
               
               
*note Is_finalized: 90.()Indicate whether *note Finalize: 8e. has completed.
               
               
*note Is_initialized: 8f.()Indicate whether *note Init: 8c. has been called.
               
               
*note Is_thread_main: de.()Indicate whether this thread called *note Init: 8c. or *note Init_thread: 8d.
               
               
*note Lookup_name: 70.(service_name[,Lookup a port name given a service name.
info])         

*note Open_port: 6d.([info])Return an address used to connect group of processes.
               
               
*note Pcontrol: f2.(level)Control profiling.
               
               
*note Publish_name: 6e.(service_name,Publish a service name.
port_name[,    
info])

*note Query_thread: dd.()Return the level of thread support provided by the MPI library.
               
               
*note Register_datarep: f1.(datarep,Register user-defined data representations.
read_fn,       
write_fn,
...)

*note Remove_error_class: e9.(errorclass)Remove an 'error class' from the known error classes.
               
               
*note Remove_error_code: ea.(errorcode)Remove an 'error code' from the known error codes.
               
               
*note Remove_error_string: eb.(errorcode)Remove 'error string' association from 'error class' or 'error code'.
               
               
*note Unpublish_name: 73.(service_name,Unpublish a service name.
port_name[,    
info])

*note Wtick: 97.()Return the resolution of *note Wtime: 96.
               
               
*note Wtime: 96.()Return an elapsed time on the calling processor.
               
               
*note get_vendor: f3.()Information about the underlying MPI implementation.
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/exceptions.html#RuntimeError

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/typing.html#typing.Self

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Add_error_class,  Next: mpi4py MPI Add_error_code,  Prev: mpi4py MPI Exception,  Up: mpi4py MPI<2>

11.1.28 mpi4py.MPI.Add_error_class
----------------------------------

 -- Function: mpi4py.MPI.Add_error_class ()

     Add an 'error class' to the known error classes.


     Return type: int(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Add_error_code,  Next: mpi4py MPI Add_error_string,  Prev: mpi4py MPI Add_error_class,  Up: mpi4py MPI<2>

11.1.29 mpi4py.MPI.Add_error_code
---------------------------------

 -- Function: mpi4py.MPI.Add_error_code (errorclass)

     Add an 'error code' to an 'error class'.


     Parameters: ‘errorclass’ (int(1))


     Return type: int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Add_error_string,  Next: mpi4py MPI Aint_add,  Prev: mpi4py MPI Add_error_code,  Up: mpi4py MPI<2>

11.1.30 mpi4py.MPI.Add_error_string
-----------------------------------

 -- Function: mpi4py.MPI.Add_error_string (errorcode, string)

     Associate an 'error string' with an 'error class' or 'error code'.


     Parameters:

        * ‘errorcode’ (int(1))

        * ‘string’ (str(2))


     Return type: None(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Aint_add,  Next: mpi4py MPI Aint_diff,  Prev: mpi4py MPI Add_error_string,  Up: mpi4py MPI<2>

11.1.31 mpi4py.MPI.Aint_add
---------------------------

 -- Function: mpi4py.MPI.Aint_add (base, disp)

     Return the sum of base address and displacement.


     Parameters:

        * ‘base’ (int(1))

        * ‘disp’ (int(2))


     Return type: int(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Aint_diff,  Next: mpi4py MPI Alloc_mem,  Prev: mpi4py MPI Aint_add,  Up: mpi4py MPI<2>

11.1.32 mpi4py.MPI.Aint_diff
----------------------------

 -- Function: mpi4py.MPI.Aint_diff (addr1, addr2)

     Return the difference between absolute addresses.


     Parameters:

        * ‘addr1’ (int(1))

        * ‘addr2’ (int(2))


     Return type: int(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Alloc_mem,  Next: mpi4py MPI Attach_buffer,  Prev: mpi4py MPI Aint_diff,  Up: mpi4py MPI<2>

11.1.33 mpi4py.MPI.Alloc_mem
----------------------------

 -- Function: mpi4py.MPI.Alloc_mem (size, info=INFO_NULL)

     Allocate memory for message passing and remote memory access.


     Parameters:

        * ‘size’ (int(1))

        * ‘info’ (*note Info: d4.)


     Return type: *note buffer: da.

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Attach_buffer,  Next: mpi4py MPI Close_port,  Prev: mpi4py MPI Alloc_mem,  Up: mpi4py MPI<2>

11.1.34 mpi4py.MPI.Attach_buffer
--------------------------------

 -- Function: mpi4py.MPI.Attach_buffer (buf)

     Attach a user-provided buffer for sending in buffered mode.


     Parameters: ‘buf’ (*note Buffer: 20a.‘ | ’None(1))


     Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Close_port,  Next: mpi4py MPI Compute_dims,  Prev: mpi4py MPI Attach_buffer,  Up: mpi4py MPI<2>

11.1.35 mpi4py.MPI.Close_port
-----------------------------

 -- Function: mpi4py.MPI.Close_port (port_name)

     Close a port.


     Parameters: ‘port_name’ (str(1))


     Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Compute_dims,  Next: mpi4py MPI Detach_buffer,  Prev: mpi4py MPI Close_port,  Up: mpi4py MPI<2>

11.1.36 mpi4py.MPI.Compute_dims
-------------------------------

 -- Function: mpi4py.MPI.Compute_dims (nnodes, dims)

     Return a balanced distribution of processes per coordinate
     direction.


     Parameters:

        * ‘nnodes’ (int(1))

        * ‘dims’ (int(2)‘ | ’Sequence(3)‘[’int(4)‘]’)


     Return type: list(5)[int(6)]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/typing.html#typing.Sequence

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/stdtypes.html#list

   (6) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Detach_buffer,  Next: mpi4py MPI Finalize,  Prev: mpi4py MPI Compute_dims,  Up: mpi4py MPI<2>

11.1.37 mpi4py.MPI.Detach_buffer
--------------------------------

 -- Function: mpi4py.MPI.Detach_buffer ()

     Remove an existing attached buffer.


     Return type: *note Buffer: 20a. | None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Finalize,  Next: mpi4py MPI Flush_buffer,  Prev: mpi4py MPI Detach_buffer,  Up: mpi4py MPI<2>

11.1.38 mpi4py.MPI.Finalize
---------------------------

 -- Function: mpi4py.MPI.Finalize ()

     Terminate the MPI execution environment.


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Flush_buffer,  Next: mpi4py MPI Free_mem,  Prev: mpi4py MPI Finalize,  Up: mpi4py MPI<2>

11.1.39 mpi4py.MPI.Flush_buffer
-------------------------------

 -- Function: mpi4py.MPI.Flush_buffer ()

     Block until all buffered messages have been transmitted.


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Free_mem,  Next: mpi4py MPI Get_address,  Prev: mpi4py MPI Flush_buffer,  Up: mpi4py MPI<2>

11.1.40 mpi4py.MPI.Free_mem
---------------------------

 -- Function: mpi4py.MPI.Free_mem (mem)

     Free memory allocated with *note Alloc_mem: df.


     Parameters: ‘mem’ (*note buffer: da.)


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Get_address,  Next: mpi4py MPI Get_error_class,  Prev: mpi4py MPI Free_mem,  Up: mpi4py MPI<2>

11.1.41 mpi4py.MPI.Get_address
------------------------------

 -- Function: mpi4py.MPI.Get_address (location)

     Get the address of a location in memory.


     Parameters: ‘location’ (*note Buffer: 20a.‘ | ’*note Bottom: 20b.)


     Return type: int(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Get_error_class,  Next: mpi4py MPI Get_error_string,  Prev: mpi4py MPI Get_address,  Up: mpi4py MPI<2>

11.1.42 mpi4py.MPI.Get_error_class
----------------------------------

 -- Function: mpi4py.MPI.Get_error_class (errorcode)

     Convert an 'error code' into an 'error class'.


     Parameters: ‘errorcode’ (int(1))


     Return type: int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Get_error_string,  Next: mpi4py MPI Get_hw_resource_info,  Prev: mpi4py MPI Get_error_class,  Up: mpi4py MPI<2>

11.1.43 mpi4py.MPI.Get_error_string
-----------------------------------

 -- Function: mpi4py.MPI.Get_error_string (errorcode)

     Return the 'error string' for a given 'error class' or 'error
     code'.


     Parameters: ‘errorcode’ (int(1))


     Return type: str(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Get_hw_resource_info,  Next: mpi4py MPI Get_library_version,  Prev: mpi4py MPI Get_error_string,  Up: mpi4py MPI<2>

11.1.44 mpi4py.MPI.Get_hw_resource_info
---------------------------------------

 -- Function: mpi4py.MPI.Get_hw_resource_info ()

     Obtain information about the hardware platform of the calling
     processor.


     Return type: *note Info: d4.


File: mpi4py.info,  Node: mpi4py MPI Get_library_version,  Next: mpi4py MPI Get_processor_name,  Prev: mpi4py MPI Get_hw_resource_info,  Up: mpi4py MPI<2>

11.1.45 mpi4py.MPI.Get_library_version
--------------------------------------

 -- Function: mpi4py.MPI.Get_library_version ()

     Obtain the version string of the MPI library.


     Return type: str(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Get_processor_name,  Next: mpi4py MPI Get_version,  Prev: mpi4py MPI Get_library_version,  Up: mpi4py MPI<2>

11.1.46 mpi4py.MPI.Get_processor_name
-------------------------------------

 -- Function: mpi4py.MPI.Get_processor_name ()

     Obtain the name of the calling processor.


     Return type: str(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Get_version,  Next: mpi4py MPI Iflush_buffer,  Prev: mpi4py MPI Get_processor_name,  Up: mpi4py MPI<2>

11.1.47 mpi4py.MPI.Get_version
------------------------------

 -- Function: mpi4py.MPI.Get_version ()

     Obtain the version number of the MPI standard.


     Return type: tuple(1)[int(2), int(3)]

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#tuple

   (2) https://docs.python.org/3/library/functions.html#int

   (3) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Iflush_buffer,  Next: mpi4py MPI Init,  Prev: mpi4py MPI Get_version,  Up: mpi4py MPI<2>

11.1.48 mpi4py.MPI.Iflush_buffer
--------------------------------

 -- Function: mpi4py.MPI.Iflush_buffer ()

     Nonblocking flush for buffered messages.


     Return type: *note Request: 43.


File: mpi4py.info,  Node: mpi4py MPI Init,  Next: mpi4py MPI Init_thread,  Prev: mpi4py MPI Iflush_buffer,  Up: mpi4py MPI<2>

11.1.49 mpi4py.MPI.Init
-----------------------

 -- Function: mpi4py.MPI.Init ()

     Initialize the MPI execution environment.


     Return type: None(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Init_thread,  Next: mpi4py MPI Is_finalized,  Prev: mpi4py MPI Init,  Up: mpi4py MPI<2>

11.1.50 mpi4py.MPI.Init_thread
------------------------------

 -- Function: mpi4py.MPI.Init_thread (required=THREAD_MULTIPLE)

     Initialize the MPI execution environment.


     Parameters: ‘required’ (int(1))


     Return type: int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Is_finalized,  Next: mpi4py MPI Is_initialized,  Prev: mpi4py MPI Init_thread,  Up: mpi4py MPI<2>

11.1.51 mpi4py.MPI.Is_finalized
-------------------------------

 -- Function: mpi4py.MPI.Is_finalized ()

     Indicate whether *note Finalize: 8e. has completed.


     Return type: bool(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Is_initialized,  Next: mpi4py MPI Is_thread_main,  Prev: mpi4py MPI Is_finalized,  Up: mpi4py MPI<2>

11.1.52 mpi4py.MPI.Is_initialized
---------------------------------

 -- Function: mpi4py.MPI.Is_initialized ()

     Indicate whether *note Init: 8c. has been called.


     Return type: bool(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Is_thread_main,  Next: mpi4py MPI Lookup_name,  Prev: mpi4py MPI Is_initialized,  Up: mpi4py MPI<2>

11.1.53 mpi4py.MPI.Is_thread_main
---------------------------------

 -- Function: mpi4py.MPI.Is_thread_main ()

     Indicate whether this thread called *note Init: 8c. or *note
     Init_thread: 8d.


     Return type: bool(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#bool


File: mpi4py.info,  Node: mpi4py MPI Lookup_name,  Next: mpi4py MPI Open_port,  Prev: mpi4py MPI Is_thread_main,  Up: mpi4py MPI<2>

11.1.54 mpi4py.MPI.Lookup_name
------------------------------

 -- Function: mpi4py.MPI.Lookup_name (service_name, info=INFO_NULL)

     Lookup a port name given a service name.


     Parameters:

        * ‘service_name’ (str(1))

        * ‘info’ (*note Info: d4.)


     Return type: str(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Open_port,  Next: mpi4py MPI Pcontrol,  Prev: mpi4py MPI Lookup_name,  Up: mpi4py MPI<2>

11.1.55 mpi4py.MPI.Open_port
----------------------------

 -- Function: mpi4py.MPI.Open_port (info=INFO_NULL)

     Return an address used to connect group of processes.


     Parameters: ‘info’ (*note Info: d4.)


     Return type: str(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str


File: mpi4py.info,  Node: mpi4py MPI Pcontrol,  Next: mpi4py MPI Publish_name,  Prev: mpi4py MPI Open_port,  Up: mpi4py MPI<2>

11.1.56 mpi4py.MPI.Pcontrol
---------------------------

 -- Function: mpi4py.MPI.Pcontrol (level)

     Control profiling.


     Parameters: ‘level’ (int(1))


     Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Publish_name,  Next: mpi4py MPI Query_thread,  Prev: mpi4py MPI Pcontrol,  Up: mpi4py MPI<2>

11.1.57 mpi4py.MPI.Publish_name
-------------------------------

 -- Function: mpi4py.MPI.Publish_name (service_name, port_name,
          info=INFO_NULL)

     Publish a service name.


     Parameters:

        * ‘service_name’ (str(1))

        * ‘port_name’ (str(2))

        * ‘info’ (*note Info: d4.)


     Return type: None(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Query_thread,  Next: mpi4py MPI Register_datarep,  Prev: mpi4py MPI Publish_name,  Up: mpi4py MPI<2>

11.1.58 mpi4py.MPI.Query_thread
-------------------------------

 -- Function: mpi4py.MPI.Query_thread ()

     Return the level of thread support provided by the MPI library.


     Return type: int(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI Register_datarep,  Next: mpi4py MPI Remove_error_class,  Prev: mpi4py MPI Query_thread,  Up: mpi4py MPI<2>

11.1.59 mpi4py.MPI.Register_datarep
-----------------------------------

 -- Function: mpi4py.MPI.Register_datarep (datarep, read_fn, write_fn,
          extent_fn)

     Register user-defined data representations.


     Parameters:

        * ‘datarep’ (str(1))

        * ‘read_fn’ (Callable(2)‘[’‘[’*note Buffer: 20a.‘, ’*note
          Datatype: d0.‘, ’int(3)‘, ’*note Buffer: 20a.‘, ’int(4)‘]’‘,
          ’None(5)‘]’)

        * ‘write_fn’ (Callable(6)‘[’‘[’*note Buffer: 20a.‘, ’*note
          Datatype: d0.‘, ’int(7)‘, ’*note Buffer: 20a.‘, ’int(8)‘]’‘,
          ’None(9)‘]’)

        * ‘extent_fn’ (Callable(10)‘[’‘[’*note Datatype: d0.‘]’‘,
          ’int(11)‘]’)


     Return type: None(12)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/typing.html#typing.Callable

   (3) https://docs.python.org/3/library/functions.html#int

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/constants.html#None

   (6) https://docs.python.org/3/library/typing.html#typing.Callable

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/constants.html#None

   (10) https://docs.python.org/3/library/typing.html#typing.Callable

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Remove_error_class,  Next: mpi4py MPI Remove_error_code,  Prev: mpi4py MPI Register_datarep,  Up: mpi4py MPI<2>

11.1.60 mpi4py.MPI.Remove_error_class
-------------------------------------

 -- Function: mpi4py.MPI.Remove_error_class (errorclass)

     Remove an 'error class' from the known error classes.


     Parameters: ‘errorclass’ (int(1))


     Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Remove_error_code,  Next: mpi4py MPI Remove_error_string,  Prev: mpi4py MPI Remove_error_class,  Up: mpi4py MPI<2>

11.1.61 mpi4py.MPI.Remove_error_code
------------------------------------

 -- Function: mpi4py.MPI.Remove_error_code (errorcode)

     Remove an 'error code' from the known error codes.


     Parameters: ‘errorcode’ (int(1))


     Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Remove_error_string,  Next: mpi4py MPI Unpublish_name,  Prev: mpi4py MPI Remove_error_code,  Up: mpi4py MPI<2>

11.1.62 mpi4py.MPI.Remove_error_string
--------------------------------------

 -- Function: mpi4py.MPI.Remove_error_string (errorcode)

     Remove 'error string' association from 'error class' or 'error
     code'.


     Parameters: ‘errorcode’ (int(1))


     Return type: None(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Unpublish_name,  Next: mpi4py MPI Wtick,  Prev: mpi4py MPI Remove_error_string,  Up: mpi4py MPI<2>

11.1.63 mpi4py.MPI.Unpublish_name
---------------------------------

 -- Function: mpi4py.MPI.Unpublish_name (service_name, port_name,
          info=INFO_NULL)

     Unpublish a service name.


     Parameters:

        * ‘service_name’ (str(1))

        * ‘port_name’ (str(2))

        * ‘info’ (*note Info: d4.)


     Return type: None(3)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#str

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/constants.html#None


File: mpi4py.info,  Node: mpi4py MPI Wtick,  Next: mpi4py MPI Wtime,  Prev: mpi4py MPI Unpublish_name,  Up: mpi4py MPI<2>

11.1.64 mpi4py.MPI.Wtick
------------------------

 -- Function: mpi4py.MPI.Wtick ()

     Return the resolution of *note Wtime: 96.


     Return type: float(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#float


File: mpi4py.info,  Node: mpi4py MPI Wtime,  Next: mpi4py MPI get_vendor,  Prev: mpi4py MPI Wtick,  Up: mpi4py MPI<2>

11.1.65 mpi4py.MPI.Wtime
------------------------

 -- Function: mpi4py.MPI.Wtime ()

     Return an elapsed time on the calling processor.


     Return type: float(1)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#float


File: mpi4py.info,  Node: mpi4py MPI get_vendor,  Next: mpi4py MPI UNDEFINED,  Prev: mpi4py MPI Wtime,  Up: mpi4py MPI<2>

11.1.66 mpi4py.MPI.get_vendor
-----------------------------

 -- Function: mpi4py.MPI.get_vendor ()

     Information about the underlying MPI implementation.


     Returns:

        - string with the name of the MPI implementation.

        - integer 3-tuple version number ‘(major, minor, micro)’.


     Return type: tuple(1)[str(2), tuple(3)[int(4), int(5), int(6)]]

Attributes
..........

*note UNDEFINED: f5.Constant ‘UNDEFINED’ of type int(7)
               
               
*note ANY_SOURCE: f6.Constant ‘ANY_SOURCE’ of type int(8)
               
               
*note ANY_TAG: f7.Constant ‘ANY_TAG’ of type int(9)
               
               
*note PROC_NULL: f8.Constant ‘PROC_NULL’ of type int(10)
               
               
*note ROOT: f9.Constant ‘ROOT’ of type int(11)
               
               
*note BOTTOM: fa.Constant ‘BOTTOM’ of type *note BottomType: fb.
               
               
*note IN_PLACE: fc.Constant ‘IN_PLACE’ of type *note InPlaceType: fd.
               
               
*note KEYVAL_INVALID: 100.Constant ‘KEYVAL_INVALID’ of type int(12)
               
               
*note TAG_UB: 101.Constant ‘TAG_UB’ of type int(13)
               
               
*note IO: 102. Constant ‘IO’ of type int(14)
               
               
*note WTIME_IS_GLOBAL: 103.Constant ‘WTIME_IS_GLOBAL’ of type int(15)
               
               
*note UNIVERSE_SIZE: 104.Constant ‘UNIVERSE_SIZE’ of type int(16)
               
               
*note APPNUM: 105.Constant ‘APPNUM’ of type int(17)
               
               
*note LASTUSEDCODE: 106.Constant ‘LASTUSEDCODE’ of type int(18)
               
               
*note WIN_BASE: 107.Constant ‘WIN_BASE’ of type int(19)
               
               
*note WIN_SIZE: 108.Constant ‘WIN_SIZE’ of type int(20)
               
               
*note WIN_DISP_UNIT: 109.Constant ‘WIN_DISP_UNIT’ of type int(21)
               
               
*note WIN_CREATE_FLAVOR: 10a.Constant ‘WIN_CREATE_FLAVOR’ of type int(22)
               
               
*note WIN_FLAVOR: 10b.Constant ‘WIN_FLAVOR’ of type int(23)
               
               
*note WIN_MODEL: 10c.Constant ‘WIN_MODEL’ of type int(24)
               
               
*note SUCCESS: 10d.Constant ‘SUCCESS’ of type int(25)
               
               
*note ERR_LASTCODE: 10e.Constant ‘ERR_LASTCODE’ of type int(26)
               
               
*note ERR_TYPE: 111.Constant ‘ERR_TYPE’ of type int(27)
               
               
*note ERR_REQUEST: 112.Constant ‘ERR_REQUEST’ of type int(28)
               
               
*note ERR_OP: 113.Constant ‘ERR_OP’ of type int(29)
               
               
*note ERR_GROUP: 110.Constant ‘ERR_GROUP’ of type int(30)
               
               
*note ERR_INFO: 123.Constant ‘ERR_INFO’ of type int(31)
               
               
*note ERR_ERRHANDLER: 114.Constant ‘ERR_ERRHANDLER’ of type int(32)
               
               
*note ERR_SESSION: 557.Constant ‘ERR_SESSION’ of type int(33)
               
               
*note ERR_COMM: 10f.Constant ‘ERR_COMM’ of type int(34)
               
               
*note ERR_WIN: 125.Constant ‘ERR_WIN’ of type int(35)
               
               
*note ERR_FILE: 124.Constant ‘ERR_FILE’ of type int(36)
               
               
*note ERR_BUFFER: 115.Constant ‘ERR_BUFFER’ of type int(37)
               
               
*note ERR_COUNT: 116.Constant ‘ERR_COUNT’ of type int(38)
               
               
*note ERR_TAG: 117.Constant ‘ERR_TAG’ of type int(39)
               
               
*note ERR_RANK: 118.Constant ‘ERR_RANK’ of type int(40)
               
               
*note ERR_ROOT: 119.Constant ‘ERR_ROOT’ of type int(41)
               
               
*note ERR_TRUNCATE: 11a.Constant ‘ERR_TRUNCATE’ of type int(42)
               
               
*note ERR_IN_STATUS: 11b.Constant ‘ERR_IN_STATUS’ of type int(43)
               
               
*note ERR_PENDING: 11c.Constant ‘ERR_PENDING’ of type int(44)
               
               
*note ERR_TOPOLOGY: 11d.Constant ‘ERR_TOPOLOGY’ of type int(45)
               
               
*note ERR_DIMS: 11e.Constant ‘ERR_DIMS’ of type int(46)
               
               
*note ERR_ARG: 11f.Constant ‘ERR_ARG’ of type int(47)
               
               
*note ERR_OTHER: 120.Constant ‘ERR_OTHER’ of type int(48)
               
               
*note ERR_UNKNOWN: 121.Constant ‘ERR_UNKNOWN’ of type int(49)
               
               
*note ERR_INTERN: 122.Constant ‘ERR_INTERN’ of type int(50)
               
               
*note ERR_KEYVAL: 126.Constant ‘ERR_KEYVAL’ of type int(51)
               
               
*note ERR_NO_MEM: 138.Constant ‘ERR_NO_MEM’ of type int(52)
               
               
*note ERR_INFO_KEY: 127.Constant ‘ERR_INFO_KEY’ of type int(53)
               
               
*note ERR_INFO_VALUE: 128.Constant ‘ERR_INFO_VALUE’ of type int(54)
               
               
*note ERR_INFO_NOKEY: 129.Constant ‘ERR_INFO_NOKEY’ of type int(55)
               
               
*note ERR_SPAWN: 13d.Constant ‘ERR_SPAWN’ of type int(56)
               
               
*note ERR_PORT: 13a.Constant ‘ERR_PORT’ of type int(57)
               
               
*note ERR_SERVICE: 13c.Constant ‘ERR_SERVICE’ of type int(58)
               
               
*note ERR_NAME: 137.Constant ‘ERR_NAME’ of type int(59)
               
               
*note ERR_PROC_ABORTED: 558.Constant ‘ERR_PROC_ABORTED’ of type int(60)
               
               
*note ERR_BASE: 13e.Constant ‘ERR_BASE’ of type int(61)
               
               
*note ERR_SIZE: 13f.Constant ‘ERR_SIZE’ of type int(62)
               
               
*note ERR_DISP: 140.Constant ‘ERR_DISP’ of type int(63)
               
               
*note ERR_ASSERT: 141.Constant ‘ERR_ASSERT’ of type int(64)
               
               
*note ERR_LOCKTYPE: 142.Constant ‘ERR_LOCKTYPE’ of type int(65)
               
               
*note ERR_RMA_CONFLICT: 143.Constant ‘ERR_RMA_CONFLICT’ of type int(66)
               
               
*note ERR_RMA_SYNC: 144.Constant ‘ERR_RMA_SYNC’ of type int(67)
               
               
*note ERR_RMA_RANGE: 145.Constant ‘ERR_RMA_RANGE’ of type int(68)
               
               
*note ERR_RMA_ATTACH: 146.Constant ‘ERR_RMA_ATTACH’ of type int(69)
               
               
*note ERR_RMA_SHARED: 147.Constant ‘ERR_RMA_SHARED’ of type int(70)
               
               
*note ERR_RMA_FLAVOR: 148.Constant ‘ERR_RMA_FLAVOR’ of type int(71)
               
               
*note ERR_BAD_FILE: 12c.Constant ‘ERR_BAD_FILE’ of type int(72)
               
               
*note ERR_NO_SUCH_FILE: 130.Constant ‘ERR_NO_SUCH_FILE’ of type int(73)
               
               
*note ERR_FILE_EXISTS: 12d.Constant ‘ERR_FILE_EXISTS’ of type int(74)
               
               
*note ERR_FILE_IN_USE: 12e.Constant ‘ERR_FILE_IN_USE’ of type int(75)
               
               
*note ERR_AMODE: 12b.Constant ‘ERR_AMODE’ of type int(76)
               
               
*note ERR_ACCESS: 12a.Constant ‘ERR_ACCESS’ of type int(77)
               
               
*note ERR_READ_ONLY: 132.Constant ‘ERR_READ_ONLY’ of type int(78)
               
               
*note ERR_NO_SPACE: 12f.Constant ‘ERR_NO_SPACE’ of type int(79)
               
               
*note ERR_QUOTA: 13b.Constant ‘ERR_QUOTA’ of type int(80)
               
               
*note ERR_NOT_SAME: 139.Constant ‘ERR_NOT_SAME’ of type int(81)
               
               
*note ERR_IO: 131.Constant ‘ERR_IO’ of type int(82)
               
               
*note ERR_UNSUPPORTED_OPERATION: 136.Constant ‘ERR_UNSUPPORTED_OPERATION’ of type int(83)
               
               
*note ERR_UNSUPPORTED_DATAREP: 135.Constant ‘ERR_UNSUPPORTED_DATAREP’ of type int(84)
               
               
*note ERR_CONVERSION: 133.Constant ‘ERR_CONVERSION’ of type int(85)
               
               
*note ERR_DUP_DATAREP: 134.Constant ‘ERR_DUP_DATAREP’ of type int(86)
               
               
*note ERR_VALUE_TOO_LARGE: 559.Constant ‘ERR_VALUE_TOO_LARGE’ of type int(87)
               
               
*note ERR_REVOKED: 55a.Constant ‘ERR_REVOKED’ of type int(88)
               
               
*note ERR_PROC_FAILED: 55b.Constant ‘ERR_PROC_FAILED’ of type int(89)
               
               
*note ERR_PROC_FAILED_PENDING: 55c.Constant ‘ERR_PROC_FAILED_PENDING’ of type int(90)
               
               
*note ORDER_C: 149.Constant ‘ORDER_C’ of type int(91)
               
               
*note ORDER_FORTRAN: 14b.Constant ‘ORDER_FORTRAN’ of type int(92)
               
               
*note ORDER_F: 14a.Constant ‘ORDER_F’ of type int(93)
               
               
*note TYPECLASS_INTEGER: 14c.Constant ‘TYPECLASS_INTEGER’ of type int(94)
               
               
*note TYPECLASS_REAL: 14d.Constant ‘TYPECLASS_REAL’ of type int(95)
               
               
*note TYPECLASS_COMPLEX: 14e.Constant ‘TYPECLASS_COMPLEX’ of type int(96)
               
               
*note DISTRIBUTE_NONE: 14f.Constant ‘DISTRIBUTE_NONE’ of type int(97)
               
               
*note DISTRIBUTE_BLOCK: 150.Constant ‘DISTRIBUTE_BLOCK’ of type int(98)
               
               
*note DISTRIBUTE_CYCLIC: 151.Constant ‘DISTRIBUTE_CYCLIC’ of type int(99)
               
               
*note DISTRIBUTE_DFLT_DARG: 152.Constant ‘DISTRIBUTE_DFLT_DARG’ of type int(100)
               
               
*note COMBINER_NAMED: 153.Constant ‘COMBINER_NAMED’ of type int(101)
               
               
*note COMBINER_DUP: 154.Constant ‘COMBINER_DUP’ of type int(102)
               
               
*note COMBINER_CONTIGUOUS: 155.Constant ‘COMBINER_CONTIGUOUS’ of type int(103)
               
               
*note COMBINER_VECTOR: 156.Constant ‘COMBINER_VECTOR’ of type int(104)
               
               
*note COMBINER_HVECTOR: 157.Constant ‘COMBINER_HVECTOR’ of type int(105)
               
               
*note COMBINER_INDEXED: 158.Constant ‘COMBINER_INDEXED’ of type int(106)
               
               
*note COMBINER_HINDEXED: 159.Constant ‘COMBINER_HINDEXED’ of type int(107)
               
               
*note COMBINER_INDEXED_BLOCK: 15a.Constant ‘COMBINER_INDEXED_BLOCK’ of type int(108)
               
               
*note COMBINER_HINDEXED_BLOCK: 15b.Constant ‘COMBINER_HINDEXED_BLOCK’ of type int(109)
               
               
*note COMBINER_STRUCT: 15c.Constant ‘COMBINER_STRUCT’ of type int(110)
               
               
*note COMBINER_SUBARRAY: 15d.Constant ‘COMBINER_SUBARRAY’ of type int(111)
               
               
*note COMBINER_DARRAY: 15e.Constant ‘COMBINER_DARRAY’ of type int(112)
               
               
*note COMBINER_RESIZED: 15f.Constant ‘COMBINER_RESIZED’ of type int(113)
               
               
*note COMBINER_VALUE_INDEX: 160.Constant ‘COMBINER_VALUE_INDEX’ of type int(114)
               
               
*note COMBINER_F90_INTEGER: 163.Constant ‘COMBINER_F90_INTEGER’ of type int(115)
               
               
*note COMBINER_F90_REAL: 161.Constant ‘COMBINER_F90_REAL’ of type int(116)
               
               
*note COMBINER_F90_COMPLEX: 162.Constant ‘COMBINER_F90_COMPLEX’ of type int(117)
               
               
*note F_SOURCE: 55d.Constant ‘F_SOURCE’ of type int(118)
               
               
*note F_TAG: 55e.Constant ‘F_TAG’ of type int(119)
               
               
*note F_ERROR: 55f.Constant ‘F_ERROR’ of type int(120)
               
               
*note F_STATUS_SIZE: 560.Constant ‘F_STATUS_SIZE’ of type int(121)
               
               
*note IDENT: 164.Constant ‘IDENT’ of type int(122)
               
               
*note CONGRUENT: 165.Constant ‘CONGRUENT’ of type int(123)
               
               
*note SIMILAR: 166.Constant ‘SIMILAR’ of type int(124)
               
               
*note UNEQUAL: 167.Constant ‘UNEQUAL’ of type int(125)
               
               
*note CART: 168.Constant ‘CART’ of type int(126)
               
               
*note GRAPH: 169.Constant ‘GRAPH’ of type int(127)
               
               
*note DIST_GRAPH: 16a.Constant ‘DIST_GRAPH’ of type int(128)
               
               
*note UNWEIGHTED: 16b.Constant ‘UNWEIGHTED’ of type int(129)
               
               
*note WEIGHTS_EMPTY: 16c.Constant ‘WEIGHTS_EMPTY’ of type int(130)
               
               
*note COMM_TYPE_SHARED: 16d.Constant ‘COMM_TYPE_SHARED’ of type int(131)
               
               
*note COMM_TYPE_HW_GUIDED: 561.Constant ‘COMM_TYPE_HW_GUIDED’ of type int(132)
               
               
*note COMM_TYPE_HW_UNGUIDED: 562.Constant ‘COMM_TYPE_HW_UNGUIDED’ of type int(133)
               
               
*note COMM_TYPE_RESOURCE_GUIDED: 563.Constant ‘COMM_TYPE_RESOURCE_GUIDED’ of type int(134)
               
               
*note BSEND_OVERHEAD: 16e.Constant ‘BSEND_OVERHEAD’ of type int(135)
               
               
*note BUFFER_AUTOMATIC: fe.Constant ‘BUFFER_AUTOMATIC’ of type *note BufferAutomaticType: ff.
               
               
*note WIN_FLAVOR_CREATE: 16f.Constant ‘WIN_FLAVOR_CREATE’ of type int(136)
               
               
*note WIN_FLAVOR_ALLOCATE: 170.Constant ‘WIN_FLAVOR_ALLOCATE’ of type int(137)
               
               
*note WIN_FLAVOR_DYNAMIC: 171.Constant ‘WIN_FLAVOR_DYNAMIC’ of type int(138)
               
               
*note WIN_FLAVOR_SHARED: 172.Constant ‘WIN_FLAVOR_SHARED’ of type int(139)
               
               
*note WIN_SEPARATE: 173.Constant ‘WIN_SEPARATE’ of type int(140)
               
               
*note WIN_UNIFIED: 174.Constant ‘WIN_UNIFIED’ of type int(141)
               
               
*note MODE_NOCHECK: 175.Constant ‘MODE_NOCHECK’ of type int(142)
               
               
*note MODE_NOSTORE: 176.Constant ‘MODE_NOSTORE’ of type int(143)
               
               
*note MODE_NOPUT: 177.Constant ‘MODE_NOPUT’ of type int(144)
               
               
*note MODE_NOPRECEDE: 178.Constant ‘MODE_NOPRECEDE’ of type int(145)
               
               
*note MODE_NOSUCCEED: 179.Constant ‘MODE_NOSUCCEED’ of type int(146)
               
               
*note LOCK_EXCLUSIVE: 17a.Constant ‘LOCK_EXCLUSIVE’ of type int(147)
               
               
*note LOCK_SHARED: 17b.Constant ‘LOCK_SHARED’ of type int(148)
               
               
*note MODE_RDONLY: 17c.Constant ‘MODE_RDONLY’ of type int(149)
               
               
*note MODE_WRONLY: 17d.Constant ‘MODE_WRONLY’ of type int(150)
               
               
*note MODE_RDWR: 17e.Constant ‘MODE_RDWR’ of type int(151)
               
               
*note MODE_CREATE: 17f.Constant ‘MODE_CREATE’ of type int(152)
               
               
*note MODE_EXCL: 180.Constant ‘MODE_EXCL’ of type int(153)
               
               
*note MODE_DELETE_ON_CLOSE: 181.Constant ‘MODE_DELETE_ON_CLOSE’ of type int(154)
               
               
*note MODE_UNIQUE_OPEN: 182.Constant ‘MODE_UNIQUE_OPEN’ of type int(155)
               
               
*note MODE_SEQUENTIAL: 183.Constant ‘MODE_SEQUENTIAL’ of type int(156)
               
               
*note MODE_APPEND: 184.Constant ‘MODE_APPEND’ of type int(157)
               
               
*note SEEK_SET: 185.Constant ‘SEEK_SET’ of type int(158)
               
               
*note SEEK_CUR: 186.Constant ‘SEEK_CUR’ of type int(159)
               
               
*note SEEK_END: 187.Constant ‘SEEK_END’ of type int(160)
               
               
*note DISPLACEMENT_CURRENT: 188.Constant ‘DISPLACEMENT_CURRENT’ of type int(161)
               
               
*note DISP_CUR: 189.Constant ‘DISP_CUR’ of type int(162)
               
               
*note THREAD_SINGLE: 18a.Constant ‘THREAD_SINGLE’ of type int(163)
               
               
*note THREAD_FUNNELED: 18b.Constant ‘THREAD_FUNNELED’ of type int(164)
               
               
*note THREAD_SERIALIZED: 18c.Constant ‘THREAD_SERIALIZED’ of type int(165)
               
               
*note THREAD_MULTIPLE: 18d.Constant ‘THREAD_MULTIPLE’ of type int(166)
               
               
*note VERSION: 18e.Constant ‘VERSION’ of type int(167)
               
               
*note SUBVERSION: 18f.Constant ‘SUBVERSION’ of type int(168)
               
               
*note MAX_PROCESSOR_NAME: 190.Constant ‘MAX_PROCESSOR_NAME’ of type int(169)
               
               
*note MAX_ERROR_STRING: 191.Constant ‘MAX_ERROR_STRING’ of type int(170)
               
               
*note MAX_PORT_NAME: 192.Constant ‘MAX_PORT_NAME’ of type int(171)
               
               
*note MAX_INFO_KEY: 193.Constant ‘MAX_INFO_KEY’ of type int(172)
               
               
*note MAX_INFO_VAL: 194.Constant ‘MAX_INFO_VAL’ of type int(173)
               
               
*note MAX_OBJECT_NAME: 195.Constant ‘MAX_OBJECT_NAME’ of type int(174)
               
               
*note MAX_DATAREP_STRING: 196.Constant ‘MAX_DATAREP_STRING’ of type int(175)
               
               
*note MAX_LIBRARY_VERSION_STRING: 197.Constant ‘MAX_LIBRARY_VERSION_STRING’ of type int(176)
               
               
*note MAX_PSET_NAME_LEN: 564.Constant ‘MAX_PSET_NAME_LEN’ of type int(177)
               
               
*note MAX_STRINGTAG_LEN: 565.Constant ‘MAX_STRINGTAG_LEN’ of type int(178)
               
               
*note DATATYPE_NULL: 198.Object ‘DATATYPE_NULL’ of type *note Datatype: d0.
               
               
*note PACKED: 199.Object ‘PACKED’ of type *note Datatype: d0.
               
               
*note BYTE: 19a.Object ‘BYTE’ of type *note Datatype: d0.
               
               
*note AINT: 19b.Object ‘AINT’ of type *note Datatype: d0.
               
               
*note OFFSET: 19c.Object ‘OFFSET’ of type *note Datatype: d0.
               
               
*note COUNT: 19d.Object ‘COUNT’ of type *note Datatype: d0.
               
               
*note CHAR: 19e.Object ‘CHAR’ of type *note Datatype: d0.
               
               
*note WCHAR: 19f.Object ‘WCHAR’ of type *note Datatype: d0.
               
               
*note SIGNED_CHAR: 1a0.Object ‘SIGNED_CHAR’ of type *note Datatype: d0.
               
               
*note SHORT: 1a1.Object ‘SHORT’ of type *note Datatype: d0.
               
               
*note INT: 1a2.Object ‘INT’ of type *note Datatype: d0.
               
               
*note LONG: 1a3.Object ‘LONG’ of type *note Datatype: d0.
               
               
*note LONG_LONG: 1a4.Object ‘LONG_LONG’ of type *note Datatype: d0.
               
               
*note UNSIGNED_CHAR: 1a5.Object ‘UNSIGNED_CHAR’ of type *note Datatype: d0.
               
               
*note UNSIGNED_SHORT: 1a6.Object ‘UNSIGNED_SHORT’ of type *note Datatype: d0.
               
               
*note UNSIGNED: 1a7.Object ‘UNSIGNED’ of type *note Datatype: d0.
               
               
*note UNSIGNED_LONG: 1a8.Object ‘UNSIGNED_LONG’ of type *note Datatype: d0.
               
               
*note UNSIGNED_LONG_LONG: 1a9.Object ‘UNSIGNED_LONG_LONG’ of type *note Datatype: d0.
               
               
*note FLOAT: 1aa.Object ‘FLOAT’ of type *note Datatype: d0.
               
               
*note DOUBLE: 1ab.Object ‘DOUBLE’ of type *note Datatype: d0.
               
               
*note LONG_DOUBLE: 1ac.Object ‘LONG_DOUBLE’ of type *note Datatype: d0.
               
               
*note C_BOOL: 1ad.Object ‘C_BOOL’ of type *note Datatype: d0.
               
               
*note INT8_T: 1ae.Object ‘INT8_T’ of type *note Datatype: d0.
               
               
*note INT16_T: 1af.Object ‘INT16_T’ of type *note Datatype: d0.
               
               
*note INT32_T: 1b0.Object ‘INT32_T’ of type *note Datatype: d0.
               
               
*note INT64_T: 1b1.Object ‘INT64_T’ of type *note Datatype: d0.
               
               
*note UINT8_T: 1b2.Object ‘UINT8_T’ of type *note Datatype: d0.
               
               
*note UINT16_T: 1b3.Object ‘UINT16_T’ of type *note Datatype: d0.
               
               
*note UINT32_T: 1b4.Object ‘UINT32_T’ of type *note Datatype: d0.
               
               
*note UINT64_T: 1b5.Object ‘UINT64_T’ of type *note Datatype: d0.
               
               
*note C_COMPLEX: 1b6.Object ‘C_COMPLEX’ of type *note Datatype: d0.
               
               
*note C_FLOAT_COMPLEX: 1b7.Object ‘C_FLOAT_COMPLEX’ of type *note Datatype: d0.
               
               
*note C_DOUBLE_COMPLEX: 1b8.Object ‘C_DOUBLE_COMPLEX’ of type *note Datatype: d0.
               
               
*note C_LONG_DOUBLE_COMPLEX: 1b9.Object ‘C_LONG_DOUBLE_COMPLEX’ of type *note Datatype: d0.
               
               
*note CXX_BOOL: 1ba.Object ‘CXX_BOOL’ of type *note Datatype: d0.
               
               
*note CXX_FLOAT_COMPLEX: 1bb.Object ‘CXX_FLOAT_COMPLEX’ of type *note Datatype: d0.
               
               
*note CXX_DOUBLE_COMPLEX: 1bc.Object ‘CXX_DOUBLE_COMPLEX’ of type *note Datatype: d0.
               
               
*note CXX_LONG_DOUBLE_COMPLEX: 1bd.Object ‘CXX_LONG_DOUBLE_COMPLEX’ of type *note Datatype: d0.
               
               
*note SHORT_INT: 1be.Object ‘SHORT_INT’ of type *note Datatype: d0.
               
               
*note INT_INT: 1bf.Object ‘INT_INT’ of type *note Datatype: d0.
               
               
*note TWOINT: 1c0.Object ‘TWOINT’ of type *note Datatype: d0.
               
               
*note LONG_INT: 1c1.Object ‘LONG_INT’ of type *note Datatype: d0.
               
               
*note FLOAT_INT: 1c2.Object ‘FLOAT_INT’ of type *note Datatype: d0.
               
               
*note DOUBLE_INT: 1c3.Object ‘DOUBLE_INT’ of type *note Datatype: d0.
               
               
*note LONG_DOUBLE_INT: 1c4.Object ‘LONG_DOUBLE_INT’ of type *note Datatype: d0.
               
               
*note CHARACTER: 1c5.Object ‘CHARACTER’ of type *note Datatype: d0.
               
               
*note LOGICAL: 1c6.Object ‘LOGICAL’ of type *note Datatype: d0.
               
               
*note INTEGER: 1c7.Object ‘INTEGER’ of type *note Datatype: d0.
               
               
*note REAL: 1c8.Object ‘REAL’ of type *note Datatype: d0.
               
               
*note DOUBLE_PRECISION: 1c9.Object ‘DOUBLE_PRECISION’ of type *note Datatype: d0.
               
               
*note COMPLEX: 1ca.Object ‘COMPLEX’ of type *note Datatype: d0.
               
               
*note DOUBLE_COMPLEX: 1cb.Object ‘DOUBLE_COMPLEX’ of type *note Datatype: d0.
               
               
*note LOGICAL1: 1cc.Object ‘LOGICAL1’ of type *note Datatype: d0.
               
               
*note LOGICAL2: 1cd.Object ‘LOGICAL2’ of type *note Datatype: d0.
               
               
*note LOGICAL4: 1ce.Object ‘LOGICAL4’ of type *note Datatype: d0.
               
               
*note LOGICAL8: 1cf.Object ‘LOGICAL8’ of type *note Datatype: d0.
               
               
*note INTEGER1: 1d0.Object ‘INTEGER1’ of type *note Datatype: d0.
               
               
*note INTEGER2: 1d1.Object ‘INTEGER2’ of type *note Datatype: d0.
               
               
*note INTEGER4: 1d2.Object ‘INTEGER4’ of type *note Datatype: d0.
               
               
*note INTEGER8: 1d3.Object ‘INTEGER8’ of type *note Datatype: d0.
               
               
*note INTEGER16: 1d4.Object ‘INTEGER16’ of type *note Datatype: d0.
               
               
*note REAL2: 1d5.Object ‘REAL2’ of type *note Datatype: d0.
               
               
*note REAL4: 1d6.Object ‘REAL4’ of type *note Datatype: d0.
               
               
*note REAL8: 1d7.Object ‘REAL8’ of type *note Datatype: d0.
               
               
*note REAL16: 1d8.Object ‘REAL16’ of type *note Datatype: d0.
               
               
*note COMPLEX4: 1d9.Object ‘COMPLEX4’ of type *note Datatype: d0.
               
               
*note COMPLEX8: 1da.Object ‘COMPLEX8’ of type *note Datatype: d0.
               
               
*note COMPLEX16: 1db.Object ‘COMPLEX16’ of type *note Datatype: d0.
               
               
*note COMPLEX32: 1dc.Object ‘COMPLEX32’ of type *note Datatype: d0.
               
               
*note UNSIGNED_INT: 1dd.Object ‘UNSIGNED_INT’ of type *note Datatype: d0.
               
               
*note SIGNED_SHORT: 1de.Object ‘SIGNED_SHORT’ of type *note Datatype: d0.
               
               
*note SIGNED_INT: 1df.Object ‘SIGNED_INT’ of type *note Datatype: d0.
               
               
*note SIGNED_LONG: 1e0.Object ‘SIGNED_LONG’ of type *note Datatype: d0.
               
               
*note SIGNED_LONG_LONG: 1e1.Object ‘SIGNED_LONG_LONG’ of type *note Datatype: d0.
               
               
*note BOOL: 1e2.Object ‘BOOL’ of type *note Datatype: d0.
               
               
*note SINT8_T: 1e3.Object ‘SINT8_T’ of type *note Datatype: d0.
               
               
*note SINT16_T: 1e4.Object ‘SINT16_T’ of type *note Datatype: d0.
               
               
*note SINT32_T: 1e5.Object ‘SINT32_T’ of type *note Datatype: d0.
               
               
*note SINT64_T: 1e6.Object ‘SINT64_T’ of type *note Datatype: d0.
               
               
*note F_BOOL: 1e7.Object ‘F_BOOL’ of type *note Datatype: d0.
               
               
*note F_INT: 1e8.Object ‘F_INT’ of type *note Datatype: d0.
               
               
*note F_FLOAT: 1e9.Object ‘F_FLOAT’ of type *note Datatype: d0.
               
               
*note F_DOUBLE: 1ea.Object ‘F_DOUBLE’ of type *note Datatype: d0.
               
               
*note F_COMPLEX: 1eb.Object ‘F_COMPLEX’ of type *note Datatype: d0.
               
               
*note F_FLOAT_COMPLEX: 1ec.Object ‘F_FLOAT_COMPLEX’ of type *note Datatype: d0.
               
               
*note F_DOUBLE_COMPLEX: 1ed.Object ‘F_DOUBLE_COMPLEX’ of type *note Datatype: d0.
               
               
*note REQUEST_NULL: 1ee.Object ‘REQUEST_NULL’ of type *note Request: 43.
               
               
*note MESSAGE_NULL: 1ef.Object ‘MESSAGE_NULL’ of type *note Message: d7.
               
               
*note MESSAGE_NO_PROC: 1f0.Object ‘MESSAGE_NO_PROC’ of type *note Message: d7.
               
               
*note OP_NULL: 1f1.Object ‘OP_NULL’ of type *note Op: d3.
               
               
*note MAX: 67. Object ‘MAX’ of type *note Op: d3.
               
               
*note MIN: 1f2.Object ‘MIN’ of type *note Op: d3.
               
               
*note SUM: 65. Object ‘SUM’ of type *note Op: d3.
               
               
*note PROD: 66.Object ‘PROD’ of type *note Op: d3.
               
               
*note LAND: 1f3.Object ‘LAND’ of type *note Op: d3.
               
               
*note BAND: 1f4.Object ‘BAND’ of type *note Op: d3.
               
               
*note LOR: 1f5.Object ‘LOR’ of type *note Op: d3.
               
               
*note BOR: 1f6.Object ‘BOR’ of type *note Op: d3.
               
               
*note LXOR: 1f7.Object ‘LXOR’ of type *note Op: d3.
               
               
*note BXOR: 1f8.Object ‘BXOR’ of type *note Op: d3.
               
               
*note MAXLOC: 1f9.Object ‘MAXLOC’ of type *note Op: d3.
               
               
*note MINLOC: 1fa.Object ‘MINLOC’ of type *note Op: d3.
               
               
*note REPLACE: 1fb.Object ‘REPLACE’ of type *note Op: d3.
               
               
*note NO_OP: 1fc.Object ‘NO_OP’ of type *note Op: d3.
               
               
*note GROUP_NULL: 1fd.Object ‘GROUP_NULL’ of type *note Group: 28.
               
               
*note GROUP_EMPTY: 1fe.Object ‘GROUP_EMPTY’ of type *note Group: 28.
               
               
*note INFO_NULL: 1ff.Object ‘INFO_NULL’ of type *note Info: d4.
               
               
*note INFO_ENV: 200.Object ‘INFO_ENV’ of type *note Info: d4.
               
               
*note ERRHANDLER_NULL: 201.Object ‘ERRHANDLER_NULL’ of type *note Errhandler: d8.
               
               
*note ERRORS_RETURN: 99.Object ‘ERRORS_RETURN’ of type *note Errhandler: d8.
               
               
*note ERRORS_ABORT: 566.Object ‘ERRORS_ABORT’ of type *note Errhandler: d8.
               
               
*note ERRORS_ARE_FATAL: 9a.Object ‘ERRORS_ARE_FATAL’ of type *note Errhandler: d8.
               
               
*note SESSION_NULL: 567.Object ‘SESSION_NULL’ of type *note Session: d5.
               
               
*note COMM_NULL: 202.Object ‘COMM_NULL’ of type *note Comm: 1e.
               
               
*note COMM_SELF: 23.Object ‘COMM_SELF’ of type *note Intracomm: 1f.
               
               
*note COMM_WORLD: 24.Object ‘COMM_WORLD’ of type *note Intracomm: 1f.
               
               
*note WIN_NULL: 203.Object ‘WIN_NULL’ of type *note Win: 76.
               
               
*note FILE_NULL: 204.Object ‘FILE_NULL’ of type *note File: 84.
               
               
*note pickle: a8.Object ‘pickle’ of type *note Pickle: d9.
               

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/stdtypes.html#tuple

   (2) https://docs.python.org/3/library/stdtypes.html#str

   (3) https://docs.python.org/3/library/stdtypes.html#tuple

   (4) https://docs.python.org/3/library/functions.html#int

   (5) https://docs.python.org/3/library/functions.html#int

   (6) https://docs.python.org/3/library/functions.html#int

   (7) https://docs.python.org/3/library/functions.html#int

   (8) https://docs.python.org/3/library/functions.html#int

   (9) https://docs.python.org/3/library/functions.html#int

   (10) https://docs.python.org/3/library/functions.html#int

   (11) https://docs.python.org/3/library/functions.html#int

   (12) https://docs.python.org/3/library/functions.html#int

   (13) https://docs.python.org/3/library/functions.html#int

   (14) https://docs.python.org/3/library/functions.html#int

   (15) https://docs.python.org/3/library/functions.html#int

   (16) https://docs.python.org/3/library/functions.html#int

   (17) https://docs.python.org/3/library/functions.html#int

   (18) https://docs.python.org/3/library/functions.html#int

   (19) https://docs.python.org/3/library/functions.html#int

   (20) https://docs.python.org/3/library/functions.html#int

   (21) https://docs.python.org/3/library/functions.html#int

   (22) https://docs.python.org/3/library/functions.html#int

   (23) https://docs.python.org/3/library/functions.html#int

   (24) https://docs.python.org/3/library/functions.html#int

   (25) https://docs.python.org/3/library/functions.html#int

   (26) https://docs.python.org/3/library/functions.html#int

   (27) https://docs.python.org/3/library/functions.html#int

   (28) https://docs.python.org/3/library/functions.html#int

   (29) https://docs.python.org/3/library/functions.html#int

   (30) https://docs.python.org/3/library/functions.html#int

   (31) https://docs.python.org/3/library/functions.html#int

   (32) https://docs.python.org/3/library/functions.html#int

   (33) https://docs.python.org/3/library/functions.html#int

   (34) https://docs.python.org/3/library/functions.html#int

   (35) https://docs.python.org/3/library/functions.html#int

   (36) https://docs.python.org/3/library/functions.html#int

   (37) https://docs.python.org/3/library/functions.html#int

   (38) https://docs.python.org/3/library/functions.html#int

   (39) https://docs.python.org/3/library/functions.html#int

   (40) https://docs.python.org/3/library/functions.html#int

   (41) https://docs.python.org/3/library/functions.html#int

   (42) https://docs.python.org/3/library/functions.html#int

   (43) https://docs.python.org/3/library/functions.html#int

   (44) https://docs.python.org/3/library/functions.html#int

   (45) https://docs.python.org/3/library/functions.html#int

   (46) https://docs.python.org/3/library/functions.html#int

   (47) https://docs.python.org/3/library/functions.html#int

   (48) https://docs.python.org/3/library/functions.html#int

   (49) https://docs.python.org/3/library/functions.html#int

   (50) https://docs.python.org/3/library/functions.html#int

   (51) https://docs.python.org/3/library/functions.html#int

   (52) https://docs.python.org/3/library/functions.html#int

   (53) https://docs.python.org/3/library/functions.html#int

   (54) https://docs.python.org/3/library/functions.html#int

   (55) https://docs.python.org/3/library/functions.html#int

   (56) https://docs.python.org/3/library/functions.html#int

   (57) https://docs.python.org/3/library/functions.html#int

   (58) https://docs.python.org/3/library/functions.html#int

   (59) https://docs.python.org/3/library/functions.html#int

   (60) https://docs.python.org/3/library/functions.html#int

   (61) https://docs.python.org/3/library/functions.html#int

   (62) https://docs.python.org/3/library/functions.html#int

   (63) https://docs.python.org/3/library/functions.html#int

   (64) https://docs.python.org/3/library/functions.html#int

   (65) https://docs.python.org/3/library/functions.html#int

   (66) https://docs.python.org/3/library/functions.html#int

   (67) https://docs.python.org/3/library/functions.html#int

   (68) https://docs.python.org/3/library/functions.html#int

   (69) https://docs.python.org/3/library/functions.html#int

   (70) https://docs.python.org/3/library/functions.html#int

   (71) https://docs.python.org/3/library/functions.html#int

   (72) https://docs.python.org/3/library/functions.html#int

   (73) https://docs.python.org/3/library/functions.html#int

   (74) https://docs.python.org/3/library/functions.html#int

   (75) https://docs.python.org/3/library/functions.html#int

   (76) https://docs.python.org/3/library/functions.html#int

   (77) https://docs.python.org/3/library/functions.html#int

   (78) https://docs.python.org/3/library/functions.html#int

   (79) https://docs.python.org/3/library/functions.html#int

   (80) https://docs.python.org/3/library/functions.html#int

   (81) https://docs.python.org/3/library/functions.html#int

   (82) https://docs.python.org/3/library/functions.html#int

   (83) https://docs.python.org/3/library/functions.html#int

   (84) https://docs.python.org/3/library/functions.html#int

   (85) https://docs.python.org/3/library/functions.html#int

   (86) https://docs.python.org/3/library/functions.html#int

   (87) https://docs.python.org/3/library/functions.html#int

   (88) https://docs.python.org/3/library/functions.html#int

   (89) https://docs.python.org/3/library/functions.html#int

   (90) https://docs.python.org/3/library/functions.html#int

   (91) https://docs.python.org/3/library/functions.html#int

   (92) https://docs.python.org/3/library/functions.html#int

   (93) https://docs.python.org/3/library/functions.html#int

   (94) https://docs.python.org/3/library/functions.html#int

   (95) https://docs.python.org/3/library/functions.html#int

   (96) https://docs.python.org/3/library/functions.html#int

   (97) https://docs.python.org/3/library/functions.html#int

   (98) https://docs.python.org/3/library/functions.html#int

   (99) https://docs.python.org/3/library/functions.html#int

   (100) https://docs.python.org/3/library/functions.html#int

   (101) https://docs.python.org/3/library/functions.html#int

   (102) https://docs.python.org/3/library/functions.html#int

   (103) https://docs.python.org/3/library/functions.html#int

   (104) https://docs.python.org/3/library/functions.html#int

   (105) https://docs.python.org/3/library/functions.html#int

   (106) https://docs.python.org/3/library/functions.html#int

   (107) https://docs.python.org/3/library/functions.html#int

   (108) https://docs.python.org/3/library/functions.html#int

   (109) https://docs.python.org/3/library/functions.html#int

   (110) https://docs.python.org/3/library/functions.html#int

   (111) https://docs.python.org/3/library/functions.html#int

   (112) https://docs.python.org/3/library/functions.html#int

   (113) https://docs.python.org/3/library/functions.html#int

   (114) https://docs.python.org/3/library/functions.html#int

   (115) https://docs.python.org/3/library/functions.html#int

   (116) https://docs.python.org/3/library/functions.html#int

   (117) https://docs.python.org/3/library/functions.html#int

   (118) https://docs.python.org/3/library/functions.html#int

   (119) https://docs.python.org/3/library/functions.html#int

   (120) https://docs.python.org/3/library/functions.html#int

   (121) https://docs.python.org/3/library/functions.html#int

   (122) https://docs.python.org/3/library/functions.html#int

   (123) https://docs.python.org/3/library/functions.html#int

   (124) https://docs.python.org/3/library/functions.html#int

   (125) https://docs.python.org/3/library/functions.html#int

   (126) https://docs.python.org/3/library/functions.html#int

   (127) https://docs.python.org/3/library/functions.html#int

   (128) https://docs.python.org/3/library/functions.html#int

   (129) https://docs.python.org/3/library/functions.html#int

   (130) https://docs.python.org/3/library/functions.html#int

   (131) https://docs.python.org/3/library/functions.html#int

   (132) https://docs.python.org/3/library/functions.html#int

   (133) https://docs.python.org/3/library/functions.html#int

   (134) https://docs.python.org/3/library/functions.html#int

   (135) https://docs.python.org/3/library/functions.html#int

   (136) https://docs.python.org/3/library/functions.html#int

   (137) https://docs.python.org/3/library/functions.html#int

   (138) https://docs.python.org/3/library/functions.html#int

   (139) https://docs.python.org/3/library/functions.html#int

   (140) https://docs.python.org/3/library/functions.html#int

   (141) https://docs.python.org/3/library/functions.html#int

   (142) https://docs.python.org/3/library/functions.html#int

   (143) https://docs.python.org/3/library/functions.html#int

   (144) https://docs.python.org/3/library/functions.html#int

   (145) https://docs.python.org/3/library/functions.html#int

   (146) https://docs.python.org/3/library/functions.html#int

   (147) https://docs.python.org/3/library/functions.html#int

   (148) https://docs.python.org/3/library/functions.html#int

   (149) https://docs.python.org/3/library/functions.html#int

   (150) https://docs.python.org/3/library/functions.html#int

   (151) https://docs.python.org/3/library/functions.html#int

   (152) https://docs.python.org/3/library/functions.html#int

   (153) https://docs.python.org/3/library/functions.html#int

   (154) https://docs.python.org/3/library/functions.html#int

   (155) https://docs.python.org/3/library/functions.html#int

   (156) https://docs.python.org/3/library/functions.html#int

   (157) https://docs.python.org/3/library/functions.html#int

   (158) https://docs.python.org/3/library/functions.html#int

   (159) https://docs.python.org/3/library/functions.html#int

   (160) https://docs.python.org/3/library/functions.html#int

   (161) https://docs.python.org/3/library/functions.html#int

   (162) https://docs.python.org/3/library/functions.html#int

   (163) https://docs.python.org/3/library/functions.html#int

   (164) https://docs.python.org/3/library/functions.html#int

   (165) https://docs.python.org/3/library/functions.html#int

   (166) https://docs.python.org/3/library/functions.html#int

   (167) https://docs.python.org/3/library/functions.html#int

   (168) https://docs.python.org/3/library/functions.html#int

   (169) https://docs.python.org/3/library/functions.html#int

   (170) https://docs.python.org/3/library/functions.html#int

   (171) https://docs.python.org/3/library/functions.html#int

   (172) https://docs.python.org/3/library/functions.html#int

   (173) https://docs.python.org/3/library/functions.html#int

   (174) https://docs.python.org/3/library/functions.html#int

   (175) https://docs.python.org/3/library/functions.html#int

   (176) https://docs.python.org/3/library/functions.html#int

   (177) https://docs.python.org/3/library/functions.html#int

   (178) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNDEFINED,  Next: mpi4py MPI ANY_SOURCE,  Prev: mpi4py MPI get_vendor,  Up: mpi4py MPI<2>

11.1.67 mpi4py.MPI.UNDEFINED
----------------------------

 -- Data: mpi4py.MPI.UNDEFINED: int(1) = UNDEFINED

     Constant ‘UNDEFINED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ANY_SOURCE,  Next: mpi4py MPI ANY_TAG,  Prev: mpi4py MPI UNDEFINED,  Up: mpi4py MPI<2>

11.1.68 mpi4py.MPI.ANY_SOURCE
-----------------------------

 -- Data: mpi4py.MPI.ANY_SOURCE: int(1) = ANY_SOURCE

     Constant ‘ANY_SOURCE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ANY_TAG,  Next: mpi4py MPI PROC_NULL,  Prev: mpi4py MPI ANY_SOURCE,  Up: mpi4py MPI<2>

11.1.69 mpi4py.MPI.ANY_TAG
--------------------------

 -- Data: mpi4py.MPI.ANY_TAG: int(1) = ANY_TAG

     Constant ‘ANY_TAG’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI PROC_NULL,  Next: mpi4py MPI ROOT,  Prev: mpi4py MPI ANY_TAG,  Up: mpi4py MPI<2>

11.1.70 mpi4py.MPI.PROC_NULL
----------------------------

 -- Data: mpi4py.MPI.PROC_NULL: int(1) = PROC_NULL

     Constant ‘PROC_NULL’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ROOT,  Next: mpi4py MPI BOTTOM,  Prev: mpi4py MPI PROC_NULL,  Up: mpi4py MPI<2>

11.1.71 mpi4py.MPI.ROOT
-----------------------

 -- Data: mpi4py.MPI.ROOT: int(1) = ROOT

     Constant ‘ROOT’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI BOTTOM,  Next: mpi4py MPI IN_PLACE,  Prev: mpi4py MPI ROOT,  Up: mpi4py MPI<2>

11.1.72 mpi4py.MPI.BOTTOM
-------------------------

 -- Data: mpi4py.MPI.BOTTOM: *note BottomType: fb. = BOTTOM

     Constant ‘BOTTOM’ of type *note BottomType: fb.


File: mpi4py.info,  Node: mpi4py MPI IN_PLACE,  Next: mpi4py MPI KEYVAL_INVALID,  Prev: mpi4py MPI BOTTOM,  Up: mpi4py MPI<2>

11.1.73 mpi4py.MPI.IN_PLACE
---------------------------

 -- Data: mpi4py.MPI.IN_PLACE: *note InPlaceType: fd. = IN_PLACE

     Constant ‘IN_PLACE’ of type *note InPlaceType: fd.


File: mpi4py.info,  Node: mpi4py MPI KEYVAL_INVALID,  Next: mpi4py MPI TAG_UB,  Prev: mpi4py MPI IN_PLACE,  Up: mpi4py MPI<2>

11.1.74 mpi4py.MPI.KEYVAL_INVALID
---------------------------------

 -- Data: mpi4py.MPI.KEYVAL_INVALID: int(1) = KEYVAL_INVALID

     Constant ‘KEYVAL_INVALID’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TAG_UB,  Next: mpi4py MPI IO,  Prev: mpi4py MPI KEYVAL_INVALID,  Up: mpi4py MPI<2>

11.1.75 mpi4py.MPI.TAG_UB
-------------------------

 -- Data: mpi4py.MPI.TAG_UB: int(1) = TAG_UB

     Constant ‘TAG_UB’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI IO,  Next: mpi4py MPI WTIME_IS_GLOBAL,  Prev: mpi4py MPI TAG_UB,  Up: mpi4py MPI<2>

11.1.76 mpi4py.MPI.IO
---------------------

 -- Data: mpi4py.MPI.IO: int(1) = IO

     Constant ‘IO’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WTIME_IS_GLOBAL,  Next: mpi4py MPI UNIVERSE_SIZE,  Prev: mpi4py MPI IO,  Up: mpi4py MPI<2>

11.1.77 mpi4py.MPI.WTIME_IS_GLOBAL
----------------------------------

 -- Data: mpi4py.MPI.WTIME_IS_GLOBAL: int(1) = WTIME_IS_GLOBAL

     Constant ‘WTIME_IS_GLOBAL’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNIVERSE_SIZE,  Next: mpi4py MPI APPNUM,  Prev: mpi4py MPI WTIME_IS_GLOBAL,  Up: mpi4py MPI<2>

11.1.78 mpi4py.MPI.UNIVERSE_SIZE
--------------------------------

 -- Data: mpi4py.MPI.UNIVERSE_SIZE: int(1) = UNIVERSE_SIZE

     Constant ‘UNIVERSE_SIZE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI APPNUM,  Next: mpi4py MPI LASTUSEDCODE,  Prev: mpi4py MPI UNIVERSE_SIZE,  Up: mpi4py MPI<2>

11.1.79 mpi4py.MPI.APPNUM
-------------------------

 -- Data: mpi4py.MPI.APPNUM: int(1) = APPNUM

     Constant ‘APPNUM’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI LASTUSEDCODE,  Next: mpi4py MPI WIN_BASE,  Prev: mpi4py MPI APPNUM,  Up: mpi4py MPI<2>

11.1.80 mpi4py.MPI.LASTUSEDCODE
-------------------------------

 -- Data: mpi4py.MPI.LASTUSEDCODE: int(1) = LASTUSEDCODE

     Constant ‘LASTUSEDCODE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_BASE,  Next: mpi4py MPI WIN_SIZE,  Prev: mpi4py MPI LASTUSEDCODE,  Up: mpi4py MPI<2>

11.1.81 mpi4py.MPI.WIN_BASE
---------------------------

 -- Data: mpi4py.MPI.WIN_BASE: int(1) = WIN_BASE

     Constant ‘WIN_BASE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_SIZE,  Next: mpi4py MPI WIN_DISP_UNIT,  Prev: mpi4py MPI WIN_BASE,  Up: mpi4py MPI<2>

11.1.82 mpi4py.MPI.WIN_SIZE
---------------------------

 -- Data: mpi4py.MPI.WIN_SIZE: int(1) = WIN_SIZE

     Constant ‘WIN_SIZE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_DISP_UNIT,  Next: mpi4py MPI WIN_CREATE_FLAVOR,  Prev: mpi4py MPI WIN_SIZE,  Up: mpi4py MPI<2>

11.1.83 mpi4py.MPI.WIN_DISP_UNIT
--------------------------------

 -- Data: mpi4py.MPI.WIN_DISP_UNIT: int(1) = WIN_DISP_UNIT

     Constant ‘WIN_DISP_UNIT’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_CREATE_FLAVOR,  Next: mpi4py MPI WIN_FLAVOR,  Prev: mpi4py MPI WIN_DISP_UNIT,  Up: mpi4py MPI<2>

11.1.84 mpi4py.MPI.WIN_CREATE_FLAVOR
------------------------------------

 -- Data: mpi4py.MPI.WIN_CREATE_FLAVOR: int(1) = WIN_CREATE_FLAVOR

     Constant ‘WIN_CREATE_FLAVOR’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR,  Next: mpi4py MPI WIN_MODEL,  Prev: mpi4py MPI WIN_CREATE_FLAVOR,  Up: mpi4py MPI<2>

11.1.85 mpi4py.MPI.WIN_FLAVOR
-----------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR: int(1) = WIN_FLAVOR

     Constant ‘WIN_FLAVOR’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_MODEL,  Next: mpi4py MPI SUCCESS,  Prev: mpi4py MPI WIN_FLAVOR,  Up: mpi4py MPI<2>

11.1.86 mpi4py.MPI.WIN_MODEL
----------------------------

 -- Data: mpi4py.MPI.WIN_MODEL: int(1) = WIN_MODEL

     Constant ‘WIN_MODEL’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SUCCESS,  Next: mpi4py MPI ERR_LASTCODE,  Prev: mpi4py MPI WIN_MODEL,  Up: mpi4py MPI<2>

11.1.87 mpi4py.MPI.SUCCESS
--------------------------

 -- Data: mpi4py.MPI.SUCCESS: int(1) = SUCCESS

     Constant ‘SUCCESS’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_LASTCODE,  Next: mpi4py MPI ERR_TYPE,  Prev: mpi4py MPI SUCCESS,  Up: mpi4py MPI<2>

11.1.88 mpi4py.MPI.ERR_LASTCODE
-------------------------------

 -- Data: mpi4py.MPI.ERR_LASTCODE: int(1) = ERR_LASTCODE

     Constant ‘ERR_LASTCODE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TYPE,  Next: mpi4py MPI ERR_REQUEST,  Prev: mpi4py MPI ERR_LASTCODE,  Up: mpi4py MPI<2>

11.1.89 mpi4py.MPI.ERR_TYPE
---------------------------

 -- Data: mpi4py.MPI.ERR_TYPE: int(1) = ERR_TYPE

     Constant ‘ERR_TYPE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_REQUEST,  Next: mpi4py MPI ERR_OP,  Prev: mpi4py MPI ERR_TYPE,  Up: mpi4py MPI<2>

11.1.90 mpi4py.MPI.ERR_REQUEST
------------------------------

 -- Data: mpi4py.MPI.ERR_REQUEST: int(1) = ERR_REQUEST

     Constant ‘ERR_REQUEST’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_OP,  Next: mpi4py MPI ERR_GROUP,  Prev: mpi4py MPI ERR_REQUEST,  Up: mpi4py MPI<2>

11.1.91 mpi4py.MPI.ERR_OP
-------------------------

 -- Data: mpi4py.MPI.ERR_OP: int(1) = ERR_OP

     Constant ‘ERR_OP’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_GROUP,  Next: mpi4py MPI ERR_INFO,  Prev: mpi4py MPI ERR_OP,  Up: mpi4py MPI<2>

11.1.92 mpi4py.MPI.ERR_GROUP
----------------------------

 -- Data: mpi4py.MPI.ERR_GROUP: int(1) = ERR_GROUP

     Constant ‘ERR_GROUP’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO,  Next: mpi4py MPI ERR_ERRHANDLER,  Prev: mpi4py MPI ERR_GROUP,  Up: mpi4py MPI<2>

11.1.93 mpi4py.MPI.ERR_INFO
---------------------------

 -- Data: mpi4py.MPI.ERR_INFO: int(1) = ERR_INFO

     Constant ‘ERR_INFO’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ERRHANDLER,  Next: mpi4py MPI ERR_SESSION,  Prev: mpi4py MPI ERR_INFO,  Up: mpi4py MPI<2>

11.1.94 mpi4py.MPI.ERR_ERRHANDLER
---------------------------------

 -- Data: mpi4py.MPI.ERR_ERRHANDLER: int(1) = ERR_ERRHANDLER

     Constant ‘ERR_ERRHANDLER’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SESSION,  Next: mpi4py MPI ERR_COMM,  Prev: mpi4py MPI ERR_ERRHANDLER,  Up: mpi4py MPI<2>

11.1.95 mpi4py.MPI.ERR_SESSION
------------------------------

 -- Data: mpi4py.MPI.ERR_SESSION: int(1) = ERR_SESSION

     Constant ‘ERR_SESSION’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_COMM,  Next: mpi4py MPI ERR_WIN,  Prev: mpi4py MPI ERR_SESSION,  Up: mpi4py MPI<2>

11.1.96 mpi4py.MPI.ERR_COMM
---------------------------

 -- Data: mpi4py.MPI.ERR_COMM: int(1) = ERR_COMM

     Constant ‘ERR_COMM’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_WIN,  Next: mpi4py MPI ERR_FILE,  Prev: mpi4py MPI ERR_COMM,  Up: mpi4py MPI<2>

11.1.97 mpi4py.MPI.ERR_WIN
--------------------------

 -- Data: mpi4py.MPI.ERR_WIN: int(1) = ERR_WIN

     Constant ‘ERR_WIN’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_FILE,  Next: mpi4py MPI ERR_BUFFER,  Prev: mpi4py MPI ERR_WIN,  Up: mpi4py MPI<2>

11.1.98 mpi4py.MPI.ERR_FILE
---------------------------

 -- Data: mpi4py.MPI.ERR_FILE: int(1) = ERR_FILE

     Constant ‘ERR_FILE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_BUFFER,  Next: mpi4py MPI ERR_COUNT,  Prev: mpi4py MPI ERR_FILE,  Up: mpi4py MPI<2>

11.1.99 mpi4py.MPI.ERR_BUFFER
-----------------------------

 -- Data: mpi4py.MPI.ERR_BUFFER: int(1) = ERR_BUFFER

     Constant ‘ERR_BUFFER’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_COUNT,  Next: mpi4py MPI ERR_TAG,  Prev: mpi4py MPI ERR_BUFFER,  Up: mpi4py MPI<2>

11.1.100 mpi4py.MPI.ERR_COUNT
-----------------------------

 -- Data: mpi4py.MPI.ERR_COUNT: int(1) = ERR_COUNT

     Constant ‘ERR_COUNT’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TAG,  Next: mpi4py MPI ERR_RANK,  Prev: mpi4py MPI ERR_COUNT,  Up: mpi4py MPI<2>

11.1.101 mpi4py.MPI.ERR_TAG
---------------------------

 -- Data: mpi4py.MPI.ERR_TAG: int(1) = ERR_TAG

     Constant ‘ERR_TAG’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RANK,  Next: mpi4py MPI ERR_ROOT,  Prev: mpi4py MPI ERR_TAG,  Up: mpi4py MPI<2>

11.1.102 mpi4py.MPI.ERR_RANK
----------------------------

 -- Data: mpi4py.MPI.ERR_RANK: int(1) = ERR_RANK

     Constant ‘ERR_RANK’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ROOT,  Next: mpi4py MPI ERR_TRUNCATE,  Prev: mpi4py MPI ERR_RANK,  Up: mpi4py MPI<2>

11.1.103 mpi4py.MPI.ERR_ROOT
----------------------------

 -- Data: mpi4py.MPI.ERR_ROOT: int(1) = ERR_ROOT

     Constant ‘ERR_ROOT’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TRUNCATE,  Next: mpi4py MPI ERR_IN_STATUS,  Prev: mpi4py MPI ERR_ROOT,  Up: mpi4py MPI<2>

11.1.104 mpi4py.MPI.ERR_TRUNCATE
--------------------------------

 -- Data: mpi4py.MPI.ERR_TRUNCATE: int(1) = ERR_TRUNCATE

     Constant ‘ERR_TRUNCATE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_IN_STATUS,  Next: mpi4py MPI ERR_PENDING,  Prev: mpi4py MPI ERR_TRUNCATE,  Up: mpi4py MPI<2>

11.1.105 mpi4py.MPI.ERR_IN_STATUS
---------------------------------

 -- Data: mpi4py.MPI.ERR_IN_STATUS: int(1) = ERR_IN_STATUS

     Constant ‘ERR_IN_STATUS’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_PENDING,  Next: mpi4py MPI ERR_TOPOLOGY,  Prev: mpi4py MPI ERR_IN_STATUS,  Up: mpi4py MPI<2>

11.1.106 mpi4py.MPI.ERR_PENDING
-------------------------------

 -- Data: mpi4py.MPI.ERR_PENDING: int(1) = ERR_PENDING

     Constant ‘ERR_PENDING’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_TOPOLOGY,  Next: mpi4py MPI ERR_DIMS,  Prev: mpi4py MPI ERR_PENDING,  Up: mpi4py MPI<2>

11.1.107 mpi4py.MPI.ERR_TOPOLOGY
--------------------------------

 -- Data: mpi4py.MPI.ERR_TOPOLOGY: int(1) = ERR_TOPOLOGY

     Constant ‘ERR_TOPOLOGY’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_DIMS,  Next: mpi4py MPI ERR_ARG,  Prev: mpi4py MPI ERR_TOPOLOGY,  Up: mpi4py MPI<2>

11.1.108 mpi4py.MPI.ERR_DIMS
----------------------------

 -- Data: mpi4py.MPI.ERR_DIMS: int(1) = ERR_DIMS

     Constant ‘ERR_DIMS’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ARG,  Next: mpi4py MPI ERR_OTHER,  Prev: mpi4py MPI ERR_DIMS,  Up: mpi4py MPI<2>

11.1.109 mpi4py.MPI.ERR_ARG
---------------------------

 -- Data: mpi4py.MPI.ERR_ARG: int(1) = ERR_ARG

     Constant ‘ERR_ARG’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_OTHER,  Next: mpi4py MPI ERR_UNKNOWN,  Prev: mpi4py MPI ERR_ARG,  Up: mpi4py MPI<2>

11.1.110 mpi4py.MPI.ERR_OTHER
-----------------------------

 -- Data: mpi4py.MPI.ERR_OTHER: int(1) = ERR_OTHER

     Constant ‘ERR_OTHER’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_UNKNOWN,  Next: mpi4py MPI ERR_INTERN,  Prev: mpi4py MPI ERR_OTHER,  Up: mpi4py MPI<2>

11.1.111 mpi4py.MPI.ERR_UNKNOWN
-------------------------------

 -- Data: mpi4py.MPI.ERR_UNKNOWN: int(1) = ERR_UNKNOWN

     Constant ‘ERR_UNKNOWN’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INTERN,  Next: mpi4py MPI ERR_KEYVAL,  Prev: mpi4py MPI ERR_UNKNOWN,  Up: mpi4py MPI<2>

11.1.112 mpi4py.MPI.ERR_INTERN
------------------------------

 -- Data: mpi4py.MPI.ERR_INTERN: int(1) = ERR_INTERN

     Constant ‘ERR_INTERN’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_KEYVAL,  Next: mpi4py MPI ERR_NO_MEM,  Prev: mpi4py MPI ERR_INTERN,  Up: mpi4py MPI<2>

11.1.113 mpi4py.MPI.ERR_KEYVAL
------------------------------

 -- Data: mpi4py.MPI.ERR_KEYVAL: int(1) = ERR_KEYVAL

     Constant ‘ERR_KEYVAL’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NO_MEM,  Next: mpi4py MPI ERR_INFO_KEY,  Prev: mpi4py MPI ERR_KEYVAL,  Up: mpi4py MPI<2>

11.1.114 mpi4py.MPI.ERR_NO_MEM
------------------------------

 -- Data: mpi4py.MPI.ERR_NO_MEM: int(1) = ERR_NO_MEM

     Constant ‘ERR_NO_MEM’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO_KEY,  Next: mpi4py MPI ERR_INFO_VALUE,  Prev: mpi4py MPI ERR_NO_MEM,  Up: mpi4py MPI<2>

11.1.115 mpi4py.MPI.ERR_INFO_KEY
--------------------------------

 -- Data: mpi4py.MPI.ERR_INFO_KEY: int(1) = ERR_INFO_KEY

     Constant ‘ERR_INFO_KEY’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO_VALUE,  Next: mpi4py MPI ERR_INFO_NOKEY,  Prev: mpi4py MPI ERR_INFO_KEY,  Up: mpi4py MPI<2>

11.1.116 mpi4py.MPI.ERR_INFO_VALUE
----------------------------------

 -- Data: mpi4py.MPI.ERR_INFO_VALUE: int(1) = ERR_INFO_VALUE

     Constant ‘ERR_INFO_VALUE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_INFO_NOKEY,  Next: mpi4py MPI ERR_SPAWN,  Prev: mpi4py MPI ERR_INFO_VALUE,  Up: mpi4py MPI<2>

11.1.117 mpi4py.MPI.ERR_INFO_NOKEY
----------------------------------

 -- Data: mpi4py.MPI.ERR_INFO_NOKEY: int(1) = ERR_INFO_NOKEY

     Constant ‘ERR_INFO_NOKEY’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SPAWN,  Next: mpi4py MPI ERR_PORT,  Prev: mpi4py MPI ERR_INFO_NOKEY,  Up: mpi4py MPI<2>

11.1.118 mpi4py.MPI.ERR_SPAWN
-----------------------------

 -- Data: mpi4py.MPI.ERR_SPAWN: int(1) = ERR_SPAWN

     Constant ‘ERR_SPAWN’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_PORT,  Next: mpi4py MPI ERR_SERVICE,  Prev: mpi4py MPI ERR_SPAWN,  Up: mpi4py MPI<2>

11.1.119 mpi4py.MPI.ERR_PORT
----------------------------

 -- Data: mpi4py.MPI.ERR_PORT: int(1) = ERR_PORT

     Constant ‘ERR_PORT’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SERVICE,  Next: mpi4py MPI ERR_NAME,  Prev: mpi4py MPI ERR_PORT,  Up: mpi4py MPI<2>

11.1.120 mpi4py.MPI.ERR_SERVICE
-------------------------------

 -- Data: mpi4py.MPI.ERR_SERVICE: int(1) = ERR_SERVICE

     Constant ‘ERR_SERVICE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NAME,  Next: mpi4py MPI ERR_PROC_ABORTED,  Prev: mpi4py MPI ERR_SERVICE,  Up: mpi4py MPI<2>

11.1.121 mpi4py.MPI.ERR_NAME
----------------------------

 -- Data: mpi4py.MPI.ERR_NAME: int(1) = ERR_NAME

     Constant ‘ERR_NAME’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_PROC_ABORTED,  Next: mpi4py MPI ERR_BASE,  Prev: mpi4py MPI ERR_NAME,  Up: mpi4py MPI<2>

11.1.122 mpi4py.MPI.ERR_PROC_ABORTED
------------------------------------

 -- Data: mpi4py.MPI.ERR_PROC_ABORTED: int(1) = ERR_PROC_ABORTED

     Constant ‘ERR_PROC_ABORTED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_BASE,  Next: mpi4py MPI ERR_SIZE,  Prev: mpi4py MPI ERR_PROC_ABORTED,  Up: mpi4py MPI<2>

11.1.123 mpi4py.MPI.ERR_BASE
----------------------------

 -- Data: mpi4py.MPI.ERR_BASE: int(1) = ERR_BASE

     Constant ‘ERR_BASE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_SIZE,  Next: mpi4py MPI ERR_DISP,  Prev: mpi4py MPI ERR_BASE,  Up: mpi4py MPI<2>

11.1.124 mpi4py.MPI.ERR_SIZE
----------------------------

 -- Data: mpi4py.MPI.ERR_SIZE: int(1) = ERR_SIZE

     Constant ‘ERR_SIZE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_DISP,  Next: mpi4py MPI ERR_ASSERT,  Prev: mpi4py MPI ERR_SIZE,  Up: mpi4py MPI<2>

11.1.125 mpi4py.MPI.ERR_DISP
----------------------------

 -- Data: mpi4py.MPI.ERR_DISP: int(1) = ERR_DISP

     Constant ‘ERR_DISP’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ASSERT,  Next: mpi4py MPI ERR_LOCKTYPE,  Prev: mpi4py MPI ERR_DISP,  Up: mpi4py MPI<2>

11.1.126 mpi4py.MPI.ERR_ASSERT
------------------------------

 -- Data: mpi4py.MPI.ERR_ASSERT: int(1) = ERR_ASSERT

     Constant ‘ERR_ASSERT’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_LOCKTYPE,  Next: mpi4py MPI ERR_RMA_CONFLICT,  Prev: mpi4py MPI ERR_ASSERT,  Up: mpi4py MPI<2>

11.1.127 mpi4py.MPI.ERR_LOCKTYPE
--------------------------------

 -- Data: mpi4py.MPI.ERR_LOCKTYPE: int(1) = ERR_LOCKTYPE

     Constant ‘ERR_LOCKTYPE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_CONFLICT,  Next: mpi4py MPI ERR_RMA_SYNC,  Prev: mpi4py MPI ERR_LOCKTYPE,  Up: mpi4py MPI<2>

11.1.128 mpi4py.MPI.ERR_RMA_CONFLICT
------------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_CONFLICT: int(1) = ERR_RMA_CONFLICT

     Constant ‘ERR_RMA_CONFLICT’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_SYNC,  Next: mpi4py MPI ERR_RMA_RANGE,  Prev: mpi4py MPI ERR_RMA_CONFLICT,  Up: mpi4py MPI<2>

11.1.129 mpi4py.MPI.ERR_RMA_SYNC
--------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_SYNC: int(1) = ERR_RMA_SYNC

     Constant ‘ERR_RMA_SYNC’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_RANGE,  Next: mpi4py MPI ERR_RMA_ATTACH,  Prev: mpi4py MPI ERR_RMA_SYNC,  Up: mpi4py MPI<2>

11.1.130 mpi4py.MPI.ERR_RMA_RANGE
---------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_RANGE: int(1) = ERR_RMA_RANGE

     Constant ‘ERR_RMA_RANGE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_ATTACH,  Next: mpi4py MPI ERR_RMA_SHARED,  Prev: mpi4py MPI ERR_RMA_RANGE,  Up: mpi4py MPI<2>

11.1.131 mpi4py.MPI.ERR_RMA_ATTACH
----------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_ATTACH: int(1) = ERR_RMA_ATTACH

     Constant ‘ERR_RMA_ATTACH’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_SHARED,  Next: mpi4py MPI ERR_RMA_FLAVOR,  Prev: mpi4py MPI ERR_RMA_ATTACH,  Up: mpi4py MPI<2>

11.1.132 mpi4py.MPI.ERR_RMA_SHARED
----------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_SHARED: int(1) = ERR_RMA_SHARED

     Constant ‘ERR_RMA_SHARED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_RMA_FLAVOR,  Next: mpi4py MPI ERR_BAD_FILE,  Prev: mpi4py MPI ERR_RMA_SHARED,  Up: mpi4py MPI<2>

11.1.133 mpi4py.MPI.ERR_RMA_FLAVOR
----------------------------------

 -- Data: mpi4py.MPI.ERR_RMA_FLAVOR: int(1) = ERR_RMA_FLAVOR

     Constant ‘ERR_RMA_FLAVOR’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_BAD_FILE,  Next: mpi4py MPI ERR_NO_SUCH_FILE,  Prev: mpi4py MPI ERR_RMA_FLAVOR,  Up: mpi4py MPI<2>

11.1.134 mpi4py.MPI.ERR_BAD_FILE
--------------------------------

 -- Data: mpi4py.MPI.ERR_BAD_FILE: int(1) = ERR_BAD_FILE

     Constant ‘ERR_BAD_FILE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NO_SUCH_FILE,  Next: mpi4py MPI ERR_FILE_EXISTS,  Prev: mpi4py MPI ERR_BAD_FILE,  Up: mpi4py MPI<2>

11.1.135 mpi4py.MPI.ERR_NO_SUCH_FILE
------------------------------------

 -- Data: mpi4py.MPI.ERR_NO_SUCH_FILE: int(1) = ERR_NO_SUCH_FILE

     Constant ‘ERR_NO_SUCH_FILE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_FILE_EXISTS,  Next: mpi4py MPI ERR_FILE_IN_USE,  Prev: mpi4py MPI ERR_NO_SUCH_FILE,  Up: mpi4py MPI<2>

11.1.136 mpi4py.MPI.ERR_FILE_EXISTS
-----------------------------------

 -- Data: mpi4py.MPI.ERR_FILE_EXISTS: int(1) = ERR_FILE_EXISTS

     Constant ‘ERR_FILE_EXISTS’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_FILE_IN_USE,  Next: mpi4py MPI ERR_AMODE,  Prev: mpi4py MPI ERR_FILE_EXISTS,  Up: mpi4py MPI<2>

11.1.137 mpi4py.MPI.ERR_FILE_IN_USE
-----------------------------------

 -- Data: mpi4py.MPI.ERR_FILE_IN_USE: int(1) = ERR_FILE_IN_USE

     Constant ‘ERR_FILE_IN_USE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_AMODE,  Next: mpi4py MPI ERR_ACCESS,  Prev: mpi4py MPI ERR_FILE_IN_USE,  Up: mpi4py MPI<2>

11.1.138 mpi4py.MPI.ERR_AMODE
-----------------------------

 -- Data: mpi4py.MPI.ERR_AMODE: int(1) = ERR_AMODE

     Constant ‘ERR_AMODE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_ACCESS,  Next: mpi4py MPI ERR_READ_ONLY,  Prev: mpi4py MPI ERR_AMODE,  Up: mpi4py MPI<2>

11.1.139 mpi4py.MPI.ERR_ACCESS
------------------------------

 -- Data: mpi4py.MPI.ERR_ACCESS: int(1) = ERR_ACCESS

     Constant ‘ERR_ACCESS’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_READ_ONLY,  Next: mpi4py MPI ERR_NO_SPACE,  Prev: mpi4py MPI ERR_ACCESS,  Up: mpi4py MPI<2>

11.1.140 mpi4py.MPI.ERR_READ_ONLY
---------------------------------

 -- Data: mpi4py.MPI.ERR_READ_ONLY: int(1) = ERR_READ_ONLY

     Constant ‘ERR_READ_ONLY’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NO_SPACE,  Next: mpi4py MPI ERR_QUOTA,  Prev: mpi4py MPI ERR_READ_ONLY,  Up: mpi4py MPI<2>

11.1.141 mpi4py.MPI.ERR_NO_SPACE
--------------------------------

 -- Data: mpi4py.MPI.ERR_NO_SPACE: int(1) = ERR_NO_SPACE

     Constant ‘ERR_NO_SPACE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_QUOTA,  Next: mpi4py MPI ERR_NOT_SAME,  Prev: mpi4py MPI ERR_NO_SPACE,  Up: mpi4py MPI<2>

11.1.142 mpi4py.MPI.ERR_QUOTA
-----------------------------

 -- Data: mpi4py.MPI.ERR_QUOTA: int(1) = ERR_QUOTA

     Constant ‘ERR_QUOTA’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_NOT_SAME,  Next: mpi4py MPI ERR_IO,  Prev: mpi4py MPI ERR_QUOTA,  Up: mpi4py MPI<2>

11.1.143 mpi4py.MPI.ERR_NOT_SAME
--------------------------------

 -- Data: mpi4py.MPI.ERR_NOT_SAME: int(1) = ERR_NOT_SAME

     Constant ‘ERR_NOT_SAME’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_IO,  Next: mpi4py MPI ERR_UNSUPPORTED_OPERATION,  Prev: mpi4py MPI ERR_NOT_SAME,  Up: mpi4py MPI<2>

11.1.144 mpi4py.MPI.ERR_IO
--------------------------

 -- Data: mpi4py.MPI.ERR_IO: int(1) = ERR_IO

     Constant ‘ERR_IO’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_UNSUPPORTED_OPERATION,  Next: mpi4py MPI ERR_UNSUPPORTED_DATAREP,  Prev: mpi4py MPI ERR_IO,  Up: mpi4py MPI<2>

11.1.145 mpi4py.MPI.ERR_UNSUPPORTED_OPERATION
---------------------------------------------

 -- Data: mpi4py.MPI.ERR_UNSUPPORTED_OPERATION: int(1) =
          ERR_UNSUPPORTED_OPERATION

     Constant ‘ERR_UNSUPPORTED_OPERATION’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_UNSUPPORTED_DATAREP,  Next: mpi4py MPI ERR_CONVERSION,  Prev: mpi4py MPI ERR_UNSUPPORTED_OPERATION,  Up: mpi4py MPI<2>

11.1.146 mpi4py.MPI.ERR_UNSUPPORTED_DATAREP
-------------------------------------------

 -- Data: mpi4py.MPI.ERR_UNSUPPORTED_DATAREP: int(1) =
          ERR_UNSUPPORTED_DATAREP

     Constant ‘ERR_UNSUPPORTED_DATAREP’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_CONVERSION,  Next: mpi4py MPI ERR_DUP_DATAREP,  Prev: mpi4py MPI ERR_UNSUPPORTED_DATAREP,  Up: mpi4py MPI<2>

11.1.147 mpi4py.MPI.ERR_CONVERSION
----------------------------------

 -- Data: mpi4py.MPI.ERR_CONVERSION: int(1) = ERR_CONVERSION

     Constant ‘ERR_CONVERSION’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_DUP_DATAREP,  Next: mpi4py MPI ERR_VALUE_TOO_LARGE,  Prev: mpi4py MPI ERR_CONVERSION,  Up: mpi4py MPI<2>

11.1.148 mpi4py.MPI.ERR_DUP_DATAREP
-----------------------------------

 -- Data: mpi4py.MPI.ERR_DUP_DATAREP: int(1) = ERR_DUP_DATAREP

     Constant ‘ERR_DUP_DATAREP’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_VALUE_TOO_LARGE,  Next: mpi4py MPI ERR_REVOKED,  Prev: mpi4py MPI ERR_DUP_DATAREP,  Up: mpi4py MPI<2>

11.1.149 mpi4py.MPI.ERR_VALUE_TOO_LARGE
---------------------------------------

 -- Data: mpi4py.MPI.ERR_VALUE_TOO_LARGE: int(1) = ERR_VALUE_TOO_LARGE

     Constant ‘ERR_VALUE_TOO_LARGE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_REVOKED,  Next: mpi4py MPI ERR_PROC_FAILED,  Prev: mpi4py MPI ERR_VALUE_TOO_LARGE,  Up: mpi4py MPI<2>

11.1.150 mpi4py.MPI.ERR_REVOKED
-------------------------------

 -- Data: mpi4py.MPI.ERR_REVOKED: int(1) = ERR_REVOKED

     Constant ‘ERR_REVOKED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_PROC_FAILED,  Next: mpi4py MPI ERR_PROC_FAILED_PENDING,  Prev: mpi4py MPI ERR_REVOKED,  Up: mpi4py MPI<2>

11.1.151 mpi4py.MPI.ERR_PROC_FAILED
-----------------------------------

 -- Data: mpi4py.MPI.ERR_PROC_FAILED: int(1) = ERR_PROC_FAILED

     Constant ‘ERR_PROC_FAILED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ERR_PROC_FAILED_PENDING,  Next: mpi4py MPI ORDER_C,  Prev: mpi4py MPI ERR_PROC_FAILED,  Up: mpi4py MPI<2>

11.1.152 mpi4py.MPI.ERR_PROC_FAILED_PENDING
-------------------------------------------

 -- Data: mpi4py.MPI.ERR_PROC_FAILED_PENDING: int(1) =
          ERR_PROC_FAILED_PENDING

     Constant ‘ERR_PROC_FAILED_PENDING’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ORDER_C,  Next: mpi4py MPI ORDER_FORTRAN,  Prev: mpi4py MPI ERR_PROC_FAILED_PENDING,  Up: mpi4py MPI<2>

11.1.153 mpi4py.MPI.ORDER_C
---------------------------

 -- Data: mpi4py.MPI.ORDER_C: int(1) = ORDER_C

     Constant ‘ORDER_C’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ORDER_FORTRAN,  Next: mpi4py MPI ORDER_F,  Prev: mpi4py MPI ORDER_C,  Up: mpi4py MPI<2>

11.1.154 mpi4py.MPI.ORDER_FORTRAN
---------------------------------

 -- Data: mpi4py.MPI.ORDER_FORTRAN: int(1) = ORDER_FORTRAN

     Constant ‘ORDER_FORTRAN’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI ORDER_F,  Next: mpi4py MPI TYPECLASS_INTEGER,  Prev: mpi4py MPI ORDER_FORTRAN,  Up: mpi4py MPI<2>

11.1.155 mpi4py.MPI.ORDER_F
---------------------------

 -- Data: mpi4py.MPI.ORDER_F: int(1) = ORDER_F

     Constant ‘ORDER_F’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TYPECLASS_INTEGER,  Next: mpi4py MPI TYPECLASS_REAL,  Prev: mpi4py MPI ORDER_F,  Up: mpi4py MPI<2>

11.1.156 mpi4py.MPI.TYPECLASS_INTEGER
-------------------------------------

 -- Data: mpi4py.MPI.TYPECLASS_INTEGER: int(1) = TYPECLASS_INTEGER

     Constant ‘TYPECLASS_INTEGER’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TYPECLASS_REAL,  Next: mpi4py MPI TYPECLASS_COMPLEX,  Prev: mpi4py MPI TYPECLASS_INTEGER,  Up: mpi4py MPI<2>

11.1.157 mpi4py.MPI.TYPECLASS_REAL
----------------------------------

 -- Data: mpi4py.MPI.TYPECLASS_REAL: int(1) = TYPECLASS_REAL

     Constant ‘TYPECLASS_REAL’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI TYPECLASS_COMPLEX,  Next: mpi4py MPI DISTRIBUTE_NONE,  Prev: mpi4py MPI TYPECLASS_REAL,  Up: mpi4py MPI<2>

11.1.158 mpi4py.MPI.TYPECLASS_COMPLEX
-------------------------------------

 -- Data: mpi4py.MPI.TYPECLASS_COMPLEX: int(1) = TYPECLASS_COMPLEX

     Constant ‘TYPECLASS_COMPLEX’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_NONE,  Next: mpi4py MPI DISTRIBUTE_BLOCK,  Prev: mpi4py MPI TYPECLASS_COMPLEX,  Up: mpi4py MPI<2>

11.1.159 mpi4py.MPI.DISTRIBUTE_NONE
-----------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_NONE: int(1) = DISTRIBUTE_NONE

     Constant ‘DISTRIBUTE_NONE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_BLOCK,  Next: mpi4py MPI DISTRIBUTE_CYCLIC,  Prev: mpi4py MPI DISTRIBUTE_NONE,  Up: mpi4py MPI<2>

11.1.160 mpi4py.MPI.DISTRIBUTE_BLOCK
------------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_BLOCK: int(1) = DISTRIBUTE_BLOCK

     Constant ‘DISTRIBUTE_BLOCK’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_CYCLIC,  Next: mpi4py MPI DISTRIBUTE_DFLT_DARG,  Prev: mpi4py MPI DISTRIBUTE_BLOCK,  Up: mpi4py MPI<2>

11.1.161 mpi4py.MPI.DISTRIBUTE_CYCLIC
-------------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_CYCLIC: int(1) = DISTRIBUTE_CYCLIC

     Constant ‘DISTRIBUTE_CYCLIC’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISTRIBUTE_DFLT_DARG,  Next: mpi4py MPI COMBINER_NAMED,  Prev: mpi4py MPI DISTRIBUTE_CYCLIC,  Up: mpi4py MPI<2>

11.1.162 mpi4py.MPI.DISTRIBUTE_DFLT_DARG
----------------------------------------

 -- Data: mpi4py.MPI.DISTRIBUTE_DFLT_DARG: int(1) = DISTRIBUTE_DFLT_DARG

     Constant ‘DISTRIBUTE_DFLT_DARG’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_NAMED,  Next: mpi4py MPI COMBINER_DUP,  Prev: mpi4py MPI DISTRIBUTE_DFLT_DARG,  Up: mpi4py MPI<2>

11.1.163 mpi4py.MPI.COMBINER_NAMED
----------------------------------

 -- Data: mpi4py.MPI.COMBINER_NAMED: int(1) = COMBINER_NAMED

     Constant ‘COMBINER_NAMED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_DUP,  Next: mpi4py MPI COMBINER_CONTIGUOUS,  Prev: mpi4py MPI COMBINER_NAMED,  Up: mpi4py MPI<2>

11.1.164 mpi4py.MPI.COMBINER_DUP
--------------------------------

 -- Data: mpi4py.MPI.COMBINER_DUP: int(1) = COMBINER_DUP

     Constant ‘COMBINER_DUP’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_CONTIGUOUS,  Next: mpi4py MPI COMBINER_VECTOR,  Prev: mpi4py MPI COMBINER_DUP,  Up: mpi4py MPI<2>

11.1.165 mpi4py.MPI.COMBINER_CONTIGUOUS
---------------------------------------

 -- Data: mpi4py.MPI.COMBINER_CONTIGUOUS: int(1) = COMBINER_CONTIGUOUS

     Constant ‘COMBINER_CONTIGUOUS’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_VECTOR,  Next: mpi4py MPI COMBINER_HVECTOR,  Prev: mpi4py MPI COMBINER_CONTIGUOUS,  Up: mpi4py MPI<2>

11.1.166 mpi4py.MPI.COMBINER_VECTOR
-----------------------------------

 -- Data: mpi4py.MPI.COMBINER_VECTOR: int(1) = COMBINER_VECTOR

     Constant ‘COMBINER_VECTOR’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_HVECTOR,  Next: mpi4py MPI COMBINER_INDEXED,  Prev: mpi4py MPI COMBINER_VECTOR,  Up: mpi4py MPI<2>

11.1.167 mpi4py.MPI.COMBINER_HVECTOR
------------------------------------

 -- Data: mpi4py.MPI.COMBINER_HVECTOR: int(1) = COMBINER_HVECTOR

     Constant ‘COMBINER_HVECTOR’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_INDEXED,  Next: mpi4py MPI COMBINER_HINDEXED,  Prev: mpi4py MPI COMBINER_HVECTOR,  Up: mpi4py MPI<2>

11.1.168 mpi4py.MPI.COMBINER_INDEXED
------------------------------------

 -- Data: mpi4py.MPI.COMBINER_INDEXED: int(1) = COMBINER_INDEXED

     Constant ‘COMBINER_INDEXED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_HINDEXED,  Next: mpi4py MPI COMBINER_INDEXED_BLOCK,  Prev: mpi4py MPI COMBINER_INDEXED,  Up: mpi4py MPI<2>

11.1.169 mpi4py.MPI.COMBINER_HINDEXED
-------------------------------------

 -- Data: mpi4py.MPI.COMBINER_HINDEXED: int(1) = COMBINER_HINDEXED

     Constant ‘COMBINER_HINDEXED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_INDEXED_BLOCK,  Next: mpi4py MPI COMBINER_HINDEXED_BLOCK,  Prev: mpi4py MPI COMBINER_HINDEXED,  Up: mpi4py MPI<2>

11.1.170 mpi4py.MPI.COMBINER_INDEXED_BLOCK
------------------------------------------

 -- Data: mpi4py.MPI.COMBINER_INDEXED_BLOCK: int(1) =
          COMBINER_INDEXED_BLOCK

     Constant ‘COMBINER_INDEXED_BLOCK’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_HINDEXED_BLOCK,  Next: mpi4py MPI COMBINER_STRUCT,  Prev: mpi4py MPI COMBINER_INDEXED_BLOCK,  Up: mpi4py MPI<2>

11.1.171 mpi4py.MPI.COMBINER_HINDEXED_BLOCK
-------------------------------------------

 -- Data: mpi4py.MPI.COMBINER_HINDEXED_BLOCK: int(1) =
          COMBINER_HINDEXED_BLOCK

     Constant ‘COMBINER_HINDEXED_BLOCK’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_STRUCT,  Next: mpi4py MPI COMBINER_SUBARRAY,  Prev: mpi4py MPI COMBINER_HINDEXED_BLOCK,  Up: mpi4py MPI<2>

11.1.172 mpi4py.MPI.COMBINER_STRUCT
-----------------------------------

 -- Data: mpi4py.MPI.COMBINER_STRUCT: int(1) = COMBINER_STRUCT

     Constant ‘COMBINER_STRUCT’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_SUBARRAY,  Next: mpi4py MPI COMBINER_DARRAY,  Prev: mpi4py MPI COMBINER_STRUCT,  Up: mpi4py MPI<2>

11.1.173 mpi4py.MPI.COMBINER_SUBARRAY
-------------------------------------

 -- Data: mpi4py.MPI.COMBINER_SUBARRAY: int(1) = COMBINER_SUBARRAY

     Constant ‘COMBINER_SUBARRAY’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_DARRAY,  Next: mpi4py MPI COMBINER_RESIZED,  Prev: mpi4py MPI COMBINER_SUBARRAY,  Up: mpi4py MPI<2>

11.1.174 mpi4py.MPI.COMBINER_DARRAY
-----------------------------------

 -- Data: mpi4py.MPI.COMBINER_DARRAY: int(1) = COMBINER_DARRAY

     Constant ‘COMBINER_DARRAY’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_RESIZED,  Next: mpi4py MPI COMBINER_VALUE_INDEX,  Prev: mpi4py MPI COMBINER_DARRAY,  Up: mpi4py MPI<2>

11.1.175 mpi4py.MPI.COMBINER_RESIZED
------------------------------------

 -- Data: mpi4py.MPI.COMBINER_RESIZED: int(1) = COMBINER_RESIZED

     Constant ‘COMBINER_RESIZED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_VALUE_INDEX,  Next: mpi4py MPI COMBINER_F90_INTEGER,  Prev: mpi4py MPI COMBINER_RESIZED,  Up: mpi4py MPI<2>

11.1.176 mpi4py.MPI.COMBINER_VALUE_INDEX
----------------------------------------

 -- Data: mpi4py.MPI.COMBINER_VALUE_INDEX: int(1) = COMBINER_VALUE_INDEX

     Constant ‘COMBINER_VALUE_INDEX’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_F90_INTEGER,  Next: mpi4py MPI COMBINER_F90_REAL,  Prev: mpi4py MPI COMBINER_VALUE_INDEX,  Up: mpi4py MPI<2>

11.1.177 mpi4py.MPI.COMBINER_F90_INTEGER
----------------------------------------

 -- Data: mpi4py.MPI.COMBINER_F90_INTEGER: int(1) = COMBINER_F90_INTEGER

     Constant ‘COMBINER_F90_INTEGER’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_F90_REAL,  Next: mpi4py MPI COMBINER_F90_COMPLEX,  Prev: mpi4py MPI COMBINER_F90_INTEGER,  Up: mpi4py MPI<2>

11.1.178 mpi4py.MPI.COMBINER_F90_REAL
-------------------------------------

 -- Data: mpi4py.MPI.COMBINER_F90_REAL: int(1) = COMBINER_F90_REAL

     Constant ‘COMBINER_F90_REAL’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMBINER_F90_COMPLEX,  Next: mpi4py MPI F_SOURCE,  Prev: mpi4py MPI COMBINER_F90_REAL,  Up: mpi4py MPI<2>

11.1.179 mpi4py.MPI.COMBINER_F90_COMPLEX
----------------------------------------

 -- Data: mpi4py.MPI.COMBINER_F90_COMPLEX: int(1) = COMBINER_F90_COMPLEX

     Constant ‘COMBINER_F90_COMPLEX’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI F_SOURCE,  Next: mpi4py MPI F_TAG,  Prev: mpi4py MPI COMBINER_F90_COMPLEX,  Up: mpi4py MPI<2>

11.1.180 mpi4py.MPI.F_SOURCE
----------------------------

 -- Data: mpi4py.MPI.F_SOURCE: int(1) = F_SOURCE

     Constant ‘F_SOURCE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI F_TAG,  Next: mpi4py MPI F_ERROR,  Prev: mpi4py MPI F_SOURCE,  Up: mpi4py MPI<2>

11.1.181 mpi4py.MPI.F_TAG
-------------------------

 -- Data: mpi4py.MPI.F_TAG: int(1) = F_TAG

     Constant ‘F_TAG’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI F_ERROR,  Next: mpi4py MPI F_STATUS_SIZE,  Prev: mpi4py MPI F_TAG,  Up: mpi4py MPI<2>

11.1.182 mpi4py.MPI.F_ERROR
---------------------------

 -- Data: mpi4py.MPI.F_ERROR: int(1) = F_ERROR

     Constant ‘F_ERROR’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI F_STATUS_SIZE,  Next: mpi4py MPI IDENT,  Prev: mpi4py MPI F_ERROR,  Up: mpi4py MPI<2>

11.1.183 mpi4py.MPI.F_STATUS_SIZE
---------------------------------

 -- Data: mpi4py.MPI.F_STATUS_SIZE: int(1) = F_STATUS_SIZE

     Constant ‘F_STATUS_SIZE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI IDENT,  Next: mpi4py MPI CONGRUENT,  Prev: mpi4py MPI F_STATUS_SIZE,  Up: mpi4py MPI<2>

11.1.184 mpi4py.MPI.IDENT
-------------------------

 -- Data: mpi4py.MPI.IDENT: int(1) = IDENT

     Constant ‘IDENT’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI CONGRUENT,  Next: mpi4py MPI SIMILAR,  Prev: mpi4py MPI IDENT,  Up: mpi4py MPI<2>

11.1.185 mpi4py.MPI.CONGRUENT
-----------------------------

 -- Data: mpi4py.MPI.CONGRUENT: int(1) = CONGRUENT

     Constant ‘CONGRUENT’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SIMILAR,  Next: mpi4py MPI UNEQUAL,  Prev: mpi4py MPI CONGRUENT,  Up: mpi4py MPI<2>

11.1.186 mpi4py.MPI.SIMILAR
---------------------------

 -- Data: mpi4py.MPI.SIMILAR: int(1) = SIMILAR

     Constant ‘SIMILAR’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNEQUAL,  Next: mpi4py MPI CART,  Prev: mpi4py MPI SIMILAR,  Up: mpi4py MPI<2>

11.1.187 mpi4py.MPI.UNEQUAL
---------------------------

 -- Data: mpi4py.MPI.UNEQUAL: int(1) = UNEQUAL

     Constant ‘UNEQUAL’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI CART,  Next: mpi4py MPI GRAPH,  Prev: mpi4py MPI UNEQUAL,  Up: mpi4py MPI<2>

11.1.188 mpi4py.MPI.CART
------------------------

 -- Data: mpi4py.MPI.CART: int(1) = CART

     Constant ‘CART’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI GRAPH,  Next: mpi4py MPI DIST_GRAPH,  Prev: mpi4py MPI CART,  Up: mpi4py MPI<2>

11.1.189 mpi4py.MPI.GRAPH
-------------------------

 -- Data: mpi4py.MPI.GRAPH: int(1) = GRAPH

     Constant ‘GRAPH’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DIST_GRAPH,  Next: mpi4py MPI UNWEIGHTED,  Prev: mpi4py MPI GRAPH,  Up: mpi4py MPI<2>

11.1.190 mpi4py.MPI.DIST_GRAPH
------------------------------

 -- Data: mpi4py.MPI.DIST_GRAPH: int(1) = DIST_GRAPH

     Constant ‘DIST_GRAPH’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI UNWEIGHTED,  Next: mpi4py MPI WEIGHTS_EMPTY,  Prev: mpi4py MPI DIST_GRAPH,  Up: mpi4py MPI<2>

11.1.191 mpi4py.MPI.UNWEIGHTED
------------------------------

 -- Data: mpi4py.MPI.UNWEIGHTED: int(1) = UNWEIGHTED

     Constant ‘UNWEIGHTED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WEIGHTS_EMPTY,  Next: mpi4py MPI COMM_TYPE_SHARED,  Prev: mpi4py MPI UNWEIGHTED,  Up: mpi4py MPI<2>

11.1.192 mpi4py.MPI.WEIGHTS_EMPTY
---------------------------------

 -- Data: mpi4py.MPI.WEIGHTS_EMPTY: int(1) = WEIGHTS_EMPTY

     Constant ‘WEIGHTS_EMPTY’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMM_TYPE_SHARED,  Next: mpi4py MPI COMM_TYPE_HW_GUIDED,  Prev: mpi4py MPI WEIGHTS_EMPTY,  Up: mpi4py MPI<2>

11.1.193 mpi4py.MPI.COMM_TYPE_SHARED
------------------------------------

 -- Data: mpi4py.MPI.COMM_TYPE_SHARED: int(1) = COMM_TYPE_SHARED

     Constant ‘COMM_TYPE_SHARED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMM_TYPE_HW_GUIDED,  Next: mpi4py MPI COMM_TYPE_HW_UNGUIDED,  Prev: mpi4py MPI COMM_TYPE_SHARED,  Up: mpi4py MPI<2>

11.1.194 mpi4py.MPI.COMM_TYPE_HW_GUIDED
---------------------------------------

 -- Data: mpi4py.MPI.COMM_TYPE_HW_GUIDED: int(1) = COMM_TYPE_HW_GUIDED

     Constant ‘COMM_TYPE_HW_GUIDED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMM_TYPE_HW_UNGUIDED,  Next: mpi4py MPI COMM_TYPE_RESOURCE_GUIDED,  Prev: mpi4py MPI COMM_TYPE_HW_GUIDED,  Up: mpi4py MPI<2>

11.1.195 mpi4py.MPI.COMM_TYPE_HW_UNGUIDED
-----------------------------------------

 -- Data: mpi4py.MPI.COMM_TYPE_HW_UNGUIDED: int(1) =
          COMM_TYPE_HW_UNGUIDED

     Constant ‘COMM_TYPE_HW_UNGUIDED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI COMM_TYPE_RESOURCE_GUIDED,  Next: mpi4py MPI BSEND_OVERHEAD,  Prev: mpi4py MPI COMM_TYPE_HW_UNGUIDED,  Up: mpi4py MPI<2>

11.1.196 mpi4py.MPI.COMM_TYPE_RESOURCE_GUIDED
---------------------------------------------

 -- Data: mpi4py.MPI.COMM_TYPE_RESOURCE_GUIDED: int(1) =
          COMM_TYPE_RESOURCE_GUIDED

     Constant ‘COMM_TYPE_RESOURCE_GUIDED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI BSEND_OVERHEAD,  Next: mpi4py MPI BUFFER_AUTOMATIC,  Prev: mpi4py MPI COMM_TYPE_RESOURCE_GUIDED,  Up: mpi4py MPI<2>

11.1.197 mpi4py.MPI.BSEND_OVERHEAD
----------------------------------

 -- Data: mpi4py.MPI.BSEND_OVERHEAD: int(1) = BSEND_OVERHEAD

     Constant ‘BSEND_OVERHEAD’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI BUFFER_AUTOMATIC,  Next: mpi4py MPI WIN_FLAVOR_CREATE,  Prev: mpi4py MPI BSEND_OVERHEAD,  Up: mpi4py MPI<2>

11.1.198 mpi4py.MPI.BUFFER_AUTOMATIC
------------------------------------

 -- Data: mpi4py.MPI.BUFFER_AUTOMATIC: *note BufferAutomaticType: ff. =
          BUFFER_AUTOMATIC

     Constant ‘BUFFER_AUTOMATIC’ of type *note BufferAutomaticType: ff.


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_CREATE,  Next: mpi4py MPI WIN_FLAVOR_ALLOCATE,  Prev: mpi4py MPI BUFFER_AUTOMATIC,  Up: mpi4py MPI<2>

11.1.199 mpi4py.MPI.WIN_FLAVOR_CREATE
-------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_CREATE: int(1) = WIN_FLAVOR_CREATE

     Constant ‘WIN_FLAVOR_CREATE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_ALLOCATE,  Next: mpi4py MPI WIN_FLAVOR_DYNAMIC,  Prev: mpi4py MPI WIN_FLAVOR_CREATE,  Up: mpi4py MPI<2>

11.1.200 mpi4py.MPI.WIN_FLAVOR_ALLOCATE
---------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_ALLOCATE: int(1) = WIN_FLAVOR_ALLOCATE

     Constant ‘WIN_FLAVOR_ALLOCATE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_DYNAMIC,  Next: mpi4py MPI WIN_FLAVOR_SHARED,  Prev: mpi4py MPI WIN_FLAVOR_ALLOCATE,  Up: mpi4py MPI<2>

11.1.201 mpi4py.MPI.WIN_FLAVOR_DYNAMIC
--------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_DYNAMIC: int(1) = WIN_FLAVOR_DYNAMIC

     Constant ‘WIN_FLAVOR_DYNAMIC’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_FLAVOR_SHARED,  Next: mpi4py MPI WIN_SEPARATE,  Prev: mpi4py MPI WIN_FLAVOR_DYNAMIC,  Up: mpi4py MPI<2>

11.1.202 mpi4py.MPI.WIN_FLAVOR_SHARED
-------------------------------------

 -- Data: mpi4py.MPI.WIN_FLAVOR_SHARED: int(1) = WIN_FLAVOR_SHARED

     Constant ‘WIN_FLAVOR_SHARED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_SEPARATE,  Next: mpi4py MPI WIN_UNIFIED,  Prev: mpi4py MPI WIN_FLAVOR_SHARED,  Up: mpi4py MPI<2>

11.1.203 mpi4py.MPI.WIN_SEPARATE
--------------------------------

 -- Data: mpi4py.MPI.WIN_SEPARATE: int(1) = WIN_SEPARATE

     Constant ‘WIN_SEPARATE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI WIN_UNIFIED,  Next: mpi4py MPI MODE_NOCHECK,  Prev: mpi4py MPI WIN_SEPARATE,  Up: mpi4py MPI<2>

11.1.204 mpi4py.MPI.WIN_UNIFIED
-------------------------------

 -- Data: mpi4py.MPI.WIN_UNIFIED: int(1) = WIN_UNIFIED

     Constant ‘WIN_UNIFIED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOCHECK,  Next: mpi4py MPI MODE_NOSTORE,  Prev: mpi4py MPI WIN_UNIFIED,  Up: mpi4py MPI<2>

11.1.205 mpi4py.MPI.MODE_NOCHECK
--------------------------------

 -- Data: mpi4py.MPI.MODE_NOCHECK: int(1) = MODE_NOCHECK

     Constant ‘MODE_NOCHECK’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOSTORE,  Next: mpi4py MPI MODE_NOPUT,  Prev: mpi4py MPI MODE_NOCHECK,  Up: mpi4py MPI<2>

11.1.206 mpi4py.MPI.MODE_NOSTORE
--------------------------------

 -- Data: mpi4py.MPI.MODE_NOSTORE: int(1) = MODE_NOSTORE

     Constant ‘MODE_NOSTORE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOPUT,  Next: mpi4py MPI MODE_NOPRECEDE,  Prev: mpi4py MPI MODE_NOSTORE,  Up: mpi4py MPI<2>

11.1.207 mpi4py.MPI.MODE_NOPUT
------------------------------

 -- Data: mpi4py.MPI.MODE_NOPUT: int(1) = MODE_NOPUT

     Constant ‘MODE_NOPUT’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOPRECEDE,  Next: mpi4py MPI MODE_NOSUCCEED,  Prev: mpi4py MPI MODE_NOPUT,  Up: mpi4py MPI<2>

11.1.208 mpi4py.MPI.MODE_NOPRECEDE
----------------------------------

 -- Data: mpi4py.MPI.MODE_NOPRECEDE: int(1) = MODE_NOPRECEDE

     Constant ‘MODE_NOPRECEDE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_NOSUCCEED,  Next: mpi4py MPI LOCK_EXCLUSIVE,  Prev: mpi4py MPI MODE_NOPRECEDE,  Up: mpi4py MPI<2>

11.1.209 mpi4py.MPI.MODE_NOSUCCEED
----------------------------------

 -- Data: mpi4py.MPI.MODE_NOSUCCEED: int(1) = MODE_NOSUCCEED

     Constant ‘MODE_NOSUCCEED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI LOCK_EXCLUSIVE,  Next: mpi4py MPI LOCK_SHARED,  Prev: mpi4py MPI MODE_NOSUCCEED,  Up: mpi4py MPI<2>

11.1.210 mpi4py.MPI.LOCK_EXCLUSIVE
----------------------------------

 -- Data: mpi4py.MPI.LOCK_EXCLUSIVE: int(1) = LOCK_EXCLUSIVE

     Constant ‘LOCK_EXCLUSIVE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI LOCK_SHARED,  Next: mpi4py MPI MODE_RDONLY,  Prev: mpi4py MPI LOCK_EXCLUSIVE,  Up: mpi4py MPI<2>

11.1.211 mpi4py.MPI.LOCK_SHARED
-------------------------------

 -- Data: mpi4py.MPI.LOCK_SHARED: int(1) = LOCK_SHARED

     Constant ‘LOCK_SHARED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_RDONLY,  Next: mpi4py MPI MODE_WRONLY,  Prev: mpi4py MPI LOCK_SHARED,  Up: mpi4py MPI<2>

11.1.212 mpi4py.MPI.MODE_RDONLY
-------------------------------

 -- Data: mpi4py.MPI.MODE_RDONLY: int(1) = MODE_RDONLY

     Constant ‘MODE_RDONLY’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_WRONLY,  Next: mpi4py MPI MODE_RDWR,  Prev: mpi4py MPI MODE_RDONLY,  Up: mpi4py MPI<2>

11.1.213 mpi4py.MPI.MODE_WRONLY
-------------------------------

 -- Data: mpi4py.MPI.MODE_WRONLY: int(1) = MODE_WRONLY

     Constant ‘MODE_WRONLY’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_RDWR,  Next: mpi4py MPI MODE_CREATE,  Prev: mpi4py MPI MODE_WRONLY,  Up: mpi4py MPI<2>

11.1.214 mpi4py.MPI.MODE_RDWR
-----------------------------

 -- Data: mpi4py.MPI.MODE_RDWR: int(1) = MODE_RDWR

     Constant ‘MODE_RDWR’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_CREATE,  Next: mpi4py MPI MODE_EXCL,  Prev: mpi4py MPI MODE_RDWR,  Up: mpi4py MPI<2>

11.1.215 mpi4py.MPI.MODE_CREATE
-------------------------------

 -- Data: mpi4py.MPI.MODE_CREATE: int(1) = MODE_CREATE

     Constant ‘MODE_CREATE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_EXCL,  Next: mpi4py MPI MODE_DELETE_ON_CLOSE,  Prev: mpi4py MPI MODE_CREATE,  Up: mpi4py MPI<2>

11.1.216 mpi4py.MPI.MODE_EXCL
-----------------------------

 -- Data: mpi4py.MPI.MODE_EXCL: int(1) = MODE_EXCL

     Constant ‘MODE_EXCL’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_DELETE_ON_CLOSE,  Next: mpi4py MPI MODE_UNIQUE_OPEN,  Prev: mpi4py MPI MODE_EXCL,  Up: mpi4py MPI<2>

11.1.217 mpi4py.MPI.MODE_DELETE_ON_CLOSE
----------------------------------------

 -- Data: mpi4py.MPI.MODE_DELETE_ON_CLOSE: int(1) = MODE_DELETE_ON_CLOSE

     Constant ‘MODE_DELETE_ON_CLOSE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_UNIQUE_OPEN,  Next: mpi4py MPI MODE_SEQUENTIAL,  Prev: mpi4py MPI MODE_DELETE_ON_CLOSE,  Up: mpi4py MPI<2>

11.1.218 mpi4py.MPI.MODE_UNIQUE_OPEN
------------------------------------

 -- Data: mpi4py.MPI.MODE_UNIQUE_OPEN: int(1) = MODE_UNIQUE_OPEN

     Constant ‘MODE_UNIQUE_OPEN’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_SEQUENTIAL,  Next: mpi4py MPI MODE_APPEND,  Prev: mpi4py MPI MODE_UNIQUE_OPEN,  Up: mpi4py MPI<2>

11.1.219 mpi4py.MPI.MODE_SEQUENTIAL
-----------------------------------

 -- Data: mpi4py.MPI.MODE_SEQUENTIAL: int(1) = MODE_SEQUENTIAL

     Constant ‘MODE_SEQUENTIAL’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MODE_APPEND,  Next: mpi4py MPI SEEK_SET,  Prev: mpi4py MPI MODE_SEQUENTIAL,  Up: mpi4py MPI<2>

11.1.220 mpi4py.MPI.MODE_APPEND
-------------------------------

 -- Data: mpi4py.MPI.MODE_APPEND: int(1) = MODE_APPEND

     Constant ‘MODE_APPEND’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SEEK_SET,  Next: mpi4py MPI SEEK_CUR,  Prev: mpi4py MPI MODE_APPEND,  Up: mpi4py MPI<2>

11.1.221 mpi4py.MPI.SEEK_SET
----------------------------

 -- Data: mpi4py.MPI.SEEK_SET: int(1) = SEEK_SET

     Constant ‘SEEK_SET’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SEEK_CUR,  Next: mpi4py MPI SEEK_END,  Prev: mpi4py MPI SEEK_SET,  Up: mpi4py MPI<2>

11.1.222 mpi4py.MPI.SEEK_CUR
----------------------------

 -- Data: mpi4py.MPI.SEEK_CUR: int(1) = SEEK_CUR

     Constant ‘SEEK_CUR’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SEEK_END,  Next: mpi4py MPI DISPLACEMENT_CURRENT,  Prev: mpi4py MPI SEEK_CUR,  Up: mpi4py MPI<2>

11.1.223 mpi4py.MPI.SEEK_END
----------------------------

 -- Data: mpi4py.MPI.SEEK_END: int(1) = SEEK_END

     Constant ‘SEEK_END’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISPLACEMENT_CURRENT,  Next: mpi4py MPI DISP_CUR,  Prev: mpi4py MPI SEEK_END,  Up: mpi4py MPI<2>

11.1.224 mpi4py.MPI.DISPLACEMENT_CURRENT
----------------------------------------

 -- Data: mpi4py.MPI.DISPLACEMENT_CURRENT: int(1) = DISPLACEMENT_CURRENT

     Constant ‘DISPLACEMENT_CURRENT’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DISP_CUR,  Next: mpi4py MPI THREAD_SINGLE,  Prev: mpi4py MPI DISPLACEMENT_CURRENT,  Up: mpi4py MPI<2>

11.1.225 mpi4py.MPI.DISP_CUR
----------------------------

 -- Data: mpi4py.MPI.DISP_CUR: int(1) = DISP_CUR

     Constant ‘DISP_CUR’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_SINGLE,  Next: mpi4py MPI THREAD_FUNNELED,  Prev: mpi4py MPI DISP_CUR,  Up: mpi4py MPI<2>

11.1.226 mpi4py.MPI.THREAD_SINGLE
---------------------------------

 -- Data: mpi4py.MPI.THREAD_SINGLE: int(1) = THREAD_SINGLE

     Constant ‘THREAD_SINGLE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_FUNNELED,  Next: mpi4py MPI THREAD_SERIALIZED,  Prev: mpi4py MPI THREAD_SINGLE,  Up: mpi4py MPI<2>

11.1.227 mpi4py.MPI.THREAD_FUNNELED
-----------------------------------

 -- Data: mpi4py.MPI.THREAD_FUNNELED: int(1) = THREAD_FUNNELED

     Constant ‘THREAD_FUNNELED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_SERIALIZED,  Next: mpi4py MPI THREAD_MULTIPLE,  Prev: mpi4py MPI THREAD_FUNNELED,  Up: mpi4py MPI<2>

11.1.228 mpi4py.MPI.THREAD_SERIALIZED
-------------------------------------

 -- Data: mpi4py.MPI.THREAD_SERIALIZED: int(1) = THREAD_SERIALIZED

     Constant ‘THREAD_SERIALIZED’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI THREAD_MULTIPLE,  Next: mpi4py MPI VERSION,  Prev: mpi4py MPI THREAD_SERIALIZED,  Up: mpi4py MPI<2>

11.1.229 mpi4py.MPI.THREAD_MULTIPLE
-----------------------------------

 -- Data: mpi4py.MPI.THREAD_MULTIPLE: int(1) = THREAD_MULTIPLE

     Constant ‘THREAD_MULTIPLE’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI VERSION,  Next: mpi4py MPI SUBVERSION,  Prev: mpi4py MPI THREAD_MULTIPLE,  Up: mpi4py MPI<2>

11.1.230 mpi4py.MPI.VERSION
---------------------------

 -- Data: mpi4py.MPI.VERSION: int(1) = VERSION

     Constant ‘VERSION’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI SUBVERSION,  Next: mpi4py MPI MAX_PROCESSOR_NAME,  Prev: mpi4py MPI VERSION,  Up: mpi4py MPI<2>

11.1.231 mpi4py.MPI.SUBVERSION
------------------------------

 -- Data: mpi4py.MPI.SUBVERSION: int(1) = SUBVERSION

     Constant ‘SUBVERSION’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_PROCESSOR_NAME,  Next: mpi4py MPI MAX_ERROR_STRING,  Prev: mpi4py MPI SUBVERSION,  Up: mpi4py MPI<2>

11.1.232 mpi4py.MPI.MAX_PROCESSOR_NAME
--------------------------------------

 -- Data: mpi4py.MPI.MAX_PROCESSOR_NAME: int(1) = MAX_PROCESSOR_NAME

     Constant ‘MAX_PROCESSOR_NAME’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_ERROR_STRING,  Next: mpi4py MPI MAX_PORT_NAME,  Prev: mpi4py MPI MAX_PROCESSOR_NAME,  Up: mpi4py MPI<2>

11.1.233 mpi4py.MPI.MAX_ERROR_STRING
------------------------------------

 -- Data: mpi4py.MPI.MAX_ERROR_STRING: int(1) = MAX_ERROR_STRING

     Constant ‘MAX_ERROR_STRING’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_PORT_NAME,  Next: mpi4py MPI MAX_INFO_KEY,  Prev: mpi4py MPI MAX_ERROR_STRING,  Up: mpi4py MPI<2>

11.1.234 mpi4py.MPI.MAX_PORT_NAME
---------------------------------

 -- Data: mpi4py.MPI.MAX_PORT_NAME: int(1) = MAX_PORT_NAME

     Constant ‘MAX_PORT_NAME’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_INFO_KEY,  Next: mpi4py MPI MAX_INFO_VAL,  Prev: mpi4py MPI MAX_PORT_NAME,  Up: mpi4py MPI<2>

11.1.235 mpi4py.MPI.MAX_INFO_KEY
--------------------------------

 -- Data: mpi4py.MPI.MAX_INFO_KEY: int(1) = MAX_INFO_KEY

     Constant ‘MAX_INFO_KEY’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_INFO_VAL,  Next: mpi4py MPI MAX_OBJECT_NAME,  Prev: mpi4py MPI MAX_INFO_KEY,  Up: mpi4py MPI<2>

11.1.236 mpi4py.MPI.MAX_INFO_VAL
--------------------------------

 -- Data: mpi4py.MPI.MAX_INFO_VAL: int(1) = MAX_INFO_VAL

     Constant ‘MAX_INFO_VAL’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_OBJECT_NAME,  Next: mpi4py MPI MAX_DATAREP_STRING,  Prev: mpi4py MPI MAX_INFO_VAL,  Up: mpi4py MPI<2>

11.1.237 mpi4py.MPI.MAX_OBJECT_NAME
-----------------------------------

 -- Data: mpi4py.MPI.MAX_OBJECT_NAME: int(1) = MAX_OBJECT_NAME

     Constant ‘MAX_OBJECT_NAME’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_DATAREP_STRING,  Next: mpi4py MPI MAX_LIBRARY_VERSION_STRING,  Prev: mpi4py MPI MAX_OBJECT_NAME,  Up: mpi4py MPI<2>

11.1.238 mpi4py.MPI.MAX_DATAREP_STRING
--------------------------------------

 -- Data: mpi4py.MPI.MAX_DATAREP_STRING: int(1) = MAX_DATAREP_STRING

     Constant ‘MAX_DATAREP_STRING’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_LIBRARY_VERSION_STRING,  Next: mpi4py MPI MAX_PSET_NAME_LEN,  Prev: mpi4py MPI MAX_DATAREP_STRING,  Up: mpi4py MPI<2>

11.1.239 mpi4py.MPI.MAX_LIBRARY_VERSION_STRING
----------------------------------------------

 -- Data: mpi4py.MPI.MAX_LIBRARY_VERSION_STRING: int(1) =
          MAX_LIBRARY_VERSION_STRING

     Constant ‘MAX_LIBRARY_VERSION_STRING’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_PSET_NAME_LEN,  Next: mpi4py MPI MAX_STRINGTAG_LEN,  Prev: mpi4py MPI MAX_LIBRARY_VERSION_STRING,  Up: mpi4py MPI<2>

11.1.240 mpi4py.MPI.MAX_PSET_NAME_LEN
-------------------------------------

 -- Data: mpi4py.MPI.MAX_PSET_NAME_LEN: int(1) = MAX_PSET_NAME_LEN

     Constant ‘MAX_PSET_NAME_LEN’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI MAX_STRINGTAG_LEN,  Next: mpi4py MPI DATATYPE_NULL,  Prev: mpi4py MPI MAX_PSET_NAME_LEN,  Up: mpi4py MPI<2>

11.1.241 mpi4py.MPI.MAX_STRINGTAG_LEN
-------------------------------------

 -- Data: mpi4py.MPI.MAX_STRINGTAG_LEN: int(1) = MAX_STRINGTAG_LEN

     Constant ‘MAX_STRINGTAG_LEN’ of type int(2)

   ---------- Footnotes ----------

   (1) https://docs.python.org/3/library/functions.html#int

   (2) https://docs.python.org/3/library/functions.html#int


File: mpi4py.info,  Node: mpi4py MPI DATATYPE_NULL,  Next: mpi4py MPI PACKED,  Prev: mpi4py MPI MAX_STRINGTAG_LEN,  Up: mpi4py MPI<2>

11.1.242 mpi4py.MPI.DATATYPE_NULL
---------------------------------

 -- Data: mpi4py.MPI.DATATYPE_NULL: *note Datatype: d0. = DATATYPE_NULL

     Object ‘DATATYPE_NULL’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI PACKED,  Next: mpi4py MPI BYTE,  Prev: mpi4py MPI DATATYPE_NULL,  Up: mpi4py MPI<2>

11.1.243 mpi4py.MPI.PACKED
--------------------------

 -- Data: mpi4py.MPI.PACKED: *note Datatype: d0. = PACKED

     Object ‘PACKED’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI BYTE,  Next: mpi4py MPI AINT,  Prev: mpi4py MPI PACKED,  Up: mpi4py MPI<2>

11.1.244 mpi4py.MPI.BYTE
------------------------

 -- Data: mpi4py.MPI.BYTE: *note Datatype: d0. = BYTE

     Object ‘BYTE’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI AINT,  Next: mpi4py MPI OFFSET,  Prev: mpi4py MPI BYTE,  Up: mpi4py MPI<2>

11.1.245 mpi4py.MPI.AINT
------------------------

 -- Data: mpi4py.MPI.AINT: *note Datatype: d0. = AINT

     Object ‘AINT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI OFFSET,  Next: mpi4py MPI COUNT,  Prev: mpi4py MPI AINT,  Up: mpi4py MPI<2>

11.1.246 mpi4py.MPI.OFFSET
--------------------------

 -- Data: mpi4py.MPI.OFFSET: *note Datatype: d0. = OFFSET

     Object ‘OFFSET’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI COUNT,  Next: mpi4py MPI CHAR,  Prev: mpi4py MPI OFFSET,  Up: mpi4py MPI<2>

11.1.247 mpi4py.MPI.COUNT
-------------------------

 -- Data: mpi4py.MPI.COUNT: *note Datatype: d0. = COUNT

     Object ‘COUNT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI CHAR,  Next: mpi4py MPI WCHAR,  Prev: mpi4py MPI COUNT,  Up: mpi4py MPI<2>

11.1.248 mpi4py.MPI.CHAR
------------------------

 -- Data: mpi4py.MPI.CHAR: *note Datatype: d0. = CHAR

     Object ‘CHAR’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI WCHAR,  Next: mpi4py MPI SIGNED_CHAR,  Prev: mpi4py MPI CHAR,  Up: mpi4py MPI<2>

11.1.249 mpi4py.MPI.WCHAR
-------------------------

 -- Data: mpi4py.MPI.WCHAR: *note Datatype: d0. = WCHAR

     Object ‘WCHAR’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI SIGNED_CHAR,  Next: mpi4py MPI SHORT,  Prev: mpi4py MPI WCHAR,  Up: mpi4py MPI<2>

11.1.250 mpi4py.MPI.SIGNED_CHAR
-------------------------------

 -- Data: mpi4py.MPI.SIGNED_CHAR: *note Datatype: d0. = SIGNED_CHAR

     Object ‘SIGNED_CHAR’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI SHORT,  Next: mpi4py MPI INT,  Prev: mpi4py MPI SIGNED_CHAR,  Up: mpi4py MPI<2>

11.1.251 mpi4py.MPI.SHORT
-------------------------

 -- Data: mpi4py.MPI.SHORT: *note Datatype: d0. = SHORT

     Object ‘SHORT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI INT,  Next: mpi4py MPI LONG,  Prev: mpi4py MPI SHORT,  Up: mpi4py MPI<2>

11.1.252 mpi4py.MPI.INT
-----------------------

 -- Data: mpi4py.MPI.INT: *note Datatype: d0. = INT

     Object ‘INT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI LONG,  Next: mpi4py MPI LONG_LONG,  Prev: mpi4py MPI INT,  Up: mpi4py MPI<2>

11.1.253 mpi4py.MPI.LONG
------------------------

 -- Data: mpi4py.MPI.LONG: *note Datatype: d0. = LONG

     Object ‘LONG’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI LONG_LONG,  Next: mpi4py MPI UNSIGNED_CHAR,  Prev: mpi4py MPI LONG,  Up: mpi4py MPI<2>

11.1.254 mpi4py.MPI.LONG_LONG
-----------------------------

 -- Data: mpi4py.MPI.LONG_LONG: *note Datatype: d0. = LONG_LONG

     Object ‘LONG_LONG’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_CHAR,  Next: mpi4py MPI UNSIGNED_SHORT,  Prev: mpi4py MPI LONG_LONG,  Up: mpi4py MPI<2>

11.1.255 mpi4py.MPI.UNSIGNED_CHAR
---------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_CHAR: *note Datatype: d0. = UNSIGNED_CHAR

     Object ‘UNSIGNED_CHAR’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_SHORT,  Next: mpi4py MPI UNSIGNED,  Prev: mpi4py MPI UNSIGNED_CHAR,  Up: mpi4py MPI<2>

11.1.256 mpi4py.MPI.UNSIGNED_SHORT
----------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_SHORT: *note Datatype: d0. =
          UNSIGNED_SHORT

     Object ‘UNSIGNED_SHORT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED,  Next: mpi4py MPI UNSIGNED_LONG,  Prev: mpi4py MPI UNSIGNED_SHORT,  Up: mpi4py MPI<2>

11.1.257 mpi4py.MPI.UNSIGNED
----------------------------

 -- Data: mpi4py.MPI.UNSIGNED: *note Datatype: d0. = UNSIGNED

     Object ‘UNSIGNED’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_LONG,  Next: mpi4py MPI UNSIGNED_LONG_LONG,  Prev: mpi4py MPI UNSIGNED,  Up: mpi4py MPI<2>

11.1.258 mpi4py.MPI.UNSIGNED_LONG
---------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_LONG: *note Datatype: d0. = UNSIGNED_LONG

     Object ‘UNSIGNED_LONG’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_LONG_LONG,  Next: mpi4py MPI FLOAT,  Prev: mpi4py MPI UNSIGNED_LONG,  Up: mpi4py MPI<2>

11.1.259 mpi4py.MPI.UNSIGNED_LONG_LONG
--------------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_LONG_LONG: *note Datatype: d0. =
          UNSIGNED_LONG_LONG

     Object ‘UNSIGNED_LONG_LONG’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI FLOAT,  Next: mpi4py MPI DOUBLE,  Prev: mpi4py MPI UNSIGNED_LONG_LONG,  Up: mpi4py MPI<2>

11.1.260 mpi4py.MPI.FLOAT
-------------------------

 -- Data: mpi4py.MPI.FLOAT: *note Datatype: d0. = FLOAT

     Object ‘FLOAT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI DOUBLE,  Next: mpi4py MPI LONG_DOUBLE,  Prev: mpi4py MPI FLOAT,  Up: mpi4py MPI<2>

11.1.261 mpi4py.MPI.DOUBLE
--------------------------

 -- Data: mpi4py.MPI.DOUBLE: *note Datatype: d0. = DOUBLE

     Object ‘DOUBLE’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI LONG_DOUBLE,  Next: mpi4py MPI C_BOOL,  Prev: mpi4py MPI DOUBLE,  Up: mpi4py MPI<2>

11.1.262 mpi4py.MPI.LONG_DOUBLE
-------------------------------

 -- Data: mpi4py.MPI.LONG_DOUBLE: *note Datatype: d0. = LONG_DOUBLE

     Object ‘LONG_DOUBLE’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI C_BOOL,  Next: mpi4py MPI INT8_T,  Prev: mpi4py MPI LONG_DOUBLE,  Up: mpi4py MPI<2>

11.1.263 mpi4py.MPI.C_BOOL
--------------------------

 -- Data: mpi4py.MPI.C_BOOL: *note Datatype: d0. = C_BOOL

     Object ‘C_BOOL’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI INT8_T,  Next: mpi4py MPI INT16_T,  Prev: mpi4py MPI C_BOOL,  Up: mpi4py MPI<2>

11.1.264 mpi4py.MPI.INT8_T
--------------------------

 -- Data: mpi4py.MPI.INT8_T: *note Datatype: d0. = INT8_T

     Object ‘INT8_T’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI INT16_T,  Next: mpi4py MPI INT32_T,  Prev: mpi4py MPI INT8_T,  Up: mpi4py MPI<2>

11.1.265 mpi4py.MPI.INT16_T
---------------------------

 -- Data: mpi4py.MPI.INT16_T: *note Datatype: d0. = INT16_T

     Object ‘INT16_T’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI INT32_T,  Next: mpi4py MPI INT64_T,  Prev: mpi4py MPI INT16_T,  Up: mpi4py MPI<2>

11.1.266 mpi4py.MPI.INT32_T
---------------------------

 -- Data: mpi4py.MPI.INT32_T: *note Datatype: d0. = INT32_T

     Object ‘INT32_T’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI INT64_T,  Next: mpi4py MPI UINT8_T,  Prev: mpi4py MPI INT32_T,  Up: mpi4py MPI<2>

11.1.267 mpi4py.MPI.INT64_T
---------------------------

 -- Data: mpi4py.MPI.INT64_T: *note Datatype: d0. = INT64_T

     Object ‘INT64_T’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI UINT8_T,  Next: mpi4py MPI UINT16_T,  Prev: mpi4py MPI INT64_T,  Up: mpi4py MPI<2>

11.1.268 mpi4py.MPI.UINT8_T
---------------------------

 -- Data: mpi4py.MPI.UINT8_T: *note Datatype: d0. = UINT8_T

     Object ‘UINT8_T’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI UINT16_T,  Next: mpi4py MPI UINT32_T,  Prev: mpi4py MPI UINT8_T,  Up: mpi4py MPI<2>

11.1.269 mpi4py.MPI.UINT16_T
----------------------------

 -- Data: mpi4py.MPI.UINT16_T: *note Datatype: d0. = UINT16_T

     Object ‘UINT16_T’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI UINT32_T,  Next: mpi4py MPI UINT64_T,  Prev: mpi4py MPI UINT16_T,  Up: mpi4py MPI<2>

11.1.270 mpi4py.MPI.UINT32_T
----------------------------

 -- Data: mpi4py.MPI.UINT32_T: *note Datatype: d0. = UINT32_T

     Object ‘UINT32_T’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI UINT64_T,  Next: mpi4py MPI C_COMPLEX,  Prev: mpi4py MPI UINT32_T,  Up: mpi4py MPI<2>

11.1.271 mpi4py.MPI.UINT64_T
----------------------------

 -- Data: mpi4py.MPI.UINT64_T: *note Datatype: d0. = UINT64_T

     Object ‘UINT64_T’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI C_COMPLEX,  Next: mpi4py MPI C_FLOAT_COMPLEX,  Prev: mpi4py MPI UINT64_T,  Up: mpi4py MPI<2>

11.1.272 mpi4py.MPI.C_COMPLEX
-----------------------------

 -- Data: mpi4py.MPI.C_COMPLEX: *note Datatype: d0. = C_COMPLEX

     Object ‘C_COMPLEX’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI C_FLOAT_COMPLEX,  Next: mpi4py MPI C_DOUBLE_COMPLEX,  Prev: mpi4py MPI C_COMPLEX,  Up: mpi4py MPI<2>

11.1.273 mpi4py.MPI.C_FLOAT_COMPLEX
-----------------------------------

 -- Data: mpi4py.MPI.C_FLOAT_COMPLEX: *note Datatype: d0. =
          C_FLOAT_COMPLEX

     Object ‘C_FLOAT_COMPLEX’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI C_DOUBLE_COMPLEX,  Next: mpi4py MPI C_LONG_DOUBLE_COMPLEX,  Prev: mpi4py MPI C_FLOAT_COMPLEX,  Up: mpi4py MPI<2>

11.1.274 mpi4py.MPI.C_DOUBLE_COMPLEX
------------------------------------

 -- Data: mpi4py.MPI.C_DOUBLE_COMPLEX: *note Datatype: d0. =
          C_DOUBLE_COMPLEX

     Object ‘C_DOUBLE_COMPLEX’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI C_LONG_DOUBLE_COMPLEX,  Next: mpi4py MPI CXX_BOOL,  Prev: mpi4py MPI C_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

11.1.275 mpi4py.MPI.C_LONG_DOUBLE_COMPLEX
-----------------------------------------

 -- Data: mpi4py.MPI.C_LONG_DOUBLE_COMPLEX: *note Datatype: d0. =
          C_LONG_DOUBLE_COMPLEX

     Object ‘C_LONG_DOUBLE_COMPLEX’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI CXX_BOOL,  Next: mpi4py MPI CXX_FLOAT_COMPLEX,  Prev: mpi4py MPI C_LONG_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

11.1.276 mpi4py.MPI.CXX_BOOL
----------------------------

 -- Data: mpi4py.MPI.CXX_BOOL: *note Datatype: d0. = CXX_BOOL

     Object ‘CXX_BOOL’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI CXX_FLOAT_COMPLEX,  Next: mpi4py MPI CXX_DOUBLE_COMPLEX,  Prev: mpi4py MPI CXX_BOOL,  Up: mpi4py MPI<2>

11.1.277 mpi4py.MPI.CXX_FLOAT_COMPLEX
-------------------------------------

 -- Data: mpi4py.MPI.CXX_FLOAT_COMPLEX: *note Datatype: d0. =
          CXX_FLOAT_COMPLEX

     Object ‘CXX_FLOAT_COMPLEX’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI CXX_DOUBLE_COMPLEX,  Next: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX,  Prev: mpi4py MPI CXX_FLOAT_COMPLEX,  Up: mpi4py MPI<2>

11.1.278 mpi4py.MPI.CXX_DOUBLE_COMPLEX
--------------------------------------

 -- Data: mpi4py.MPI.CXX_DOUBLE_COMPLEX: *note Datatype: d0. =
          CXX_DOUBLE_COMPLEX

     Object ‘CXX_DOUBLE_COMPLEX’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX,  Next: mpi4py MPI SHORT_INT,  Prev: mpi4py MPI CXX_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

11.1.279 mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX
-------------------------------------------

 -- Data: mpi4py.MPI.CXX_LONG_DOUBLE_COMPLEX: *note Datatype: d0. =
          CXX_LONG_DOUBLE_COMPLEX

     Object ‘CXX_LONG_DOUBLE_COMPLEX’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI SHORT_INT,  Next: mpi4py MPI INT_INT,  Prev: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

11.1.280 mpi4py.MPI.SHORT_INT
-----------------------------

 -- Data: mpi4py.MPI.SHORT_INT: *note Datatype: d0. = SHORT_INT

     Object ‘SHORT_INT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI INT_INT,  Next: mpi4py MPI TWOINT,  Prev: mpi4py MPI SHORT_INT,  Up: mpi4py MPI<2>

11.1.281 mpi4py.MPI.INT_INT
---------------------------

 -- Data: mpi4py.MPI.INT_INT: *note Datatype: d0. = INT_INT

     Object ‘INT_INT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI TWOINT,  Next: mpi4py MPI LONG_INT,  Prev: mpi4py MPI INT_INT,  Up: mpi4py MPI<2>

11.1.282 mpi4py.MPI.TWOINT
--------------------------

 -- Data: mpi4py.MPI.TWOINT: *note Datatype: d0. = TWOINT

     Object ‘TWOINT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI LONG_INT,  Next: mpi4py MPI FLOAT_INT,  Prev: mpi4py MPI TWOINT,  Up: mpi4py MPI<2>

11.1.283 mpi4py.MPI.LONG_INT
----------------------------

 -- Data: mpi4py.MPI.LONG_INT: *note Datatype: d0. = LONG_INT

     Object ‘LONG_INT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI FLOAT_INT,  Next: mpi4py MPI DOUBLE_INT,  Prev: mpi4py MPI LONG_INT,  Up: mpi4py MPI<2>

11.1.284 mpi4py.MPI.FLOAT_INT
-----------------------------

 -- Data: mpi4py.MPI.FLOAT_INT: *note Datatype: d0. = FLOAT_INT

     Object ‘FLOAT_INT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI DOUBLE_INT,  Next: mpi4py MPI LONG_DOUBLE_INT,  Prev: mpi4py MPI FLOAT_INT,  Up: mpi4py MPI<2>

11.1.285 mpi4py.MPI.DOUBLE_INT
------------------------------

 -- Data: mpi4py.MPI.DOUBLE_INT: *note Datatype: d0. = DOUBLE_INT

     Object ‘DOUBLE_INT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI LONG_DOUBLE_INT,  Next: mpi4py MPI CHARACTER,  Prev: mpi4py MPI DOUBLE_INT,  Up: mpi4py MPI<2>

11.1.286 mpi4py.MPI.LONG_DOUBLE_INT
-----------------------------------

 -- Data: mpi4py.MPI.LONG_DOUBLE_INT: *note Datatype: d0. =
          LONG_DOUBLE_INT

     Object ‘LONG_DOUBLE_INT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI CHARACTER,  Next: mpi4py MPI LOGICAL,  Prev: mpi4py MPI LONG_DOUBLE_INT,  Up: mpi4py MPI<2>

11.1.287 mpi4py.MPI.CHARACTER
-----------------------------

 -- Data: mpi4py.MPI.CHARACTER: *note Datatype: d0. = CHARACTER

     Object ‘CHARACTER’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI LOGICAL,  Next: mpi4py MPI INTEGER,  Prev: mpi4py MPI CHARACTER,  Up: mpi4py MPI<2>

11.1.288 mpi4py.MPI.LOGICAL
---------------------------

 -- Data: mpi4py.MPI.LOGICAL: *note Datatype: d0. = LOGICAL

     Object ‘LOGICAL’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI INTEGER,  Next: mpi4py MPI REAL,  Prev: mpi4py MPI LOGICAL,  Up: mpi4py MPI<2>

11.1.289 mpi4py.MPI.INTEGER
---------------------------

 -- Data: mpi4py.MPI.INTEGER: *note Datatype: d0. = INTEGER

     Object ‘INTEGER’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI REAL,  Next: mpi4py MPI DOUBLE_PRECISION,  Prev: mpi4py MPI INTEGER,  Up: mpi4py MPI<2>

11.1.290 mpi4py.MPI.REAL
------------------------

 -- Data: mpi4py.MPI.REAL: *note Datatype: d0. = REAL

     Object ‘REAL’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI DOUBLE_PRECISION,  Next: mpi4py MPI COMPLEX,  Prev: mpi4py MPI REAL,  Up: mpi4py MPI<2>

11.1.291 mpi4py.MPI.DOUBLE_PRECISION
------------------------------------

 -- Data: mpi4py.MPI.DOUBLE_PRECISION: *note Datatype: d0. =
          DOUBLE_PRECISION

     Object ‘DOUBLE_PRECISION’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI COMPLEX,  Next: mpi4py MPI DOUBLE_COMPLEX,  Prev: mpi4py MPI DOUBLE_PRECISION,  Up: mpi4py MPI<2>

11.1.292 mpi4py.MPI.COMPLEX
---------------------------

 -- Data: mpi4py.MPI.COMPLEX: *note Datatype: d0. = COMPLEX

     Object ‘COMPLEX’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI DOUBLE_COMPLEX,  Next: mpi4py MPI LOGICAL1,  Prev: mpi4py MPI COMPLEX,  Up: mpi4py MPI<2>

11.1.293 mpi4py.MPI.DOUBLE_COMPLEX
----------------------------------

 -- Data: mpi4py.MPI.DOUBLE_COMPLEX: *note Datatype: d0. =
          DOUBLE_COMPLEX

     Object ‘DOUBLE_COMPLEX’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI LOGICAL1,  Next: mpi4py MPI LOGICAL2,  Prev: mpi4py MPI DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

11.1.294 mpi4py.MPI.LOGICAL1
----------------------------

 -- Data: mpi4py.MPI.LOGICAL1: *note Datatype: d0. = LOGICAL1

     Object ‘LOGICAL1’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI LOGICAL2,  Next: mpi4py MPI LOGICAL4,  Prev: mpi4py MPI LOGICAL1,  Up: mpi4py MPI<2>

11.1.295 mpi4py.MPI.LOGICAL2
----------------------------

 -- Data: mpi4py.MPI.LOGICAL2: *note Datatype: d0. = LOGICAL2

     Object ‘LOGICAL2’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI LOGICAL4,  Next: mpi4py MPI LOGICAL8,  Prev: mpi4py MPI LOGICAL2,  Up: mpi4py MPI<2>

11.1.296 mpi4py.MPI.LOGICAL4
----------------------------

 -- Data: mpi4py.MPI.LOGICAL4: *note Datatype: d0. = LOGICAL4

     Object ‘LOGICAL4’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI LOGICAL8,  Next: mpi4py MPI INTEGER1,  Prev: mpi4py MPI LOGICAL4,  Up: mpi4py MPI<2>

11.1.297 mpi4py.MPI.LOGICAL8
----------------------------

 -- Data: mpi4py.MPI.LOGICAL8: *note Datatype: d0. = LOGICAL8

     Object ‘LOGICAL8’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI INTEGER1,  Next: mpi4py MPI INTEGER2,  Prev: mpi4py MPI LOGICAL8,  Up: mpi4py MPI<2>

11.1.298 mpi4py.MPI.INTEGER1
----------------------------

 -- Data: mpi4py.MPI.INTEGER1: *note Datatype: d0. = INTEGER1

     Object ‘INTEGER1’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI INTEGER2,  Next: mpi4py MPI INTEGER4,  Prev: mpi4py MPI INTEGER1,  Up: mpi4py MPI<2>

11.1.299 mpi4py.MPI.INTEGER2
----------------------------

 -- Data: mpi4py.MPI.INTEGER2: *note Datatype: d0. = INTEGER2

     Object ‘INTEGER2’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI INTEGER4,  Next: mpi4py MPI INTEGER8,  Prev: mpi4py MPI INTEGER2,  Up: mpi4py MPI<2>

11.1.300 mpi4py.MPI.INTEGER4
----------------------------

 -- Data: mpi4py.MPI.INTEGER4: *note Datatype: d0. = INTEGER4

     Object ‘INTEGER4’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI INTEGER8,  Next: mpi4py MPI INTEGER16,  Prev: mpi4py MPI INTEGER4,  Up: mpi4py MPI<2>

11.1.301 mpi4py.MPI.INTEGER8
----------------------------

 -- Data: mpi4py.MPI.INTEGER8: *note Datatype: d0. = INTEGER8

     Object ‘INTEGER8’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI INTEGER16,  Next: mpi4py MPI REAL2,  Prev: mpi4py MPI INTEGER8,  Up: mpi4py MPI<2>

11.1.302 mpi4py.MPI.INTEGER16
-----------------------------

 -- Data: mpi4py.MPI.INTEGER16: *note Datatype: d0. = INTEGER16

     Object ‘INTEGER16’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI REAL2,  Next: mpi4py MPI REAL4,  Prev: mpi4py MPI INTEGER16,  Up: mpi4py MPI<2>

11.1.303 mpi4py.MPI.REAL2
-------------------------

 -- Data: mpi4py.MPI.REAL2: *note Datatype: d0. = REAL2

     Object ‘REAL2’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI REAL4,  Next: mpi4py MPI REAL8,  Prev: mpi4py MPI REAL2,  Up: mpi4py MPI<2>

11.1.304 mpi4py.MPI.REAL4
-------------------------

 -- Data: mpi4py.MPI.REAL4: *note Datatype: d0. = REAL4

     Object ‘REAL4’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI REAL8,  Next: mpi4py MPI REAL16,  Prev: mpi4py MPI REAL4,  Up: mpi4py MPI<2>

11.1.305 mpi4py.MPI.REAL8
-------------------------

 -- Data: mpi4py.MPI.REAL8: *note Datatype: d0. = REAL8

     Object ‘REAL8’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI REAL16,  Next: mpi4py MPI COMPLEX4,  Prev: mpi4py MPI REAL8,  Up: mpi4py MPI<2>

11.1.306 mpi4py.MPI.REAL16
--------------------------

 -- Data: mpi4py.MPI.REAL16: *note Datatype: d0. = REAL16

     Object ‘REAL16’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI COMPLEX4,  Next: mpi4py MPI COMPLEX8,  Prev: mpi4py MPI REAL16,  Up: mpi4py MPI<2>

11.1.307 mpi4py.MPI.COMPLEX4
----------------------------

 -- Data: mpi4py.MPI.COMPLEX4: *note Datatype: d0. = COMPLEX4

     Object ‘COMPLEX4’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI COMPLEX8,  Next: mpi4py MPI COMPLEX16,  Prev: mpi4py MPI COMPLEX4,  Up: mpi4py MPI<2>

11.1.308 mpi4py.MPI.COMPLEX8
----------------------------

 -- Data: mpi4py.MPI.COMPLEX8: *note Datatype: d0. = COMPLEX8

     Object ‘COMPLEX8’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI COMPLEX16,  Next: mpi4py MPI COMPLEX32,  Prev: mpi4py MPI COMPLEX8,  Up: mpi4py MPI<2>

11.1.309 mpi4py.MPI.COMPLEX16
-----------------------------

 -- Data: mpi4py.MPI.COMPLEX16: *note Datatype: d0. = COMPLEX16

     Object ‘COMPLEX16’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI COMPLEX32,  Next: mpi4py MPI UNSIGNED_INT,  Prev: mpi4py MPI COMPLEX16,  Up: mpi4py MPI<2>

11.1.310 mpi4py.MPI.COMPLEX32
-----------------------------

 -- Data: mpi4py.MPI.COMPLEX32: *note Datatype: d0. = COMPLEX32

     Object ‘COMPLEX32’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI UNSIGNED_INT,  Next: mpi4py MPI SIGNED_SHORT,  Prev: mpi4py MPI COMPLEX32,  Up: mpi4py MPI<2>

11.1.311 mpi4py.MPI.UNSIGNED_INT
--------------------------------

 -- Data: mpi4py.MPI.UNSIGNED_INT: *note Datatype: d0. = UNSIGNED_INT

     Object ‘UNSIGNED_INT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI SIGNED_SHORT,  Next: mpi4py MPI SIGNED_INT,  Prev: mpi4py MPI UNSIGNED_INT,  Up: mpi4py MPI<2>

11.1.312 mpi4py.MPI.SIGNED_SHORT
--------------------------------

 -- Data: mpi4py.MPI.SIGNED_SHORT: *note Datatype: d0. = SIGNED_SHORT

     Object ‘SIGNED_SHORT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI SIGNED_INT,  Next: mpi4py MPI SIGNED_LONG,  Prev: mpi4py MPI SIGNED_SHORT,  Up: mpi4py MPI<2>

11.1.313 mpi4py.MPI.SIGNED_INT
------------------------------

 -- Data: mpi4py.MPI.SIGNED_INT: *note Datatype: d0. = SIGNED_INT

     Object ‘SIGNED_INT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI SIGNED_LONG,  Next: mpi4py MPI SIGNED_LONG_LONG,  Prev: mpi4py MPI SIGNED_INT,  Up: mpi4py MPI<2>

11.1.314 mpi4py.MPI.SIGNED_LONG
-------------------------------

 -- Data: mpi4py.MPI.SIGNED_LONG: *note Datatype: d0. = SIGNED_LONG

     Object ‘SIGNED_LONG’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI SIGNED_LONG_LONG,  Next: mpi4py MPI BOOL,  Prev: mpi4py MPI SIGNED_LONG,  Up: mpi4py MPI<2>

11.1.315 mpi4py.MPI.SIGNED_LONG_LONG
------------------------------------

 -- Data: mpi4py.MPI.SIGNED_LONG_LONG: *note Datatype: d0. =
          SIGNED_LONG_LONG

     Object ‘SIGNED_LONG_LONG’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI BOOL,  Next: mpi4py MPI SINT8_T,  Prev: mpi4py MPI SIGNED_LONG_LONG,  Up: mpi4py MPI<2>

11.1.316 mpi4py.MPI.BOOL
------------------------

 -- Data: mpi4py.MPI.BOOL: *note Datatype: d0. = BOOL

     Object ‘BOOL’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI SINT8_T,  Next: mpi4py MPI SINT16_T,  Prev: mpi4py MPI BOOL,  Up: mpi4py MPI<2>

11.1.317 mpi4py.MPI.SINT8_T
---------------------------

 -- Data: mpi4py.MPI.SINT8_T: *note Datatype: d0. = SINT8_T

     Object ‘SINT8_T’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI SINT16_T,  Next: mpi4py MPI SINT32_T,  Prev: mpi4py MPI SINT8_T,  Up: mpi4py MPI<2>

11.1.318 mpi4py.MPI.SINT16_T
----------------------------

 -- Data: mpi4py.MPI.SINT16_T: *note Datatype: d0. = SINT16_T

     Object ‘SINT16_T’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI SINT32_T,  Next: mpi4py MPI SINT64_T,  Prev: mpi4py MPI SINT16_T,  Up: mpi4py MPI<2>

11.1.319 mpi4py.MPI.SINT32_T
----------------------------

 -- Data: mpi4py.MPI.SINT32_T: *note Datatype: d0. = SINT32_T

     Object ‘SINT32_T’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI SINT64_T,  Next: mpi4py MPI F_BOOL,  Prev: mpi4py MPI SINT32_T,  Up: mpi4py MPI<2>

11.1.320 mpi4py.MPI.SINT64_T
----------------------------

 -- Data: mpi4py.MPI.SINT64_T: *note Datatype: d0. = SINT64_T

     Object ‘SINT64_T’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI F_BOOL,  Next: mpi4py MPI F_INT,  Prev: mpi4py MPI SINT64_T,  Up: mpi4py MPI<2>

11.1.321 mpi4py.MPI.F_BOOL
--------------------------

 -- Data: mpi4py.MPI.F_BOOL: *note Datatype: d0. = F_BOOL

     Object ‘F_BOOL’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI F_INT,  Next: mpi4py MPI F_FLOAT,  Prev: mpi4py MPI F_BOOL,  Up: mpi4py MPI<2>

11.1.322 mpi4py.MPI.F_INT
-------------------------

 -- Data: mpi4py.MPI.F_INT: *note Datatype: d0. = F_INT

     Object ‘F_INT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI F_FLOAT,  Next: mpi4py MPI F_DOUBLE,  Prev: mpi4py MPI F_INT,  Up: mpi4py MPI<2>

11.1.323 mpi4py.MPI.F_FLOAT
---------------------------

 -- Data: mpi4py.MPI.F_FLOAT: *note Datatype: d0. = F_FLOAT

     Object ‘F_FLOAT’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI F_DOUBLE,  Next: mpi4py MPI F_COMPLEX,  Prev: mpi4py MPI F_FLOAT,  Up: mpi4py MPI<2>

11.1.324 mpi4py.MPI.F_DOUBLE
----------------------------

 -- Data: mpi4py.MPI.F_DOUBLE: *note Datatype: d0. = F_DOUBLE

     Object ‘F_DOUBLE’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI F_COMPLEX,  Next: mpi4py MPI F_FLOAT_COMPLEX,  Prev: mpi4py MPI F_DOUBLE,  Up: mpi4py MPI<2>

11.1.325 mpi4py.MPI.F_COMPLEX
-----------------------------

 -- Data: mpi4py.MPI.F_COMPLEX: *note Datatype: d0. = F_COMPLEX

     Object ‘F_COMPLEX’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI F_FLOAT_COMPLEX,  Next: mpi4py MPI F_DOUBLE_COMPLEX,  Prev: mpi4py MPI F_COMPLEX,  Up: mpi4py MPI<2>

11.1.326 mpi4py.MPI.F_FLOAT_COMPLEX
-----------------------------------

 -- Data: mpi4py.MPI.F_FLOAT_COMPLEX: *note Datatype: d0. =
          F_FLOAT_COMPLEX

     Object ‘F_FLOAT_COMPLEX’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI F_DOUBLE_COMPLEX,  Next: mpi4py MPI REQUEST_NULL,  Prev: mpi4py MPI F_FLOAT_COMPLEX,  Up: mpi4py MPI<2>

11.1.327 mpi4py.MPI.F_DOUBLE_COMPLEX
------------------------------------

 -- Data: mpi4py.MPI.F_DOUBLE_COMPLEX: *note Datatype: d0. =
          F_DOUBLE_COMPLEX

     Object ‘F_DOUBLE_COMPLEX’ of type *note Datatype: d0.


File: mpi4py.info,  Node: mpi4py MPI REQUEST_NULL,  Next: mpi4py MPI MESSAGE_NULL,  Prev: mpi4py MPI F_DOUBLE_COMPLEX,  Up: mpi4py MPI<2>

11.1.328 mpi4py.MPI.REQUEST_NULL
--------------------------------

 -- Data: mpi4py.MPI.REQUEST_NULL: *note Request: 43. = REQUEST_NULL

     Object ‘REQUEST_NULL’ of type *note Request: 43.


File: mpi4py.info,  Node: mpi4py MPI MESSAGE_NULL,  Next: mpi4py MPI MESSAGE_NO_PROC,  Prev: mpi4py MPI REQUEST_NULL,  Up: mpi4py MPI<2>

11.1.329 mpi4py.MPI.MESSAGE_NULL
--------------------------------

 -- Data: mpi4py.MPI.MESSAGE_NULL: *note Message: d7. = MESSAGE_NULL

     Object ‘MESSAGE_NULL’ of type *note Message: d7.


File: mpi4py.info,  Node: mpi4py MPI MESSAGE_NO_PROC,  Next: mpi4py MPI OP_NULL,  Prev: mpi4py MPI MESSAGE_NULL,  Up: mpi4py MPI<2>

11.1.330 mpi4py.MPI.MESSAGE_NO_PROC
-----------------------------------

 -- Data: mpi4py.MPI.MESSAGE_NO_PROC: *note Message: d7. =
          MESSAGE_NO_PROC

     Object ‘MESSAGE_NO_PROC’ of type *note Message: d7.


File: mpi4py.info,  Node: mpi4py MPI OP_NULL,  Next: mpi4py MPI MAX,  Prev: mpi4py MPI MESSAGE_NO_PROC,  Up: mpi4py MPI<2>

11.1.331 mpi4py.MPI.OP_NULL
---------------------------

 -- Data: mpi4py.MPI.OP_NULL: *note Op: d3. = OP_NULL

     Object ‘OP_NULL’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MAX,  Next: mpi4py MPI MIN,  Prev: mpi4py MPI OP_NULL,  Up: mpi4py MPI<2>

11.1.332 mpi4py.MPI.MAX
-----------------------

 -- Data: mpi4py.MPI.MAX: *note Op: d3. = MAX

     Object ‘MAX’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MIN,  Next: mpi4py MPI SUM,  Prev: mpi4py MPI MAX,  Up: mpi4py MPI<2>

11.1.333 mpi4py.MPI.MIN
-----------------------

 -- Data: mpi4py.MPI.MIN: *note Op: d3. = MIN

     Object ‘MIN’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI SUM,  Next: mpi4py MPI PROD,  Prev: mpi4py MPI MIN,  Up: mpi4py MPI<2>

11.1.334 mpi4py.MPI.SUM
-----------------------

 -- Data: mpi4py.MPI.SUM: *note Op: d3. = SUM

     Object ‘SUM’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI PROD,  Next: mpi4py MPI LAND,  Prev: mpi4py MPI SUM,  Up: mpi4py MPI<2>

11.1.335 mpi4py.MPI.PROD
------------------------

 -- Data: mpi4py.MPI.PROD: *note Op: d3. = PROD

     Object ‘PROD’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI LAND,  Next: mpi4py MPI BAND,  Prev: mpi4py MPI PROD,  Up: mpi4py MPI<2>

11.1.336 mpi4py.MPI.LAND
------------------------

 -- Data: mpi4py.MPI.LAND: *note Op: d3. = LAND

     Object ‘LAND’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI BAND,  Next: mpi4py MPI LOR,  Prev: mpi4py MPI LAND,  Up: mpi4py MPI<2>

11.1.337 mpi4py.MPI.BAND
------------------------

 -- Data: mpi4py.MPI.BAND: *note Op: d3. = BAND

     Object ‘BAND’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI LOR,  Next: mpi4py MPI BOR,  Prev: mpi4py MPI BAND,  Up: mpi4py MPI<2>

11.1.338 mpi4py.MPI.LOR
-----------------------

 -- Data: mpi4py.MPI.LOR: *note Op: d3. = LOR

     Object ‘LOR’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI BOR,  Next: mpi4py MPI LXOR,  Prev: mpi4py MPI LOR,  Up: mpi4py MPI<2>

11.1.339 mpi4py.MPI.BOR
-----------------------

 -- Data: mpi4py.MPI.BOR: *note Op: d3. = BOR

     Object ‘BOR’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI LXOR,  Next: mpi4py MPI BXOR,  Prev: mpi4py MPI BOR,  Up: mpi4py MPI<2>

11.1.340 mpi4py.MPI.LXOR
------------------------

 -- Data: mpi4py.MPI.LXOR: *note Op: d3. = LXOR

     Object ‘LXOR’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI BXOR,  Next: mpi4py MPI MAXLOC,  Prev: mpi4py MPI LXOR,  Up: mpi4py MPI<2>

11.1.341 mpi4py.MPI.BXOR
------------------------

 -- Data: mpi4py.MPI.BXOR: *note Op: d3. = BXOR

     Object ‘BXOR’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MAXLOC,  Next: mpi4py MPI MINLOC,  Prev: mpi4py MPI BXOR,  Up: mpi4py MPI<2>

11.1.342 mpi4py.MPI.MAXLOC
--------------------------

 -- Data: mpi4py.MPI.MAXLOC: *note Op: d3. = MAXLOC

     Object ‘MAXLOC’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI MINLOC,  Next: mpi4py MPI REPLACE,  Prev: mpi4py MPI MAXLOC,  Up: mpi4py MPI<2>

11.1.343 mpi4py.MPI.MINLOC
--------------------------

 -- Data: mpi4py.MPI.MINLOC: *note Op: d3. = MINLOC

     Object ‘MINLOC’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI REPLACE,  Next: mpi4py MPI NO_OP,  Prev: mpi4py MPI MINLOC,  Up: mpi4py MPI<2>

11.1.344 mpi4py.MPI.REPLACE
---------------------------

 -- Data: mpi4py.MPI.REPLACE: *note Op: d3. = REPLACE

     Object ‘REPLACE’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI NO_OP,  Next: mpi4py MPI GROUP_NULL,  Prev: mpi4py MPI REPLACE,  Up: mpi4py MPI<2>

11.1.345 mpi4py.MPI.NO_OP
-------------------------

 -- Data: mpi4py.MPI.NO_OP: *note Op: d3. = NO_OP

     Object ‘NO_OP’ of type *note Op: d3.


     Parameters:

        * ‘x’ (‘Any’)

        * ‘y’ (‘Any’)


     Return type: Any


File: mpi4py.info,  Node: mpi4py MPI GROUP_NULL,  Next: mpi4py MPI GROUP_EMPTY,  Prev: mpi4py MPI NO_OP,  Up: mpi4py MPI<2>

11.1.346 mpi4py.MPI.GROUP_NULL
------------------------------

 -- Data: mpi4py.MPI.GROUP_NULL: *note Group: 28. = GROUP_NULL

     Object ‘GROUP_NULL’ of type *note Group: 28.


File: mpi4py.info,  Node: mpi4py MPI GROUP_EMPTY,  Next: mpi4py MPI INFO_NULL,  Prev: mpi4py MPI GROUP_NULL,  Up: mpi4py MPI<2>

11.1.347 mpi4py.MPI.GROUP_EMPTY
-------------------------------

 -- Data: mpi4py.MPI.GROUP_EMPTY: *note Group: 28. = GROUP_EMPTY

     Object ‘GROUP_EMPTY’ of type *note Group: 28.


File: mpi4py.info,  Node: mpi4py MPI INFO_NULL,  Next: mpi4py MPI INFO_ENV,  Prev: mpi4py MPI GROUP_EMPTY,  Up: mpi4py MPI<2>

11.1.348 mpi4py.MPI.INFO_NULL
-----------------------------

 -- Data: mpi4py.MPI.INFO_NULL: *note Info: d4. = INFO_NULL

     Object ‘INFO_NULL’ of type *note Info: d4.


File: mpi4py.info,  Node: mpi4py MPI INFO_ENV,  Next: mpi4py MPI ERRHANDLER_NULL,  Prev: mpi4py MPI INFO_NULL,  Up: mpi4py MPI<2>

11.1.349 mpi4py.MPI.INFO_ENV
----------------------------

 -- Data: mpi4py.MPI.INFO_ENV: *note Info: d4. = INFO_ENV

     Object ‘INFO_ENV’ of type *note Info: d4.


File: mpi4py.info,  Node: mpi4py MPI ERRHANDLER_NULL,  Next: mpi4py MPI ERRORS_RETURN,  Prev: mpi4py MPI INFO_ENV,  Up: mpi4py MPI<2>

11.1.350 mpi4py.MPI.ERRHANDLER_NULL
-----------------------------------

 -- Data: mpi4py.MPI.ERRHANDLER_NULL: *note Errhandler: d8. =
          ERRHANDLER_NULL

     Object ‘ERRHANDLER_NULL’ of type *note Errhandler: d8.


File: mpi4py.info,  Node: mpi4py MPI ERRORS_RETURN,  Next: mpi4py MPI ERRORS_ABORT,  Prev: mpi4py MPI ERRHANDLER_NULL,  Up: mpi4py MPI<2>

11.1.351 mpi4py.MPI.ERRORS_RETURN
---------------------------------

 -- Data: mpi4py.MPI.ERRORS_RETURN: *note Errhandler: d8. =
          ERRORS_RETURN

     Object ‘ERRORS_RETURN’ of type *note Errhandler: d8.


File: mpi4py.info,  Node: mpi4py MPI ERRORS_ABORT,  Next: mpi4py MPI ERRORS_ARE_FATAL,  Prev: mpi4py MPI ERRORS_RETURN,  Up: mpi4py MPI<2>

11.1.352 mpi4py.MPI.ERRORS_ABORT
--------------------------------

 -- Data: mpi4py.MPI.ERRORS_ABORT: *note Errhandler: d8. = ERRORS_ABORT

     Object ‘ERRORS_ABORT’ of type *note Errhandler: d8.


File: mpi4py.info,  Node: mpi4py MPI ERRORS_ARE_FATAL,  Next: mpi4py MPI SESSION_NULL,  Prev: mpi4py MPI ERRORS_ABORT,  Up: mpi4py MPI<2>

11.1.353 mpi4py.MPI.ERRORS_ARE_FATAL
------------------------------------

 -- Data: mpi4py.MPI.ERRORS_ARE_FATAL: *note Errhandler: d8. =
          ERRORS_ARE_FATAL

     Object ‘ERRORS_ARE_FATAL’ of type *note Errhandler: d8.


File: mpi4py.info,  Node: mpi4py MPI SESSION_NULL,  Next: mpi4py MPI COMM_NULL,  Prev: mpi4py MPI ERRORS_ARE_FATAL,  Up: mpi4py MPI<2>

11.1.354 mpi4py.MPI.SESSION_NULL
--------------------------------

 -- Data: mpi4py.MPI.SESSION_NULL: *note Session: d5. = SESSION_NULL

     Object ‘SESSION_NULL’ of type *note Session: d5.


File: mpi4py.info,  Node: mpi4py MPI COMM_NULL,  Next: mpi4py MPI COMM_SELF,  Prev: mpi4py MPI SESSION_NULL,  Up: mpi4py MPI<2>

11.1.355 mpi4py.MPI.COMM_NULL
-----------------------------

 -- Data: mpi4py.MPI.COMM_NULL: *note Comm: 1e. = COMM_NULL

     Object ‘COMM_NULL’ of type *note Comm: 1e.


File: mpi4py.info,  Node: mpi4py MPI COMM_SELF,  Next: mpi4py MPI COMM_WORLD,  Prev: mpi4py MPI COMM_NULL,  Up: mpi4py MPI<2>

11.1.356 mpi4py.MPI.COMM_SELF
-----------------------------

 -- Data: mpi4py.MPI.COMM_SELF: *note Intracomm: 1f. = COMM_SELF

     Object ‘COMM_SELF’ of type *note Intracomm: 1f.


File: mpi4py.info,  Node: mpi4py MPI COMM_WORLD,  Next: mpi4py MPI WIN_NULL,  Prev: mpi4py MPI COMM_SELF,  Up: mpi4py MPI<2>

11.1.357 mpi4py.MPI.COMM_WORLD
------------------------------

 -- Data: mpi4py.MPI.COMM_WORLD: *note Intracomm: 1f. = COMM_WORLD

     Object ‘COMM_WORLD’ of type *note Intracomm: 1f.


File: mpi4py.info,  Node: mpi4py MPI WIN_NULL,  Next: mpi4py MPI FILE_NULL,  Prev: mpi4py MPI COMM_WORLD,  Up: mpi4py MPI<2>

11.1.358 mpi4py.MPI.WIN_NULL
----------------------------

 -- Data: mpi4py.MPI.WIN_NULL: *note Win: 76. = WIN_NULL

     Object ‘WIN_NULL’ of type *note Win: 76.


File: mpi4py.info,  Node: mpi4py MPI FILE_NULL,  Next: mpi4py MPI pickle,  Prev: mpi4py MPI WIN_NULL,  Up: mpi4py MPI<2>

11.1.359 mpi4py.MPI.FILE_NULL
-----------------------------

 -- Data: mpi4py.MPI.FILE_NULL: *note File: 84. = FILE_NULL

     Object ‘FILE_NULL’ of type *note File: 84.


File: mpi4py.info,  Node: mpi4py MPI pickle,  Prev: mpi4py MPI FILE_NULL,  Up: mpi4py MPI<2>

11.1.360 mpi4py.MPI.pickle
--------------------------

 -- Data: mpi4py.MPI.pickle: *note Pickle: d9. = <mpi4py.MPI.Pickle
          object>

     Object ‘pickle’ of type *note Pickle: d9.


File: mpi4py.info,  Node: Citation<2>,  Next: Installation,  Prev: Reference,  Up: Top

12 Citation
***********

If MPI for Python been significant to a project that leads to an
academic publication, please acknowledge that fact by citing the
project.

   * M. Rogowski, S. Aseeri, D. Keyes, and L. Dalcin, 'mpi4py.futures:
     MPI-Based Asynchronous Task Execution for Python', IEEE
     Transactions on Parallel and Distributed Systems, 34(2):611-622,
     2023.  ‘https://doi.org/10.1109/TPDS.2022.3225481’

   * L. Dalcin and Y.-L. L. Fang, 'mpi4py: Status Update After 12 Years
     of Development', Computing in Science & Engineering, 23(4):47-54,
     2021.  ‘https://doi.org/10.1109/MCSE.2021.3083216’

   * L. Dalcin, P. Kler, R. Paz, and A. Cosimo, 'Parallel Distributed
     Computing using Python', Advances in Water Resources,
     34(9):1124-1139, 2011.
     ‘https://doi.org/10.1016/j.advwatres.2011.04.013’

   * L. Dalcin, R. Paz, M. Storti, and J. D’Elia, 'MPI for Python:
     performance improvements and MPI-2 extensions', Journal of Parallel
     and Distributed Computing, 68(5):655-662, 2008.
     ‘https://doi.org/10.1016/j.jpdc.2007.09.005’

   * L. Dalcin, R. Paz, and M. Storti, 'MPI for Python', Journal of
     Parallel and Distributed Computing, 65(9):1108-1115, 2005.
     ‘https://doi.org/10.1016/j.jpdc.2005.03.010’


File: mpi4py.info,  Node: Installation,  Next: Development,  Prev: Citation<2>,  Up: Top

13 Installation
***************

* Menu:

* Build backends::
* Using pip::
* Using conda::
* Linux::
* macOS::
* Windows::


File: mpi4py.info,  Node: Build backends,  Next: Using pip,  Up: Installation

13.1 Build backends
===================

mpi4py supports three different build backends: setuptools(1) (default),
scikit-build-core(2) (CMake(3)-based), and meson-python(4)
(Meson(5)-based).  The build backend can be selected by setting the
*note MPI4PY_BUILD_BACKEND: 7b9. environment variable.

 -- Environment Variable: MPI4PY_BUILD_BACKEND


     Choices: ‘"setuptools"’, ‘"scikit-build-core"’, ‘"meson-python"’


     Default: ‘"setuptools"’

     Request a build backend for building mpi4py from sources.

* Menu:

* Using setuptools::
* Using scikit-build-core::
* Using meson-python::

   ---------- Footnotes ----------

   (1) https://setuptools.pypa.io/

   (2) https://scikit-build-core.readthedocs.io/

   (3) https://cmake.org/

   (4) https://meson-python.readthedocs.io/

   (5) https://mesonbuild.com/


File: mpi4py.info,  Node: Using setuptools,  Next: Using scikit-build-core,  Up: Build backends

13.1.1 Using 'setuptools'
-------------------------

     Tip: Set the *note MPI4PY_BUILD_BACKEND: 7b9. environment variable
     to ‘"setuptools"’ to use the setuptools(1) build backend.

When using the default setuptools(2) build backend, mpi4py relies on the
legacy Python distutils framework to build C extension modules.  The
following environment variables affect the build configuration.

 -- Environment Variable: MPI4PY_BUILD_MPICC

     The ‘mpicc’ compiler wrapper command is searched for in the
     executable search path ( ‘PATH’ environment variable) and used to
     compile the *note mpi4py.MPI: 3. C extension module.
     Alternatively, use the *note MPI4PY_BUILD_MPICC: 7bb. environment
     variable to the full path or command corresponding to the MPI-aware
     C compiler.

 -- Environment Variable: MPI4PY_BUILD_MPILD

     The ‘mpicc’ compiler wrapper command is also used for linking the
     *note mpi4py.MPI: 3. C extension module.  Alternatively, use the
     *note MPI4PY_BUILD_MPILD: 7bc. environment variable to specify the
     full path or command corresponding to the MPI-aware C linker.

 -- Environment Variable: MPI4PY_BUILD_MPICFG

     If the MPI implementation does not provide a compiler wrapper, or
     it is not installed in a default system location, all relevant
     build information like include/library locations and library lists
     can be provided in an ini-style configuration file under a ‘[mpi]’
     section.  mpi4py can then be asked to use the custom build
     information by setting the *note MPI4PY_BUILD_MPICFG: 7bd.
     environment variable to the full path of the configuration file.
     As an example, see the ‘mpi.cfg’ file located in the top level
     mpi4py source directory.

 -- Environment Variable: MPI4PY_BUILD_CONFIGURE

     Some vendor MPI implementations may not provide complete coverage
     of the MPI standard, or may provide partial features of newer MPI
     standard versions while advertising support for an older version.
     Setting the *note MPI4PY_BUILD_CONFIGURE: 7be. environment variable
     to a non-empty string will trigger the run of exhaustive checks for
     the availability of all MPI constants, predefined handles, and
     routines.

The following environment variables are aliases for the ones described
above.  Having shorter names, they are convenient for occasional use in
the command line.  Its usage is not recommended in automation scenarios
like packaging recipes, deployment scripts, and container image
creation.

 -- Environment Variable: MPICC

     Convenience alias for *note MPI4PY_BUILD_MPICC: 7bb.

 -- Environment Variable: MPILD

     Convenience alias for *note MPI4PY_BUILD_MPILD: 7bc.

 -- Environment Variable: MPICFG

     Convenience alias for *note MPI4PY_BUILD_MPICFG: 7bd.

   ---------- Footnotes ----------

   (1) https://setuptools.pypa.io/

   (2) https://setuptools.pypa.io/


File: mpi4py.info,  Node: Using scikit-build-core,  Next: Using meson-python,  Prev: Using setuptools,  Up: Build backends

13.1.2 Using 'scikit-build-core'
--------------------------------

     Tip: Set the *note MPI4PY_BUILD_BACKEND: 7b9. environment variable
     to ‘"scikit-build-core"’ to use the scikit-build-core(1) build
     backend.

When using the scikit-build-core(2) build backend, mpi4py delegates all
of MPI build configuration to CMake(3)’s FindMPI(4) module.  Besides the
obvious advantage of cross-platform support, this delegation to CMake
may be convenient in build environments exposing vendor software stacks
via intricate module systems.  Note however that mpi4py will not be able
to look for MPI routines available beyond the MPI standard version the
MPI implementation advertises to support (via the ‘MPI_VERSION’ and
‘MPI_SUBVERSION’ macro constants in the ‘mpi.h’ header file), any
missing MPI constant or symbol will prevent a successful build.

   ---------- Footnotes ----------

   (1) https://scikit-build-core.readthedocs.io/

   (2) https://scikit-build-core.readthedocs.io/

   (3) https://cmake.org/

   (4) https://cmake.org/cmake/help/latest/module/FindMPI.html


File: mpi4py.info,  Node: Using meson-python,  Prev: Using scikit-build-core,  Up: Build backends

13.1.3 Using 'meson-python'
---------------------------

     Tip: Set the *note MPI4PY_BUILD_BACKEND: 7b9. environment variable
     to ‘"meson-python"’ to use the meson-python(1) build backend.

When using the meson-python(2) build backend, mpi4py delegates build
tasks to the Meson(3) build system.

     Warning: mpi4py support for the meson-python(4) build backend is
     experimental.  For the time being, users must set the CC(5)
     environment variable to the command or path corresponding to the
     ‘mpicc’ C compiler wrapper.

   ---------- Footnotes ----------

   (1) https://meson-python.readthedocs.io/

   (2) https://meson-python.readthedocs.io/

   (3) https://mesonbuild.com/

   (4) https://meson-python.readthedocs.io/

   (5) https://docs.python.org/3/using/configure.html#envvar-CC


File: mpi4py.info,  Node: Using pip,  Next: Using conda,  Prev: Build backends,  Up: Installation

13.2 Using 'pip'
================

You can install the latest mpi4py release from its source distribution
at PyPI(1) using ‘pip’:

     $ python -m pip install mpi4py

You can also install the in-development version with:

     $ python -m pip install git+https://github.com/mpi4py/mpi4py

or:

     $ python -m pip install https://github.com/mpi4py/mpi4py/tarball/master

     Note: Installing mpi4py from its source distribution (available at
     PyPI) or Git source code repository (available at GitHub) requires
     a C compiler and a working MPI implementation with development
     headers and libraries.

     Warning: ‘pip’ keeps previously built wheel files on its cache for
     future reuse.  If you want to reinstall the ‘mpi4py’ package using
     a different or updated MPI implementation, you have to either first
     remove the cached wheel file with:

          $ python -m pip cache remove mpi4py

     or ask ‘pip’ to disable the cache:

          $ python -m pip install --no-cache-dir mpi4py

   ---------- Footnotes ----------

   (1) https://pypi.org/project/mpi4py/


File: mpi4py.info,  Node: Using conda,  Next: Linux,  Prev: Using pip,  Up: Installation

13.3 Using 'conda'
==================

The conda-forge(1) community provides ready-to-use binary packages from
an ever growing collection of software libraries built around the
multi-platform 'conda' package manager.  Four MPI implementations are
available on conda-forge: Open MPI (Linux and macOS), MPICH (Linux and
macOS), Intel MPI (Linux and Windows) and Microsoft MPI (Windows).  You
can install mpi4py and your preferred MPI implementation using the
‘conda’ package manager:

   * to use MPICH do:

          $ conda install -c conda-forge mpi4py mpich

   * to use Open MPI do:

          $ conda install -c conda-forge mpi4py openmpi

   * to use Intel MPI do:

          $ conda install -c conda-forge mpi4py impi_rt

   * to use Microsoft MPI do:

          $ conda install -c conda-forge mpi4py msmpi

MPICH and many of its derivatives are ABI-compatible.  You can provide
the package specification ‘mpich=X.Y.*=external_*’ (where ‘X’ and ‘Y’
are the major and minor version numbers) to request the conda package
manager to use system-provided MPICH (or derivative) libraries.
Similarly, you can provide the package specification
‘openmpi=X.Y.*=external_*’ to use system-provided Open MPI libraries.

The ‘openmpi’ package on conda-forge has built-in CUDA support, but it
is disabled by default.  To enable it, follow the instruction outlined
during ‘conda install’.  Additionally, UCX support is also available
once the ‘ucx’ package is installed.

     Warning: Binary conda-forge packages are built with a focus on
     compatibility.  The MPICH and Open MPI packages are build in a
     constrained environment with relatively dated OS images.
     Therefore, they may lack support for high-performance features like
     cross-memory attach (XPMEM/CMA). In production scenarios, it is
     recommended to use external (either custom-built or
     system-provided) MPI installations.  See the relevant conda-forge
     documentation about using external MPI libraries(2) .

   ---------- Footnotes ----------

   (1) https://conda-forge.org/

   (2) 
https://conda-forge.org/docs/user/tipsandtricks/#using-external-message-passing-interface-mpi-libraries


File: mpi4py.info,  Node: Linux,  Next: macOS,  Prev: Using conda,  Up: Installation

13.4 Linux
==========

On 'Fedora Linux' systems (as well as 'RHEL' and their derivatives using
the EPEL software repository), you can install binary packages with the
system package manager:

   * using ‘dnf’ and the ‘mpich’ package:

          $ sudo dnf install python3-mpi4py-mpich

   * using ‘dnf’ and the ‘openmpi’ package:

          $ sudo dnf install python3-mpi4py-openmpi

Please remember to load the correct MPI module for your chosen MPI
implementation:

   * for the ‘mpich’ package do:

          $ module load mpi/mpich-$(arch)
          $ python -c "from mpi4py import MPI"

   * for the ‘openmpi’ package do:

          $ module load mpi/openmpi-$(arch)
          $ python -c "from mpi4py import MPI"

On 'Ubuntu Linux' and 'Debian Linux' systems, binary packages are
available for installation using the system package manager:

     $ sudo apt install python3-mpi4py

Note that on Ubuntu/Debian systems, the mpi4py package uses Open MPI. To
use MPICH, install the ‘libmpich-dev’ and ‘python3-dev’ packages (and
any other required development tools).  Afterwards, install mpi4py from
sources using ‘pip’.


File: mpi4py.info,  Node: macOS,  Next: Windows,  Prev: Linux,  Up: Installation

13.5 macOS
==========

'macOS' users can install mpi4py using the Homebrew(1) package manager:

     $ brew install mpi4py

Note that the Homebrew mpi4py package uses Open MPI. Alternatively,
install the ‘mpich’ package and next install mpi4py from sources using
‘pip’.

   ---------- Footnotes ----------

   (1) https://brew.sh/


File: mpi4py.info,  Node: Windows,  Prev: macOS,  Up: Installation

13.6 Windows
============

'Windows' users can install mpi4py from binary wheels hosted on the
Python Package Index (PyPI) using ‘pip’:

     $ python -m pip install mpi4py

The Windows wheels available on PyPI are specially crafted to work with
either the Intel MPI(1) or the Microsoft MPI(2) runtime, therefore
requiring a separate installation of any one of these packages.

Intel MPI is under active development and supports recent version of the
MPI standard.  Intel MPI can be installed with ‘pip’ (see the impi-rt(3)
package on PyPI), being therefore straightforward to get it up and
running within a Python environment.  Intel MPI can also be installed
system-wide as part of the Intel HPC Toolkit for Windows or via
standalone online/offline installers.

   ---------- Footnotes ----------

   (1) https://software.intel.com/intel-mpi-library

   (2) 
https://learn.microsoft.com/message-passing-interface/microsoft-mpi

   (3) https://pypi.org/project/impi-rt/


File: mpi4py.info,  Node: Development,  Next: Guidelines,  Prev: Installation,  Up: Top

14 Development
**************

* Menu:

* Prerequisites::
* Building::
* Installing::
* Testing::


File: mpi4py.info,  Node: Prerequisites,  Next: Building,  Up: Development

14.1 Prerequisites
==================

You need to have the following software properly installed to develop
'MPI for Python':

   * Python(1) 3.6 or above.

   * The Cython(2) compiler.

   * A working MPI(3) implementation like MPICH(4) or Open MPI(5),
     preferably supporting MPI-4 and built with shared/dynamic
     libraries.

Optionally, consider installing the following packages:

   * NumPy(6) for enabling comprehensive testing of MPI communication.

   * CuPy(7) for enabling comprehensive testing with a GPU-aware MPI.

   * Sphinx(8) to build the documentation.

     Tip: Most routine development tasks like building, installing in
     editable mode, testing, and generating documentation can be
     performed with the spin(9) developer tool.  Run ‘spin’ at the top
     level source directory for a list of available subcommands.

   ---------- Footnotes ----------

   (1) https://www.python.org/

   (2) https://cython.org/

   (3) https://www.mpi-forum.org/

   (4) https://www.mpich.org/

   (5) https://www.open-mpi.org/

   (6) https://numpy.org/

   (7) https://cupy.dev/

   (8) https://www.sphinx-doc.org/

   (9) https://github.com/scientific-python/spin


File: mpi4py.info,  Node: Building,  Next: Installing,  Prev: Prerequisites,  Up: Development

14.2 Building
=============

'MPI for Python' uses 'setuptools'-based build system that relies on the
‘setup.py’ file.  Some setuptools commands (e.g., 'build') accept
additional options:

 -- Program Option: --mpi=

     Lets you pass a section with MPI configuration within a special
     configuration file.  Alternatively, you can use the *note MPICFG:
     7c1. environment variable.

 -- Program Option: --mpicc=

     Specify the path or name of the ‘mpicc’ C compiler wrapper.
     Alternatively, use the *note MPICC: 7bf. environment variable.

 -- Program Option: --mpild=

     Specify the full path or name for the MPI-aware C linker.
     Alternatively, use the *note MPILD: 7c0. environment variable.  If
     not set, the ‘mpicc’ C compiler wrapper is used for linking.

 -- Program Option: --configure

     Runs exhaustive tests for checking about missing MPI types,
     constants, and functions.  This option should be passed in order to
     build 'MPI for Python' against old MPI-1, MPI-2, or MPI-3
     implementations, possibly providing a subset of MPI-4.

If you use a MPI implementation providing a ‘mpicc’ C compiler wrapper
(e.g., MPICH or Open MPI), it will be used for compilation and linking.
This is the preferred and easiest way to build 'MPI for Python'.

If ‘mpicc’ is found in the executable search path ( ‘PATH’ environment
variable), simply run the 'build' command:

     $ python setup.py build

If ‘mpicc’ is not in your search path or the compiler wrapper has a
different name, you can run the 'build' command specifying its location,
either via the *note -mpicc: 7d4. command option or using the *note
MPICC: 7bf. environment variable:

     $ python setup.py build --mpicc=/path/to/mpicc
     $ env MPICC=/path/to/mpicc python setup.py build

Alternatively, you can provide all the relevant information about your
MPI implementation by editing the ‘mpi.cfg’ file located in the top
level source directory.  You can use the default section ‘[mpi]’ or add
a new custom section, for example ‘[vendor_mpi]’ (see the examples
provided in the ‘mpi.cfg’ file as a starting point to write your own
section):

     [mpi]
     include_dirs         = /usr/local/mpi/include
     libraries            = mpi
     library_dirs         = /usr/local/mpi/lib
     runtime_library_dirs = /usr/local/mpi/lib

     [vendor_mpi]
     include_dirs         = /opt/mpi/include ...
     libraries            = mpi ...
     library_dirs         = /opt/mpi/lib ...
     runtime_library_dirs = /opt/mpi/lib ...

     ...

and then run the 'build' command specifying you custom configuration
section:

     $ python setup.py build --mpi=vendor_mpi
     $ env MPICFG=vendor_mpi python setup.py build


File: mpi4py.info,  Node: Installing,  Next: Testing,  Prev: Building,  Up: Development

14.3 Installing
===============

'MPI for Python' can be installed in editable mode:

     $ python -m pip install --editable .

After modifying Cython sources, an in-place rebuild is needed:

     $ python setup.py build --inplace


File: mpi4py.info,  Node: Testing,  Prev: Installing,  Up: Development

14.4 Testing
============

To quickly test the installation:

     $ mpiexec -n 5 python -m mpi4py.bench helloworld
     Hello, World! I am process 0 of 5 on localhost.
     Hello, World! I am process 1 of 5 on localhost.
     Hello, World! I am process 2 of 5 on localhost.
     Hello, World! I am process 3 of 5 on localhost.
     Hello, World! I am process 4 of 5 on localhost.

     $ mpiexec -n 5 python -m mpi4py.bench ringtest -l 10 -n 1048576
     time for 10 loops = 0.00361614 seconds (5 processes, 1048576 bytes)

If you installed from a git clone or the source distribution, issuing at
the command line:

     $ mpiexec -n 5 python demo/helloworld.py

will launch a five-process run of the Python interpreter and run the
demo script ‘demo/helloworld.py’ from the source distribution.

You can also run all the 'unittest' scripts:

     $ mpiexec -n 5 python test/main.py

or, if you have the pytest(1) unit testing framework installed:

     $ mpiexec -n 5 pytest

   ---------- Footnotes ----------

   (1) https://docs.pytest.org/


File: mpi4py.info,  Node: Guidelines,  Next: LICENSE,  Prev: Development,  Up: Top

15 Guidelines
*************

* Menu:

* Fair play::


File: mpi4py.info,  Node: Fair play,  Up: Guidelines

15.1 Fair play
==============

* Menu:

* Summary::
* Motivation::
* Scope::
* Fair play rules::


File: mpi4py.info,  Node: Summary,  Next: Motivation,  Up: Fair play

15.1.1 Summary
--------------

This section defines Rules of Play for companies and outside developers
that engage with the mpi4py project.  It covers:

   * Restrictions on use of the mpi4py name.

   * How and whether to publish a modified distribution.

   * How to make us aware of patched versions.

After reading this section, companies and developers will know what
kinds of behavior the mpi4py developers and contributors would like to
see, and which we consider troublesome, bothersome, and unacceptable.

This document is a close adaptation of NumPy NEP 36(1).

   ---------- Footnotes ----------

   (1) https://numpy.org/neps/nep-0036-fair-play.html


File: mpi4py.info,  Node: Motivation,  Next: Scope,  Prev: Summary,  Up: Fair play

15.1.2 Motivation
-----------------

Occasionally, we learn of modified mpi4py versions and binary
distributions circulated by outsiders.  These patched versions can cause
problems to mpi4py users (see, e.g., mpi4py/mpi4py#508(1)).  When issues
like these arise, our developers waste time identifying the problematic
release, locating alterations, and determining an appropriate course of
action.

In addition, packages on the Python Packaging Index are sometimes named
such that users assume they are sanctioned or maintained by the mpi4py
developers.  We wish to reduce the number of such incidents.

   ---------- Footnotes ----------

   (1) https://github.com/mpi4py/mpi4py/issues/508


File: mpi4py.info,  Node: Scope,  Next: Fair play rules,  Prev: Motivation,  Up: Fair play

15.1.3 Scope
------------

This document aims to define a minimal set of rules that, when followed,
will be considered good-faith efforts in line with the expectations of
the mpi4py developers and contributors.

Our hope is that companies and outside developers who feel they need to
modify mpi4py will first consider contributing to the project, or use
alternative mechanisms for patching and extending mpi4py.

When in doubt, please talk to us first(1).  We may suggest an
alternative; at minimum, we’ll be informed and we may even grant an
exception if deemed appropriate.

   ---------- Footnotes ----------

   (1) https://github.com/mpi4py/mpi4py/discussions/


File: mpi4py.info,  Node: Fair play rules,  Prev: Scope,  Up: Fair play

15.1.4 Fair play rules
----------------------

  1. Do not reuse the mpi4py name for projects not affiliated with the
     mpi4py project.

     At time of writing, there are only a handful of ‘mpi4py’-named
     packages developed by the mpi4py project, including ‘mpi4py’ and
     ‘mpi4py-fft’.  We ask that outside packages not include the phrase
     ‘mpi4py’, i.e., avoid names such as ‘mycompany-mpi4py’ or
     ‘mpi4py-mycompany’.

     To be clear, this rule only applies to modules (package names); it
     is perfectly acceptable to have a 'submodule' of your own package
     named ‘mycompany.mpi4py’.

  2. Do not publish binary mpi4py wheels on PyPI (‘https://pypi.org/’).

     We ask companies and outside developers to not publish binary
     mpi4py wheels in the main Python Package Index
     (‘https://pypi.org/’) under names such ‘mpi4py-mpich’,
     ‘mpi4py-openmpi’, or ‘mpi4py-vendor_mpi’.

     The usual approaches to build binary Python wheels involve the
     embedding of dependent shared libraries.  While such an approach
     may seem convenient and often is, in the particular case of MPI and
     mpi4py it is ultimately harmful to end users.  Embedding the MPI
     shared libraries would prevent the use of external, system-provided
     MPI installations with hardware-specific optimizations and
     site-specific tweaks.

     The MPI Forum is currently discussing the standardization of a
     proposal for an Application Binary Interface (ABI) for MPI, see
     *note [mpi-abi-paper]: 7e4. and *note [mpi-abi-issue]: 7e5.  Such
     standardization will allow for any binary dependent on the MPI
     library to be used with multiple MPI backends.  Once this proposal
     becomes part of the MPI standard, the mpi4py project will consider
     publishing on PyPI binary wheels capable of using any backend MPI
     implementation supporting the new MPI ABI specification.  In the
     mean time, mpi4py is currently distributing experimental MPI and
     mpi4py binary wheels on ‘https://anaconda.org/mpi4py’.

     (mpi-abi-paper) J. Hammond, L. Dalcin, E. Schnetter, M. Pérache, J.
     B. Besnard, J. Brown, G. Brito Gadeschi, S. Byrne, J. Schuchart,
     and H. Zhou.  MPI Application Binary Interface Standardization.
     EuroMPI 2023, Bristol, UK, September 2023.
     ‘https://doi.org/10.1145/3615318.3615319’

     (mpi-abi-issue) MPI Forum GitHub Issue: 'MPI needs a standard ABI'.
     ‘https://github.com/mpi-forum/mpi-issues/issues/751’

  3. Do not republish modified versions of mpi4py.

     Modified versions of mpi4py make it very difficult for the
     developers to address bug reports, since we typically do not know
     which parts of mpi4py have been modified.

     If you have to break this rule (and we implore you not to!), then
     make it clear in the ‘__version__’ tag that you have modified
     mpi4py, e.g.:

          >>> print(mpi4py.__version__)
          '4.0.0+mycompany.13`

     We understand that minor patches are often required to make a
     library work inside of a package ecosystem.  This is totally
     acceptable, but we ask that no substantive changes are made.

  4. Do not extend or modify mpi4py’s API.

     If you absolutely have to break the previous rule, please do not
     add additional functions to the namespace, or modify the API of
     existing functions.  Having additional functions exposed in
     distributed versions is confusing for users and developers alike.


File: mpi4py.info,  Node: LICENSE,  Next: CHANGES,  Prev: Guidelines,  Up: Top

16 LICENSE
**********

Copyright (c) 2025, Lisandro Dalcin

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

  1. Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the
     distribution.

  3. Neither the name of the copyright holder nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS
IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


File: mpi4py.info,  Node: CHANGES,  Next: Python Module Index,  Prev: LICENSE,  Up: Top

17 CHANGES
**********

* Menu:

* Release 4.0.3 [2025-02-13]: Release 4 0 3 [2025-02-13].
* Release 4.0.2 [2025-02-01]: Release 4 0 2 [2025-02-01].
* Release 4.0.1 [2024-10-11]: Release 4 0 1 [2024-10-11].
* Release 4.0.0 [2024-07-28]: Release 4 0 0 [2024-07-28].
* Release 3.1.6 [2024-04-14]: Release 3 1 6 [2024-04-14].
* Release 3.1.5 [2023-10-04]: Release 3 1 5 [2023-10-04].
* Release 3.1.4 [2022-11-02]: Release 3 1 4 [2022-11-02].
* Release 3.1.3 [2021-11-25]: Release 3 1 3 [2021-11-25].
* Release 3.1.2 [2021-11-04]: Release 3 1 2 [2021-11-04].
* Release 3.1.1 [2021-08-14]: Release 3 1 1 [2021-08-14].
* Release 3.1.0 [2021-08-12]: Release 3 1 0 [2021-08-12].
* Release 3.0.3 [2019-11-04]: Release 3 0 3 [2019-11-04].
* Release 3.0.2 [2019-06-11]: Release 3 0 2 [2019-06-11].
* Release 3.0.1 [2019-02-15]: Release 3 0 1 [2019-02-15].
* Release 3.0.0 [2017-11-08]: Release 3 0 0 [2017-11-08].
* Release 2.0.0 [2015-10-18]: Release 2 0 0 [2015-10-18].
* Release 1.3.1 [2013-08-07]: Release 1 3 1 [2013-08-07].
* Release 1.3 [2012-01-20]: Release 1 3 [2012-01-20].
* Release 1.2.2 [2010-09-13]: Release 1 2 2 [2010-09-13].
* Release 1.2.1 [2010-02-26]: Release 1 2 1 [2010-02-26].
* Release 1.2 [2009-12-29]: Release 1 2 [2009-12-29].
* Release 1.1.0 [2009-06-06]: Release 1 1 0 [2009-06-06].
* Release 1.0.0 [2009-03-20]: Release 1 0 0 [2009-03-20].


File: mpi4py.info,  Node: Release 4 0 3 [2025-02-13],  Next: Release 4 0 2 [2025-02-01],  Up: CHANGES

17.1 Release 4.0.3 [2025-02-13]
===============================

   * Fix DLPack v1.0 support.


File: mpi4py.info,  Node: Release 4 0 2 [2025-02-01],  Next: Release 4 0 1 [2024-10-11],  Prev: Release 4 0 3 [2025-02-13],  Up: CHANGES

17.2 Release 4.0.2 [2025-02-01]
===============================

   * Support MPI-4 features within Intel MPI 2021.14.

   * Various fixes and updates to tests.

   * Minor fixes to typing support.

   * Minor fix to documentation.


File: mpi4py.info,  Node: Release 4 0 1 [2024-10-11],  Next: Release 4 0 0 [2024-07-28],  Prev: Release 4 0 2 [2025-02-01],  Up: CHANGES

17.3 Release 4.0.1 [2024-10-11]
===============================

   * Update support for Python 3.13:

        + Enable Cython 3.1 support for free-threaded CPython.

        + Allow compiling Cython-generated C sources with the full
          Python C-API.

        + Fix MPI DLL path workarounds on Windows after changes to
          ‘locals()’.

   * Enhancements to test suite:

        + Support XML reports via ‘unittest-xml-reporting’.

        + Add command line options to exclude tests by patterns and
          files.

        + Refactor Python 2 code to use Python 3 constructs using
          ‘pyupgrade’.

   * Miscellaneous:

        + Minor and mostly inconsequential subclass fix in
          ‘mpi4py.util.pkl5’.

        + Update compatibility workarounds for legacy MPICH 3.0 release.


File: mpi4py.info,  Node: Release 4 0 0 [2024-07-28],  Next: Release 3 1 6 [2024-04-14],  Prev: Release 4 0 1 [2024-10-11],  Up: CHANGES

17.4 Release 4.0.0 [2024-07-28]
===============================

   * New features:

        + Add support for the MPI-4.0 standard.

             - Use large count MPI-4 routines.

             - Add persistent collective communication.

             - Add partitioned point-to-point communication.

             - Add new communicator constructors.

             - Add the ‘Session’ class and its methods.

        + Add support for the MPI-4.1 standard.

             - Add non-destructive completion test for multiple
               requests.

             - Add value-index datatype constructor.

             - Add communicator/session buffer attach/detach/flush.

             - Support for removal of error classes/codes/strings.

             - Support for querying hardware resource information.

        + Add preliminary support for the upcoming MPI-5.0 standard.

             - User-level failure mitigation (ULFM).

        + ‘mpi4py.util.pool’: New drop-in replacement for
          ‘multiprocessing.pool’.

        + ‘mpi4py.util.sync’: New synchronization utilities.

        + Add runtime check for mismatch between ‘mpiexec’ and MPI
          library.

        + Support scikit-build-core(1) as an alternative build backend.

        + Support meson-python(2) as an alternative build backend.

   * Enhancements:

        + ‘mpi4py.futures’: Support for parallel tasks.

        + ‘mpi4py.futures’: Report exception tracebacks in workers.

        + ‘mpi4py.util.pkl5’: Add support for collective communication.

        + Add methods ‘Datatype.fromcode()’, ‘Datatype.tocode()’ and
          attributes ‘Datatype.typestr’, ‘Datatype.typechar’ to simplify
          NumPy interoperability for simple cases.

        + Add methods ‘Comm.Create_errhandler()’,
          ‘Win.Create_errhandler()’, and ‘File.Create_errhandler()’ to
          create custom error handlers.

        + Add support for pickle serialization of instances of MPI
          types.  All instances of ‘Datatype’, ‘Info’, and ‘Status’ can
          be serialized.  Instances of ‘Op’ can be serialized only if
          created through ‘mpi4py’ by calling ‘Op.Create()’.  Instances
          of other MPI types can be serialized only if they reference
          predefined handles.

        + Add ‘handle’ attribute and ‘fromhandle()’ class method to MPI
          classes to ease interoperability with external code.  The
          handle value is an unsigned integer guaranteed to fit on the
          platform’s ‘uintptr_t’ C type.

        + Add lowercase ‘free()’ method to MPI classes to ease MPI
          object deallocation and cleanup.  This method eventually
          attempts to call ‘Free()’, but only if the object’s MPI handle
          is not a null or predefined handle, and such call is allowed
          within the World Model init/finalize.

   * Backward-incompatible changes:

        + Python 2 is no longer supported, Python 3.6+ is required, but
          typing stubs are supported for Python 3.8+.

        + The ‘Intracomm.Create_group()’ method is no longer defined in
          the base ‘Comm’ class.

        + ‘Group.Compare()’ and ‘Comm.Compare()’ are no longer class
          methods but instance methods.  Existing codes using the former
          class methods are expected to continue working.

        + ‘Group.Translate_ranks()’ is no longer a class method but an
          instance method.  Existing codes using the former class method
          are expected to continue working.

        + The ‘LB’ and ‘UB’ datatypes are no longer available, use
          ‘Datatype.Create_resized()’ instead.

        + The ‘HOST’ predefined attribute key is no longer available.

        + The ‘MPI.memory’ class has been renamed to ‘MPI.buffer’.  The
          old name is still available as an alias to the new name.

        + The ‘mpi4py.dl’ module is no longer available.

        + The ‘mpi4py.get_config’ function returns an empty dictionary.

   * Miscellaneous:

        + The project is now licensed under the BSD-3-Clause license.
          This change is fairly inconsequential for users and
          distributors.  It simply adds an additional clause against
          using contributor names for promotional purposes without their
          consent.

        + Add a new guidelines section to documentation laying out new
          fair play rules.  These rules ask companies and outside
          developers to refrain from reusing the ‘mpi4py’ name in
          unaffiliated projects, publishing binary mpi4py wheels on the
          main Python Package Index (PyPI), and distributing modified
          versions with incompatible or extended API changes.  The
          primary motivation of these rules is to avoid fragmentation
          and end-user confusion.

   ---------- Footnotes ----------

   (1) https://scikit-build.readthedocs.io/

   (2) https://meson-python.readthedocs.io/


File: mpi4py.info,  Node: Release 3 1 6 [2024-04-14],  Next: Release 3 1 5 [2023-10-04],  Prev: Release 4 0 0 [2024-07-28],  Up: CHANGES

17.5 Release 3.1.6 [2024-04-14]
===============================

     Warning: This is the last release supporting Python 2.

   * Fix various build issues.


File: mpi4py.info,  Node: Release 3 1 5 [2023-10-04],  Next: Release 3 1 4 [2022-11-02],  Prev: Release 3 1 6 [2024-04-14],  Up: CHANGES

17.6 Release 3.1.5 [2023-10-04]
===============================

     Warning: This is the last release supporting Python 2.

   * Rebuild C sources with Cython 0.29.36 to support Python 3.12.


File: mpi4py.info,  Node: Release 3 1 4 [2022-11-02],  Next: Release 3 1 3 [2021-11-25],  Prev: Release 3 1 5 [2023-10-04],  Up: CHANGES

17.7 Release 3.1.4 [2022-11-02]
===============================

     Warning: This is the last release supporting Python 2.

   * Rebuild C sources with Cython 0.29.32 to support Python 3.11.

   * Fix contiguity check for DLPack and CAI buffers.

   * Workaround build failures with setuptools v60.


File: mpi4py.info,  Node: Release 3 1 3 [2021-11-25],  Next: Release 3 1 2 [2021-11-04],  Prev: Release 3 1 4 [2022-11-02],  Up: CHANGES

17.8 Release 3.1.3 [2021-11-25]
===============================

     Warning: This is the last release supporting Python 2.

   * Add missing support for ‘MPI.BOTTOM’ to generalized all-to-all
     collectives.


File: mpi4py.info,  Node: Release 3 1 2 [2021-11-04],  Next: Release 3 1 1 [2021-08-14],  Prev: Release 3 1 3 [2021-11-25],  Up: CHANGES

17.9 Release 3.1.2 [2021-11-04]
===============================

     Warning: This is the last release supporting Python 2.

   * ‘mpi4py.futures’: Add ‘_max_workers’ property to ‘MPIPoolExecutor’.

   * ‘mpi4py.util.dtlib’: Fix computation of alignment for predefined
     datatypes.

   * ‘mpi4py.util.pkl5’: Fix deadlock when using ‘ssend()’ + ‘mprobe()’.

   * ‘mpi4py.util.pkl5’: Add environment variable
     ‘MPI4PY_PICKLE_THRESHOLD’.

   * ‘mpi4py.rc’: Interpret ‘"y"’ and ‘"n"’ strings as boolean values.

   * Fix/add typemap/typestr for ‘MPI.WCHAR’/‘MPI.COUNT’ datatypes.

   * Minor fixes and additions to documentation.

   * Minor fixes to typing support.

   * Support for local version identifier (PEP-440).


File: mpi4py.info,  Node: Release 3 1 1 [2021-08-14],  Next: Release 3 1 0 [2021-08-12],  Prev: Release 3 1 2 [2021-11-04],  Up: CHANGES

17.10 Release 3.1.1 [2021-08-14]
================================

     Warning: This is the last release supporting Python 2.

   * Fix typo in Requires-Python package metadata.

   * Regenerate C sources with Cython 0.29.24.


File: mpi4py.info,  Node: Release 3 1 0 [2021-08-12],  Next: Release 3 0 3 [2019-11-04],  Prev: Release 3 1 1 [2021-08-14],  Up: CHANGES

17.11 Release 3.1.0 [2021-08-12]
================================

     Warning: This is the last release supporting Python 2.

   * New features:

        + ‘mpi4py.util’: New package collecting miscellaneous utilities.

   * Enhancements:

        + Add pickle-based ‘Request.waitsome()’ and
          ‘Request.testsome()’.

        + Add lowercase methods ‘Request.get_status()’ and
          ‘Request.cancel()’.

        + Support for passing Python GPU arrays compliant with the
          DLPack(1) data interchange mechanism (link(2)) and the
          ‘__cuda_array_interface__’ (CAI) standard (link(3)) to
          uppercase methods.  This support requires that mpi4py is built
          against CUDA-aware MPI(4) implementations.  This feature is
          currently experimental and subject to future changes.

        + ‘mpi4py.futures’: Add support for initializers and canceling
          futures at shutdown.  Environment variables names now follow
          the pattern ‘MPI4PY_FUTURES_*’, the previous ‘MPI4PY_*’ names
          are deprecated.

        + Add type annotations to Cython code.  The first line of the
          docstring of functions and methods displays a signature
          including type annotations.

        + Add companion stub files to support type checkers.

        + Support for weak references.

   * Miscellaneous:

        + Add a new mpi4py publication (link(5)) to the citation
          listing.

   ---------- Footnotes ----------

   (1) https://github.com/dmlc/dlpack

   (2) 
https://data-apis.org/array-api/latest/design_topics/data_interchange.html

   (3) 
https://numba.readthedocs.io/en/stable/cuda/cuda_array_interface.html

   (4) https://developer.nvidia.com/blog/introduction-cuda-aware-mpi/

   (5) https://doi.org/10.1109/MCSE.2021.3083216


File: mpi4py.info,  Node: Release 3 0 3 [2019-11-04],  Next: Release 3 0 2 [2019-06-11],  Prev: Release 3 1 0 [2021-08-12],  Up: CHANGES

17.12 Release 3.0.3 [2019-11-04]
================================

   * Regenerate Cython wrappers to support Python 3.8.


File: mpi4py.info,  Node: Release 3 0 2 [2019-06-11],  Next: Release 3 0 1 [2019-02-15],  Prev: Release 3 0 3 [2019-11-04],  Up: CHANGES

17.13 Release 3.0.2 [2019-06-11]
================================

   * Bug fixes:

        + Fix handling of readonly buffers in support for Python 2
          legacy buffer interface.  The issue triggers only when using a
          buffer-like object that is readonly and does not export the
          new Python 3 buffer interface.

        + Fix build issues with Open MPI 4.0.x series related to removal
          of many MPI-1 symbols deprecated in MPI-2 and removed in
          MPI-3.

        + Minor documentation fixes.


File: mpi4py.info,  Node: Release 3 0 1 [2019-02-15],  Next: Release 3 0 0 [2017-11-08],  Prev: Release 3 0 2 [2019-06-11],  Up: CHANGES

17.14 Release 3.0.1 [2019-02-15]
================================

   * Bug fixes:

        + Fix ‘Comm.scatter()’ and other collectives corrupting input
          send list.  Add safety measures to prevent related issues in
          global reduction operations.

        + Fix error-checking code for counts in ‘Op.Reduce_local()’.

   * Enhancements:

        + Map size-specific Python/NumPy typecodes to MPI datatypes.

        + Allow partial specification of target list/tuple arguments in
          the various ‘Win’ RMA methods.

        + Workaround for removal of ‘MPI_{LB|UB}’ in Open MPI 4.0.

        + Support for Microsoft MPI v10.0.


File: mpi4py.info,  Node: Release 3 0 0 [2017-11-08],  Next: Release 2 0 0 [2015-10-18],  Prev: Release 3 0 1 [2019-02-15],  Up: CHANGES

17.15 Release 3.0.0 [2017-11-08]
================================

   * New features:

        + ‘mpi4py.futures’: Execute computations asynchronously using a
          pool of MPI processes.  This package is based on
          ‘concurrent.futures’ from the Python standard library.

        + ‘mpi4py.run’: Run Python code and abort execution in case of
          unhandled exceptions to prevent deadlocks.

        + ‘mpi4py.bench’: Run basic MPI benchmarks and tests.

   * Enhancements:

        + Lowercase, pickle-based collective communication calls are now
          thread-safe through the use of fine-grained locking.

        + The ‘MPI’ module now exposes a ‘memory’ type which is a
          lightweight variant of the builtin ‘memoryview’ type, but
          exposes both the legacy Python 2 and the modern Python 3
          buffer interface under a Python 2 runtime.

        + The ‘MPI.Comm.Alltoallw()’ method now uses ‘count=1’ and
          ‘displ=0’ as defaults, assuming that messages are specified
          through user-defined datatypes.

        + The ‘Request.Wait[all]()’ methods now return ‘True’ to match
          the interface of ‘Request.Test[all]()’.

        + The ‘Win’ class now implements the Python buffer interface.

   * Backward-incompatible changes:

        + The ‘buf’ argument of the ‘MPI.Comm.recv()’ method is
          deprecated, passing anything but ‘None’ emits a warning.

        + The ‘MPI.Win.memory’ property was removed, use the
          ‘MPI.Win.tomemory()’ method instead.

        + Executing ‘python -m mpi4py’ in the command line is now
          equivalent to ‘python -m mpi4py.run’.  For the former
          behavior, use ‘python -m mpi4py.bench’.

        + Python 2.6 and 3.2 are no longer supported.  The ‘mpi4py.MPI’
          module may still build and partially work, but other
          pure-Python modules under the ‘mpi4py’ namespace will not.

        + Windows: Remove support for legacy MPICH2, Open MPI, and
          DeinoMPI.


File: mpi4py.info,  Node: Release 2 0 0 [2015-10-18],  Next: Release 1 3 1 [2013-08-07],  Prev: Release 3 0 0 [2017-11-08],  Up: CHANGES

17.16 Release 2.0.0 [2015-10-18]
================================

   * Support for MPI-3 features.

        + Matched probes and receives.

        + Nonblocking collectives.

        + Neighborhood collectives.

        + New communicator constructors.

        + Request-based RMA operations.

        + New RMA communication and synchronisation calls.

        + New window constructors.

        + New datatype constructor.

        + New C++ boolean and floating complex datatypes.

   * Support for MPI-2 features not included in previous releases.

        + Generalized All-to-All collective (‘Comm.Alltoallw()’)

        + User-defined data representations (‘Register_datarep()’)

   * New scalable implementation of reduction operations for Python
     objects.  This code is based on binomial tree algorithms using
     point-to-point communication and duplicated communicator contexts.
     To disable this feature, use ‘mpi4py.rc.fast_reduce = False’.

   * Backward-incompatible changes:

        + Python 2.4, 2.5, 3.0 and 3.1 are no longer supported.

        + Default MPI error handling policies are overridden.  After
          import, mpi4py sets the ‘ERRORS_RETURN’ error handler in
          ‘COMM_SELF’ and ‘COMM_WORLD’, as well as any new ‘Comm’,
          ‘Win’, or ‘File’ instance created through mpi4py, thus
          effectively ignoring the MPI rules about error handler
          inheritance.  This way, MPI errors translate to Python
          exceptions.  To disable this behavior and use the standard MPI
          error handling rules, use ‘mpi4py.rc.errors = 'default'’.

        + Change signature of all send methods, ‘dest’ is a required
          argument.

        + Change signature of all receive and probe methods, ‘source’
          defaults to ‘ANY_SOURCE’, ‘tag’ defaults to ‘ANY_TAG’.

        + Change signature of send lowercase-spelling methods, ‘obj’
          arguments are not mandatory.

        + Change signature of recv lowercase-spelling methods, renamed
          ‘obj’ arguments to ‘buf’.

        + Change ‘Request.Waitsome()’ and ‘Request.Testsome()’ to return
          ‘None’ or ‘list’.

        + Change signature of all lowercase-spelling collectives,
          ‘sendobj’ arguments are now mandatory, ‘recvobj’ arguments
          were removed.

        + Reduction operations ‘MAXLOC’ and ‘MINLOC’ are no longer
          special-cased in lowercase-spelling methods
          ‘Comm.[all]reduce()’ and ‘Comm.[ex]scan()’, the input object
          must be specified as a tuple ‘(obj, location)’.

        + Change signature of name publishing functions.  The new
          signatures are ‘Publish_name(service_name, port_name,
          info=INFO_NULL)’ and ‘Unpublish_name(service_name, port_name,
          info=INFO_NULL)`’.

        + ‘Win’ instances now cache Python objects exposing memory by
          keeping references instead of using MPI attribute caching.

        + Change signature of ‘Win.Lock()’.  The new signature is
          ‘Win.Lock(rank, lock_type=LOCK_EXCLUSIVE, assertion=0)’.

        + Move ‘Cartcomm.Map()’ to ‘Intracomm.Cart_map()’.

        + Move ‘Graphcomm.Map()’ to ‘Intracomm.Graph_map()’.

        + Remove the ‘mpi4py.MPE’ module.

        + Rename the Cython definition file for use with ‘cimport’
          statement from ‘mpi_c.pxd’ to ‘libmpi.pxd’.


File: mpi4py.info,  Node: Release 1 3 1 [2013-08-07],  Next: Release 1 3 [2012-01-20],  Prev: Release 2 0 0 [2015-10-18],  Up: CHANGES

17.17 Release 1.3.1 [2013-08-07]
================================

   * Regenerate C wrappers with Cython 0.19.1 to support Python 3.3.

   * Install ‘*.pxd’ files in ‘<site-packages>/mpi4py’ to ease the
     support for Cython’s ‘cimport’ statement in code requiring to
     access mpi4py internals.

   * As a side-effect of using Cython 0.19.1, ancient Python 2.3 is no
     longer supported.  If you really need it, you can install an older
     Cython and run ‘python setup.py build_src --force’.


File: mpi4py.info,  Node: Release 1 3 [2012-01-20],  Next: Release 1 2 2 [2010-09-13],  Prev: Release 1 3 1 [2013-08-07],  Up: CHANGES

17.18 Release 1.3 [2012-01-20]
==============================

   * Now ‘Comm.recv()’ accept a buffer to receive the message.

   * Add ‘Comm.irecv()’ and ‘Request.{wait|test}[any|all]()’.

   * Add ‘Intracomm.Spawn_multiple()’.

   * Better buffer handling for PEP 3118 and legacy buffer interfaces.

   * Add support for attribute attribute caching on communicators,
     datatypes and windows.

   * Install MPI-enabled Python interpreter as
     ‘<path>/mpi4py/bin/python-mpi’.

   * Windows: Support for building with Open MPI.


File: mpi4py.info,  Node: Release 1 2 2 [2010-09-13],  Next: Release 1 2 1 [2010-02-26],  Prev: Release 1 3 [2012-01-20],  Up: CHANGES

17.19 Release 1.2.2 [2010-09-13]
================================

   * Add ‘mpi4py.get_config()’ to retrieve information (compiler
     wrappers, includes, libraries, etc) about the MPI implementation
     employed to build mpi4py.

   * Workaround Python libraries with missing GILState-related API calls
     in case of non-threaded Python builds.

   * Windows: look for MPICH2, DeinoMPI, Microsoft HPC Pack at their
     default install locations under %ProgramFiles.

   * MPE: fix hacks related to old API’s, these hacks are broken when
     MPE is built with a MPI implementations other than MPICH2.

   * HP-MPI: fix for missing Fortran datatypes, use dlopen() to load the
     MPI shared library before MPI_Init()

   * Many distutils-related fixes, cleanup, and enhancements, better
     logics to find MPI compiler wrappers.

   * Support for ‘pip install mpi4py’.


File: mpi4py.info,  Node: Release 1 2 1 [2010-02-26],  Next: Release 1 2 [2009-12-29],  Prev: Release 1 2 2 [2010-09-13],  Up: CHANGES

17.20 Release 1.2.1 [2010-02-26]
================================

   * Fix declaration in Cython include file.  This declaration, while
     valid for Cython, broke the simple-minded parsing used in
     conf/mpidistutils.py to implement configure-tests for availability
     of MPI symbols.

   * Update SWIG support and make it compatible with Python 3.  Also
     generate an warning for SWIG < 1.3.28.

   * Fix distutils-related issues in Mac OS X. Now ARCHFLAGS environment
     variable is honored of all Python’s ‘config/Makefile’ variables.

   * Fix issues with Open MPI < 1.4.2 related to error checking and
     ‘MPI_XXX_NULL’ handles.


File: mpi4py.info,  Node: Release 1 2 [2009-12-29],  Next: Release 1 1 0 [2009-06-06],  Prev: Release 1 2 1 [2010-02-26],  Up: CHANGES

17.21 Release 1.2 [2009-12-29]
==============================

   * Automatic MPI datatype discovery for NumPy arrays and PEP-3118
     buffers.  Now buffer-like objects can be messaged directly, it is
     no longer required to explicitly pass a 2/3-list/tuple like ‘[data,
     MPI.DOUBLE]’, or ‘[data, count, MPI.DOUBLE]’.  Only basic types are
     supported, i.e., all C/C99-native signed/unsigned integral types
     and single/double precision real/complex floating types.  Many
     thanks to Eilif Muller for the initial feedback.

   * Nonblocking send of pickled Python objects.  Many thanks to Andreas
     Kloeckner for the initial patch and enlightening discussion about
     this enhancement.

   * ‘Request’ instances now hold a reference to the Python object
     exposing the buffer involved in point-to-point communication or
     parallel I/O. Many thanks to Andreas Kloeckner for the initial
     feedback.

   * Support for logging of user-defined states and events using MPE(1).
     Runtime (i.e., without requiring a recompile!)  activation of
     logging of all MPI calls is supported in POSIX platforms
     implementing ‘dlopen()’.

   * Support for all the new features in MPI-2.2 (new C99 and F90
     datatypes, distributed graph topology, local reduction operation,
     and other minor enhancements).

   * Fix the annoying issues related to Open MPI and Python dynamic
     loading of extension modules in platforms supporting ‘dlopen()’.

   * Fix SLURM dynamic loading issues on SiCortex.  Many thanks to Ian
     Langmore for providing me shell access.

   ---------- Footnotes ----------

   (1) https://www.mcs.anl.gov/research/projects/perfvis/


File: mpi4py.info,  Node: Release 1 1 0 [2009-06-06],  Next: Release 1 0 0 [2009-03-20],  Prev: Release 1 2 [2009-12-29],  Up: CHANGES

17.22 Release 1.1.0 [2009-06-06]
================================

   * Fix bug in ‘Comm.Iprobe()’ that caused segfaults as Python C-API
     calls were issued with the GIL released (issue #2).

   * Add ‘Comm.bsend()’ and ‘Comm.ssend()’ for buffered and synchronous
     send semantics when communicating general Python objects.

   * Now the call ‘Info.Get(key)’ return a 'single' value (i.e, instead
     of a 2-tuple); this value is ‘None’ if ‘key’ is not in the ‘Info’
     object, or a string otherwise.  Previously, the call redundantly
     returned ‘(None, False)’ for missing key-value pairs; ‘None’ is
     enough to signal a missing entry.

   * Add support for parametrized Fortran datatypes.

   * Add support for decoding user-defined datatypes.

   * Add support for user-defined reduction operations on memory
     buffers.  However, at most 16 user-defined reduction operations can
     be created.  Ask the author for more room if you need it.


File: mpi4py.info,  Node: Release 1 0 0 [2009-03-20],  Prev: Release 1 1 0 [2009-06-06],  Up: CHANGES

17.23 Release 1.0.0 [2009-03-20]
================================

This is the fist release of the all-new, Cython-based, implementation of
'MPI for Python'.  Unfortunately, this implementation is not
backward-compatible with the previous one.  The list below summarizes
the more important changes that can impact user codes.

   * Some communication calls had 'overloaded' functionality.  Now there
     is a clear distinction between communication of general Python
     object with 'pickle', and (fast, near C-speed) communication of
     buffer-like objects (e.g., NumPy arrays).

        - for communicating general Python objects, you have to use
          all-lowercase methods, like ‘send()’, ‘recv()’, ‘bcast()’,
          etc.

        - for communicating array data, you have to use ‘Send()’,
          ‘Recv()’, ‘Bcast()’, etc.  methods.  Buffer arguments to these
          calls must be explicitly specified by using a 2/3-list/tuple
          like ‘[data, MPI.DOUBLE]’, or ‘[data, count, MPI.DOUBLE]’ (the
          former one uses the byte-size of ‘data’ and the extent of the
          MPI datatype to define the ‘count’).

   * Indexing a communicator with an integer returned a special object
     associating the communication with a target rank, alleviating you
     from specifying source/destination/root arguments in point-to-point
     and collective communications.  This functionality is no longer
     available, expressions like:

          MPI.COMM_WORLD[0].Send(...)
          MPI.COMM_WORLD[0].Recv(...)
          MPI.COMM_WORLD[0].Bcast(...)

     have to be replaced by:

          MPI.COMM_WORLD.Send(..., dest=0)
          MPI.COMM_WORLD.Recv(..., source=0)
          MPI.COMM_WORLD.Bcast(..., root=0)

   * Automatic MPI initialization (i.e., at import time) requests the
     maximum level of MPI thread support (i.e., it is done by calling
     ‘MPI_Init_thread()’ and passing ‘MPI_THREAD_MULTIPLE’).  In case
     you need to change this behavior, you can tweak the contents of the
     ‘mpi4py.rc’ module.

   * In order to obtain the values of predefined attributes attached to
     the world communicator, now you have to use the ‘Get_attr()’ method
     on the ‘MPI.COMM_WORLD’ instance:

          tag_ub = MPI.COMM_WORLD.Get_attr(MPI.TAG_UB)

   * In the previous implementation, ‘MPI.COMM_WORLD’ and
     ‘MPI.COMM_SELF’ were associated to 'duplicates' of the (C-level)
     ‘MPI_COMM_WORLD’ and ‘MPI_COMM_SELF’ predefined communicator
     handles.  Now this is no longer the case, ‘MPI.COMM_WORLD’ and
     ‘MPI.COMM_SELF’ proxies the 'actual' ‘MPI_COMM_WORLD’ and
     ‘MPI_COMM_SELF’ handles.

   * Convenience aliases ‘MPI.WORLD’ and ‘MPI.SELF’ were removed.  Use
     instead ‘MPI.COMM_WORLD’ and ‘MPI.COMM_SELF’.

   * Convenience constants ‘MPI.WORLD_SIZE’ and ‘MPI.WORLD_RANK’ were
     removed.  Use instead ‘MPI.COMM_WORLD.Get_size()’ and
     ‘MPI.COMM_WORLD.Get_rank()’.


File: mpi4py.info,  Node: Python Module Index,  Next: Index,  Prev: CHANGES,  Up: Top

Python Module Index
*******************

* Menu:

* mpi4py: 0. The MPI for Python package.
* mpi4py.bench: 1. Run MPI benchmarks and tests.
* mpi4py.futures: 2. Execute computations concurrently using MPI processes.
* mpi4py.MPI: 3. Message Passing Interface.
* mpi4py.run: 4. Run Python code using ''-m mpi4py''.
* mpi4py.typing: 5. Typing support.
* mpi4py.util: 6. Miscellaneous utilities.
* mpi4py.util.dtlib: 7. Convert NumPy and MPI datatypes.
* mpi4py.util.pkl5: 8. Pickle-based communication using protocol 5.
* mpi4py.util.pool: 9. :mod:'multiprocessing.pool' interface via
                        :mod:'mpi4py.futures'.
* mpi4py.util.sync: a. Synchronization utilities.


File: mpi4py.info,  Node: Index,  Prev: Python Module Index,  Up: Top

Index
*****

 [index ]
* Menu:

* __enter__() (mpi4py.util.sync.Condition method): Condition variable.
                                                             (line   45)
* __enter__() (mpi4py.util.sync.Mutex method): Mutual exclusion.
                                                             (line   52)
* __enter__() (mpi4py.util.sync.Semaphore method): Semaphore object.
                                                             (line   49)
* __enter__() (mpi4py.util.sync.Sequential method): Sequential execution.
                                                             (line   33)
* __exit__() (mpi4py.util.sync.Condition method): Condition variable.
                                                             (line   52)
* __exit__() (mpi4py.util.sync.Mutex method): Mutual exclusion.
                                                             (line   59)
* __exit__() (mpi4py.util.sync.Semaphore method): Semaphore object.
                                                             (line   56)
* __exit__() (mpi4py.util.sync.Sequential method): Sequential execution.
                                                             (line   40)
* __init__() (mpi4py.util.pool.Pool method): mpi4py util pool.
                                                             (line   25)
* __init__() (mpi4py.util.sync.Condition method): Condition variable.
                                                             (line   22)
* __init__() (mpi4py.util.sync.Counter method): Global counter.
                                                             (line   18)
* __init__() (mpi4py.util.sync.Mutex method): Mutual exclusion.
                                                             (line   32)
* __init__() (mpi4py.util.sync.Semaphore method): Semaphore object.
                                                             (line   27)
* __init__() (mpi4py.util.sync.Sequential method): Sequential execution.
                                                             (line   18)
* __iter__() (mpi4py.util.sync.Counter method): Global counter.
                                                             (line   45)
* __new__() (mpi4py.MPI.BottomType static method): mpi4py MPI BottomType.
                                                             (line   12)
* __new__() (mpi4py.MPI.buffer static method): mpi4py MPI buffer.
                                                             (line   12)
* __new__() (mpi4py.MPI.BufferAutomaticType static method): mpi4py MPI BufferAutomaticType.
                                                             (line   12)
* __new__() (mpi4py.MPI.Cartcomm static method): mpi4py MPI Cartcomm.
                                                             (line   12)
* __new__() (mpi4py.MPI.Comm static method): mpi4py MPI Comm.
                                                             (line   12)
* __new__() (mpi4py.MPI.Datatype static method): mpi4py MPI Datatype.
                                                             (line   12)
* __new__() (mpi4py.MPI.Distgraphcomm static method): mpi4py MPI Distgraphcomm.
                                                             (line   12)
* __new__() (mpi4py.MPI.Errhandler static method): mpi4py MPI Errhandler.
                                                             (line   12)
* __new__() (mpi4py.MPI.Exception static method): mpi4py MPI Exception.
                                                             (line   12)
* __new__() (mpi4py.MPI.File static method): mpi4py MPI File.
                                                             (line   12)
* __new__() (mpi4py.MPI.Graphcomm static method): mpi4py MPI Graphcomm.
                                                             (line   12)
* __new__() (mpi4py.MPI.Grequest static method): mpi4py MPI Grequest.
                                                             (line   12)
* __new__() (mpi4py.MPI.Group static method): mpi4py MPI Group.
                                                             (line   12)
* __new__() (mpi4py.MPI.Info static method): mpi4py MPI Info.
                                                             (line   12)
* __new__() (mpi4py.MPI.InPlaceType static method): mpi4py MPI InPlaceType.
                                                             (line   12)
* __new__() (mpi4py.MPI.Intercomm static method): mpi4py MPI Intercomm.
                                                             (line   12)
* __new__() (mpi4py.MPI.Intracomm static method): mpi4py MPI Intracomm.
                                                             (line   12)
* __new__() (mpi4py.MPI.Message static method): mpi4py MPI Message.
                                                             (line   12)
* __new__() (mpi4py.MPI.Op static method): mpi4py MPI Op.    (line   12)
* __new__() (mpi4py.MPI.Pickle static method): mpi4py MPI Pickle.
                                                             (line   12)
* __new__() (mpi4py.MPI.Prequest static method): mpi4py MPI Prequest.
                                                             (line   12)
* __new__() (mpi4py.MPI.Request static method): mpi4py MPI Request.
                                                             (line   12)
* __new__() (mpi4py.MPI.Session static method): mpi4py MPI Session.
                                                             (line   12)
* __new__() (mpi4py.MPI.Status static method): mpi4py MPI Status.
                                                             (line   12)
* __new__() (mpi4py.MPI.Topocomm static method): mpi4py MPI Topocomm.
                                                             (line   12)
* __new__() (mpi4py.MPI.Win static method): mpi4py MPI Win.  (line   12)
* __next__() (mpi4py.util.sync.Counter method): Global counter.
                                                             (line   52)
* Abort() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  537)
* Accept() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  105)
* Accumulate() (mpi4py.MPI.Win method):  mpi4py MPI Win.     (line  226)
* Ack_failed() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  552)
* acquire() (mpi4py.util.sync.Condition method): Condition variable.
                                                             (line   62)
* acquire() (mpi4py.util.sync.Mutex method): Mutual exclusion.
                                                             (line   69)
* acquire() (mpi4py.util.sync.Semaphore method): Semaphore object.
                                                             (line   66)
* Add_error_class() (in module mpi4py.MPI): mpi4py MPI Add_error_class.
                                                             (line    6)
* Add_error_code() (in module mpi4py.MPI): mpi4py MPI Add_error_code.
                                                             (line    6)
* Add_error_string() (in module mpi4py.MPI): mpi4py MPI Add_error_string.
                                                             (line    6)
* address (mpi4py.MPI.buffer attribute): mpi4py MPI buffer.  (line  155)
* Agree() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  562)
* AINT (in module mpi4py.MPI):           mpi4py MPI AINT.    (line    6)
* Aint (in module mpi4py.typing):        mpi4py typing.      (line  121)
* Aint_add() (in module mpi4py.MPI):     mpi4py MPI Aint_add.
                                                             (line    6)
* Aint_diff() (in module mpi4py.MPI):    mpi4py MPI Aint_diff.
                                                             (line    6)
* Allgather_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line  589)
* Allgather() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  572)
* allgather() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 2157)
* allgather() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.
                                                             (line  411)
* Allgatherv_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line  623)
* Allgatherv() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  605)
* Alloc_mem() (in module mpi4py.MPI):    mpi4py MPI Alloc_mem.
                                                             (line    6)
* Allocate_shared() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  263)
* allocate() (mpi4py.MPI.buffer static method): mpi4py MPI buffer.
                                                             (line   69)
* Allocate() (mpi4py.MPI.Win class method): mpi4py MPI Win.  (line  244)
* Allreduce_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line  655)
* Allreduce() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  639)
* allreduce() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 2167)
* Alltoall_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm. (line  690)
* Alltoall() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line  674)
* alltoall() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 2182)
* alltoall() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.
                                                             (line  423)
* Alltoallv_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line  723)
* Alltoallv() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  706)
* Alltoallw_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line  757)
* Alltoallw() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line  739)
* amode (mpi4py.MPI.File attribute):     mpi4py MPI File.    (line  989)
* ANY_SOURCE (in module mpi4py.MPI):     mpi4py MPI ANY_SOURCE.
                                                             (line    6)
* ANY_TAG (in module mpi4py.MPI):        mpi4py MPI ANY_TAG. (line    6)
* apply_async() (mpi4py.util.pool.Pool method): mpi4py util pool.
                                                             (line   76)
* apply() (mpi4py.util.pool.Pool method): mpi4py util pool.  (line   57)
* ApplyResult (class in mpi4py.util.pool): mpi4py util pool. (line  354)
* APPNUM (in module mpi4py.MPI):         mpi4py MPI APPNUM.  (line    6)
* AsyncResult (class in mpi4py.util.pool): mpi4py util pool. (line  307)
* atomicity (mpi4py.MPI.File attribute): mpi4py MPI File.    (line  993)
* Attach_buffer() (in module mpi4py.MPI): mpi4py MPI Attach_buffer.
                                                             (line    6)
* Attach_buffer() (mpi4py.MPI.Comm method): mpi4py MPI Comm. (line  773)
* Attach_buffer() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line   87)
* Attach() (mpi4py.MPI.Win method):      mpi4py MPI Win.     (line  282)
* attrs (mpi4py.MPI.Win attribute):      mpi4py MPI Win.     (line  846)
* BAND (in module mpi4py.MPI):           mpi4py MPI BAND.    (line    6)
* Barrier_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.  (line  790)
* Barrier() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  783)
* barrier() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 2192)
* Bcast_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  814)
* Bcast() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  800)
* bcast() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 2201)
* bcast() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  363)
* begin() (mpi4py.util.sync.Sequential method): Sequential execution.
                                                             (line   50)
* BOOL (in module mpi4py.MPI):           mpi4py MPI BOOL.    (line    6)
* bootup() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  211)
* BOR (in module mpi4py.MPI):            mpi4py MPI BOR.     (line    6)
* BOTTOM (in module mpi4py.MPI):         mpi4py MPI BOTTOM.  (line    6)
* Bottom (in module mpi4py.typing):      mpi4py typing.      (line  109)
* BottomType (class in mpi4py.MPI):      mpi4py MPI BottomType.
                                                             (line    6)
* Bsend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  846)
* BSEND_OVERHEAD (in module mpi4py.MPI): mpi4py MPI BSEND_OVERHEAD.
                                                             (line    6)
* Bsend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  830)
* bsend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 2215)
* bsend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  188)
* buffer (class in mpi4py.MPI):          mpi4py MPI buffer.  (line    6)
* Buffer (in module mpi4py.typing):      mpi4py typing.      (line  102)
* BUFFER_AUTOMATIC (in module mpi4py.MPI): mpi4py MPI BUFFER_AUTOMATIC.
                                                             (line    6)
* BufferAutomaticType (class in mpi4py.MPI): mpi4py MPI BufferAutomaticType.
                                                             (line    6)
* BufSpec (in module mpi4py.typing):     mpi4py typing.      (line  151)
* BufSpecB (in module mpi4py.typing):    mpi4py typing.      (line  177)
* BufSpecV (in module mpi4py.typing):    mpi4py typing.      (line  199)
* BufSpecW (in module mpi4py.typing):    mpi4py typing.      (line  250)
* BXOR (in module mpi4py.MPI):           mpi4py MPI BXOR.    (line    6)
* BYTE (in module mpi4py.MPI):           mpi4py MPI BYTE.    (line    6)
* C_BOOL (in module mpi4py.MPI):         mpi4py MPI C_BOOL.  (line    6)
* C_COMPLEX (in module mpi4py.MPI):      mpi4py MPI C_COMPLEX.
                                                             (line    6)
* C_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI C_DOUBLE_COMPLEX.
                                                             (line    6)
* C_FLOAT_COMPLEX (in module mpi4py.MPI): mpi4py MPI C_FLOAT_COMPLEX.
                                                             (line    6)
* C_LONG_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI C_LONG_DOUBLE_COMPLEX.
                                                             (line    6)
* Call_errhandler() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line  862)
* Call_errhandler() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  249)
* Call_errhandler() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line   97)
* Call_errhandler() (mpi4py.MPI.Win method): mpi4py MPI Win. (line  292)
* Cancel() (mpi4py.MPI.Request method):  mpi4py MPI Request. (line  123)
* cancel() (mpi4py.MPI.Request method):  mpi4py MPI Request. (line  293)
* cancel() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   59)
* cancelled (mpi4py.MPI.Status attribute): mpi4py MPI Status.
                                                             (line  205)
* CART (in module mpi4py.MPI):           mpi4py MPI CART.    (line    6)
* Cart_map() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  121)
* Cartcomm (class in mpi4py.MPI):        mpi4py MPI Cartcomm.
                                                             (line    6)
* cast() (mpi4py.MPI.buffer method):     mpi4py MPI buffer.  (line   83)
* CC:                                    Using meson-python. (line   13)
* CHAR (in module mpi4py.MPI):           mpi4py MPI CHAR.    (line    6)
* CHARACTER (in module mpi4py.MPI):      mpi4py MPI CHARACTER.
                                                             (line    6)
* clear() (mpi4py.MPI.Info method):      mpi4py MPI Info.    (line  183)
* Clone() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line  872)
* Close_port() (in module mpi4py.MPI):   mpi4py MPI Close_port.
                                                             (line    6)
* Close() (mpi4py.MPI.File method):      mpi4py MPI File.    (line  259)
* close() (mpi4py.util.pool.Pool method): mpi4py util pool.  (line  280)
* collect() (in module mpi4py.futures):  Utilities.          (line    9)
* combiner (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  780)
* COMBINER_CONTIGUOUS (in module mpi4py.MPI): mpi4py MPI COMBINER_CONTIGUOUS.
                                                             (line    6)
* COMBINER_DARRAY (in module mpi4py.MPI): mpi4py MPI COMBINER_DARRAY.
                                                             (line    6)
* COMBINER_DUP (in module mpi4py.MPI):   mpi4py MPI COMBINER_DUP.
                                                             (line    6)
* COMBINER_F90_COMPLEX (in module mpi4py.MPI): mpi4py MPI COMBINER_F90_COMPLEX.
                                                             (line    6)
* COMBINER_F90_INTEGER (in module mpi4py.MPI): mpi4py MPI COMBINER_F90_INTEGER.
                                                             (line    6)
* COMBINER_F90_REAL (in module mpi4py.MPI): mpi4py MPI COMBINER_F90_REAL.
                                                             (line    6)
* COMBINER_HINDEXED (in module mpi4py.MPI): mpi4py MPI COMBINER_HINDEXED.
                                                             (line    6)
* COMBINER_HINDEXED_BLOCK (in module mpi4py.MPI): mpi4py MPI COMBINER_HINDEXED_BLOCK.
                                                             (line    6)
* COMBINER_HVECTOR (in module mpi4py.MPI): mpi4py MPI COMBINER_HVECTOR.
                                                             (line    6)
* COMBINER_INDEXED (in module mpi4py.MPI): mpi4py MPI COMBINER_INDEXED.
                                                             (line    6)
* COMBINER_INDEXED_BLOCK (in module mpi4py.MPI): mpi4py MPI COMBINER_INDEXED_BLOCK.
                                                             (line    6)
* COMBINER_NAMED (in module mpi4py.MPI): mpi4py MPI COMBINER_NAMED.
                                                             (line    6)
* COMBINER_RESIZED (in module mpi4py.MPI): mpi4py MPI COMBINER_RESIZED.
                                                             (line    6)
* COMBINER_STRUCT (in module mpi4py.MPI): mpi4py MPI COMBINER_STRUCT.
                                                             (line    6)
* COMBINER_SUBARRAY (in module mpi4py.MPI): mpi4py MPI COMBINER_SUBARRAY.
                                                             (line    6)
* COMBINER_VALUE_INDEX (in module mpi4py.MPI): mpi4py MPI COMBINER_VALUE_INDEX.
                                                             (line    6)
* COMBINER_VECTOR (in module mpi4py.MPI): mpi4py MPI COMBINER_VECTOR.
                                                             (line    6)
* Comm (class in mpi4py.MPI):            mpi4py MPI Comm.    (line    6)
* Comm (class in mpi4py.util.pkl5):      mpi4py util pkl5.   (line  166)
* COMM_NULL (in module mpi4py.MPI):      mpi4py MPI COMM_NULL.
                                                             (line    6)
* COMM_SELF (in module mpi4py.MPI):      mpi4py MPI COMM_SELF.
                                                             (line    6)
* COMM_TYPE_HW_GUIDED (in module mpi4py.MPI): mpi4py MPI COMM_TYPE_HW_GUIDED.
                                                             (line    6)
* COMM_TYPE_HW_UNGUIDED (in module mpi4py.MPI): mpi4py MPI COMM_TYPE_HW_UNGUIDED.
                                                             (line    6)
* COMM_TYPE_RESOURCE_GUIDED (in module mpi4py.MPI): mpi4py MPI COMM_TYPE_RESOURCE_GUIDED.
                                                             (line    6)
* COMM_TYPE_SHARED (in module mpi4py.MPI): mpi4py MPI COMM_TYPE_SHARED.
                                                             (line    6)
* COMM_WORLD (in module mpi4py.MPI):     mpi4py MPI COMM_WORLD.
                                                             (line    6)
* command line option; -c:               Command line<2>.    (line   29)
* command line option; -configure:       Building.           (line   27)
* command line option; -m:               Command line<2>.    (line   24)
* command line option; -mpi:             Building.           (line   10)
* command line option; -mpicc:           Building.           (line   16)
* command line option; -mpild:           Building.           (line   21)
* Commit() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  224)
* Compare_and_swap() (mpi4py.MPI.Win method): mpi4py MPI Win.
                                                             (line  302)
* Compare() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line  879)
* Compare() (mpi4py.MPI.Group method):   mpi4py MPI Group.   (line   90)
* Complete() (mpi4py.MPI.Grequest method): mpi4py MPI Grequest.
                                                             (line   37)
* complete() (mpi4py.MPI.Grequest method): mpi4py MPI Grequest.
                                                             (line   68)
* Complete() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  323)
* COMPLEX (in module mpi4py.MPI):        mpi4py MPI COMPLEX. (line    6)
* COMPLEX16 (in module mpi4py.MPI):      mpi4py MPI COMPLEX16.
                                                             (line    6)
* COMPLEX32 (in module mpi4py.MPI):      mpi4py MPI COMPLEX32.
                                                             (line    6)
* COMPLEX4 (in module mpi4py.MPI):       mpi4py MPI COMPLEX4.
                                                             (line    6)
* COMPLEX8 (in module mpi4py.MPI):       mpi4py MPI COMPLEX8.
                                                             (line    6)
* compose() (in module mpi4py.futures):  Utilities.          (line   20)
* Compute_dims() (in module mpi4py.MPI): mpi4py MPI Compute_dims.
                                                             (line    6)
* Condition (class in mpi4py.util.sync): Condition variable. (line    6)
* CONGRUENT (in module mpi4py.MPI):      mpi4py MPI CONGRUENT.
                                                             (line    6)
* Connect() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  135)
* contents (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  784)
* coords (mpi4py.MPI.Cartcomm attribute): mpi4py MPI Cartcomm.
                                                             (line  128)
* copy() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  190)
* COUNT (in module mpi4py.MPI):          mpi4py MPI COUNT.   (line    6)
* Count (in module mpi4py.typing):       mpi4py typing.      (line  127)
* count (mpi4py.MPI.Status attribute):   mpi4py MPI Status.  (line  209)
* count() (mpi4py.util.sync.Mutex method): Mutual exclusion. (line   97)
* Counter (class in mpi4py.util.sync):   Global counter.     (line    6)
* Create_cart() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  151)
* Create_contiguous() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  231)
* Create_darray() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  241)
* Create_dist_graph_adjacent() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  190)
* Create_dist_graph() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  167)
* Create_dynamic() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  349)
* Create_env() (mpi4py.MPI.Info class method): mpi4py MPI Info.
                                                             (line  108)
* Create_errhandler() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line  899)
* Create_errhandler() (mpi4py.MPI.File class method): mpi4py MPI File.
                                                             (line  266)
* Create_errhandler() (mpi4py.MPI.Session class method): mpi4py MPI Session.
                                                             (line  107)
* Create_errhandler() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  364)
* Create_f90_complex() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  267)
* Create_f90_integer() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  281)
* Create_f90_real() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  291)
* Create_from_group() (mpi4py.MPI.Intracomm class method): mpi4py MPI Intracomm.
                                                             (line  214)
* Create_from_groups() (mpi4py.MPI.Intercomm class method): mpi4py MPI Intercomm.
                                                             (line   47)
* Create_from_session_pset() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line  100)
* Create_graph() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  233)
* Create_group() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  249)
* Create_group() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line  118)
* Create_hindexed_block() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  321)
* Create_hindexed() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  305)
* Create_hvector() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  337)
* Create_indexed_block() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  367)
* Create_indexed() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  353)
* Create_intercomm() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  263)
* Create_keyval() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line  910)
* Create_keyval() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  381)
* Create_keyval() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  375)
* Create_resized() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  400)
* Create_struct() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  414)
* Create_subarray() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  433)
* Create_vector() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  452)
* Create() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  889)
* Create() (mpi4py.MPI.Info class method): mpi4py MPI Info.  (line   96)
* Create() (mpi4py.MPI.Op class method): mpi4py MPI Op.      (line   60)
* Create() (mpi4py.MPI.Win class method): mpi4py MPI Win.    (line  330)
* CXX_BOOL (in module mpi4py.MPI):       mpi4py MPI CXX_BOOL.
                                                             (line    6)
* CXX_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI CXX_DOUBLE_COMPLEX.
                                                             (line    6)
* CXX_FLOAT_COMPLEX (in module mpi4py.MPI): mpi4py MPI CXX_FLOAT_COMPLEX.
                                                             (line    6)
* CXX_LONG_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI CXX_LONG_DOUBLE_COMPLEX.
                                                             (line    6)
* Datatype (class in mpi4py.MPI):        mpi4py MPI Datatype.
                                                             (line    6)
* DATATYPE_NULL (in module mpi4py.MPI):  mpi4py MPI DATATYPE_NULL.
                                                             (line    6)
* decode() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  720)
* degrees (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  351)
* Delete_attr() (mpi4py.MPI.Comm method): mpi4py MPI Comm.   (line  929)
* Delete_attr() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  468)
* Delete_attr() (mpi4py.MPI.Win method): mpi4py MPI Win.     (line  394)
* Delete() (mpi4py.MPI.File class method): mpi4py MPI File.  (line  277)
* Delete() (mpi4py.MPI.Info method):     mpi4py MPI Info.    (line  118)
* Detach_buffer() (in module mpi4py.MPI): mpi4py MPI Detach_buffer.
                                                             (line    6)
* Detach_buffer() (mpi4py.MPI.Comm method): mpi4py MPI Comm. (line  939)
* Detach_buffer() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line  128)
* Detach() (mpi4py.MPI.Win method):      mpi4py MPI Win.     (line  404)
* Difference() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line  115)
* dim (mpi4py.MPI.Cartcomm attribute):   mpi4py MPI Cartcomm.
                                                             (line  132)
* dims (mpi4py.MPI.Cartcomm attribute):  mpi4py MPI Cartcomm.
                                                             (line  136)
* dims (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  102)
* Disconnect() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line  946)
* DISP_CUR (in module mpi4py.MPI):       mpi4py MPI DISP_CUR.
                                                             (line    6)
* Displ (in module mpi4py.typing):       mpi4py typing.      (line  133)
* DISPLACEMENT_CURRENT (in module mpi4py.MPI): mpi4py MPI DISPLACEMENT_CURRENT.
                                                             (line    6)
* DIST_GRAPH (in module mpi4py.MPI):     mpi4py MPI DIST_GRAPH.
                                                             (line    6)
* Distgraphcomm (class in mpi4py.MPI):   mpi4py MPI Distgraphcomm.
                                                             (line    6)
* DISTRIBUTE_BLOCK (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_BLOCK.
                                                             (line    6)
* DISTRIBUTE_CYCLIC (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_CYCLIC.
                                                             (line    6)
* DISTRIBUTE_DFLT_DARG (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_DFLT_DARG.
                                                             (line    6)
* DISTRIBUTE_NONE (in module mpi4py.MPI): mpi4py MPI DISTRIBUTE_NONE.
                                                             (line    6)
* DOUBLE (in module mpi4py.MPI):         mpi4py MPI DOUBLE.  (line    6)
* DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI DOUBLE_COMPLEX.
                                                             (line    6)
* DOUBLE_INT (in module mpi4py.MPI):     mpi4py MPI DOUBLE_INT.
                                                             (line    6)
* DOUBLE_PRECISION (in module mpi4py.MPI): mpi4py MPI DOUBLE_PRECISION.
                                                             (line    6)
* dumps_oob() (mpi4py.MPI.Pickle method): mpi4py MPI Pickle. (line   57)
* dumps() (mpi4py.MPI.Pickle method):    mpi4py MPI Pickle.  (line   47)
* Dup_with_info() (mpi4py.MPI.Comm method): mpi4py MPI Comm. (line  963)
* Dup() (mpi4py.MPI.Comm method):        mpi4py MPI Comm.    (line  953)
* Dup() (mpi4py.MPI.Datatype method):    mpi4py MPI Datatype.
                                                             (line  478)
* Dup() (mpi4py.MPI.Group method):       mpi4py MPI Group.   (line  129)
* Dup() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  128)
* edges (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  106)
* end() (mpi4py.util.sync.Sequential method): Sequential execution.
                                                             (line   57)
* envelope (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  788)
* environment variable; CC:              Using meson-python. (line   13)
* environment variable; MPI4PY_BUILD_BACKEND: Build backends.
                                                             (line    8)
* environment variable; MPI4PY_BUILD_BACKEND <1>: Build backends.
                                                             (line   11)
* environment variable; MPI4PY_BUILD_BACKEND <2>: Using setuptools.
                                                             (line    6)
* environment variable; MPI4PY_BUILD_BACKEND <3>: Using scikit-build-core.
                                                             (line    6)
* environment variable; MPI4PY_BUILD_BACKEND <4>: Using meson-python.
                                                             (line    6)
* environment variable; MPI4PY_BUILD_CONFIGURE: Using setuptools.
                                                             (line   41)
* environment variable; MPI4PY_BUILD_CONFIGURE <1>: Using setuptools.
                                                             (line   46)
* environment variable; MPI4PY_BUILD_MPICC: Using setuptools.
                                                             (line   13)
* environment variable; MPI4PY_BUILD_MPICC <1>: Using setuptools.
                                                             (line   18)
* environment variable; MPI4PY_BUILD_MPICC <2>: Using setuptools.
                                                             (line   59)
* environment variable; MPI4PY_BUILD_MPICFG: Using setuptools.
                                                             (line   29)
* environment variable; MPI4PY_BUILD_MPICFG <1>: Using setuptools.
                                                             (line   36)
* environment variable; MPI4PY_BUILD_MPICFG <2>: Using setuptools.
                                                             (line   67)
* environment variable; MPI4PY_BUILD_MPILD: Using setuptools.
                                                             (line   22)
* environment variable; MPI4PY_BUILD_MPILD <1>: Using setuptools.
                                                             (line   25)
* environment variable; MPI4PY_BUILD_MPILD <2>: Using setuptools.
                                                             (line   63)
* environment variable; MPI4PY_FUTURES_BACKOFF: MPIPoolExecutor.
                                                             (line  119)
* environment variable; MPI4PY_FUTURES_BACKOFF <1>: MPIPoolExecutor.
                                                             (line  249)
* environment variable; MPI4PY_FUTURES_BACKOFF <2>: MPIPoolExecutor.
                                                             (line  252)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS: MPIPoolExecutor.
                                                             (line   49)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS <1>: MPIPoolExecutor.
                                                             (line  225)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS <2>: MPIPoolExecutor.
                                                             (line  228)
* environment variable; MPI4PY_FUTURES_MAX_WORKERS <3>: Computing the Julia set.
                                                             (line   83)
* environment variable; MPI4PY_FUTURES_USE_PKL5: MPIPoolExecutor.
                                                             (line  109)
* environment variable; MPI4PY_FUTURES_USE_PKL5 <1>: MPIPoolExecutor.
                                                             (line  234)
* environment variable; MPI4PY_FUTURES_USE_PKL5 <2>: MPIPoolExecutor.
                                                             (line  237)
* environment variable; MPI4PY_PICKLE_PROTOCOL: Tutorial.    (line   56)
* environment variable; MPI4PY_PICKLE_PROTOCOL <1>: Environment variables.
                                                             (line  153)
* environment variable; MPI4PY_PICKLE_THRESHOLD: Environment variables.
                                                             (line  172)
* environment variable; MPI4PY_RC_ERRORS: Runtime configuration options.
                                                             (line  167)
* environment variable; MPI4PY_RC_ERRORS <1>: Environment variables.
                                                             (line  136)
* environment variable; MPI4PY_RC_FAST_REDUCE: Runtime configuration options.
                                                             (line  117)
* environment variable; MPI4PY_RC_FAST_REDUCE <1>: Environment variables.
                                                             (line   87)
* environment variable; MPI4PY_RC_FINALIZE: Runtime configuration options.
                                                             (line  102)
* environment variable; MPI4PY_RC_FINALIZE <1>: Environment variables.
                                                             (line   32)
* environment variable; MPI4PY_RC_INITIALIZE: Runtime configuration options.
                                                             (line   54)
* environment variable; MPI4PY_RC_INITIALIZE <1>: Environment variables.
                                                             (line   14)
* environment variable; MPI4PY_RC_IRECV_BUFSZ: Runtime configuration options.
                                                             (line  147)
* environment variable; MPI4PY_RC_IRECV_BUFSZ <1>: Environment variables.
                                                             (line  119)
* environment variable; MPI4PY_RC_RECV_MPROBE: Runtime configuration options.
                                                             (line  132)
* environment variable; MPI4PY_RC_RECV_MPROBE <1>: Environment variables.
                                                             (line  104)
* environment variable; MPI4PY_RC_THREAD_LEVEL: Runtime configuration options.
                                                             (line   87)
* environment variable; MPI4PY_RC_THREAD_LEVEL <1>: Environment variables.
                                                             (line   70)
* environment variable; MPI4PY_RC_THREADS: Runtime configuration options.
                                                             (line   69)
* environment variable; MPI4PY_RC_THREADS <1>: Environment variables.
                                                             (line   53)
* environment variable; MPICC:           Using setuptools.   (line   57)
* environment variable; MPICC <1>:       Building.           (line   19)
* environment variable; MPICC <2>:       Building.           (line   45)
* environment variable; MPICFG:          Using setuptools.   (line   65)
* environment variable; MPICFG <1>:      Building.           (line   13)
* environment variable; MPIEXEC_UNIVERSE_SIZE: Computing the Julia set.
                                                             (line   72)
* environment variable; MPILD:           Using setuptools.   (line   61)
* environment variable; MPILD <1>:       Building.           (line   24)
* environment variable; PATH:            Using setuptools.   (line   16)
* environment variable; PATH <1>:        Building.           (line   38)
* ERR_ACCESS (in module mpi4py.MPI):     mpi4py MPI ERR_ACCESS.
                                                             (line    6)
* ERR_AMODE (in module mpi4py.MPI):      mpi4py MPI ERR_AMODE.
                                                             (line    6)
* ERR_ARG (in module mpi4py.MPI):        mpi4py MPI ERR_ARG. (line    6)
* ERR_ASSERT (in module mpi4py.MPI):     mpi4py MPI ERR_ASSERT.
                                                             (line    6)
* ERR_BAD_FILE (in module mpi4py.MPI):   mpi4py MPI ERR_BAD_FILE.
                                                             (line    6)
* ERR_BASE (in module mpi4py.MPI):       mpi4py MPI ERR_BASE.
                                                             (line    6)
* ERR_BUFFER (in module mpi4py.MPI):     mpi4py MPI ERR_BUFFER.
                                                             (line    6)
* ERR_COMM (in module mpi4py.MPI):       mpi4py MPI ERR_COMM.
                                                             (line    6)
* ERR_CONVERSION (in module mpi4py.MPI): mpi4py MPI ERR_CONVERSION.
                                                             (line    6)
* ERR_COUNT (in module mpi4py.MPI):      mpi4py MPI ERR_COUNT.
                                                             (line    6)
* ERR_DIMS (in module mpi4py.MPI):       mpi4py MPI ERR_DIMS.
                                                             (line    6)
* ERR_DISP (in module mpi4py.MPI):       mpi4py MPI ERR_DISP.
                                                             (line    6)
* ERR_DUP_DATAREP (in module mpi4py.MPI): mpi4py MPI ERR_DUP_DATAREP.
                                                             (line    6)
* ERR_ERRHANDLER (in module mpi4py.MPI): mpi4py MPI ERR_ERRHANDLER.
                                                             (line    6)
* ERR_FILE (in module mpi4py.MPI):       mpi4py MPI ERR_FILE.
                                                             (line    6)
* ERR_FILE_EXISTS (in module mpi4py.MPI): mpi4py MPI ERR_FILE_EXISTS.
                                                             (line    6)
* ERR_FILE_IN_USE (in module mpi4py.MPI): mpi4py MPI ERR_FILE_IN_USE.
                                                             (line    6)
* ERR_GROUP (in module mpi4py.MPI):      mpi4py MPI ERR_GROUP.
                                                             (line    6)
* ERR_IN_STATUS (in module mpi4py.MPI):  mpi4py MPI ERR_IN_STATUS.
                                                             (line    6)
* ERR_INFO (in module mpi4py.MPI):       mpi4py MPI ERR_INFO.
                                                             (line    6)
* ERR_INFO_KEY (in module mpi4py.MPI):   mpi4py MPI ERR_INFO_KEY.
                                                             (line    6)
* ERR_INFO_NOKEY (in module mpi4py.MPI): mpi4py MPI ERR_INFO_NOKEY.
                                                             (line    6)
* ERR_INFO_VALUE (in module mpi4py.MPI): mpi4py MPI ERR_INFO_VALUE.
                                                             (line    6)
* ERR_INTERN (in module mpi4py.MPI):     mpi4py MPI ERR_INTERN.
                                                             (line    6)
* ERR_IO (in module mpi4py.MPI):         mpi4py MPI ERR_IO.  (line    6)
* ERR_KEYVAL (in module mpi4py.MPI):     mpi4py MPI ERR_KEYVAL.
                                                             (line    6)
* ERR_LASTCODE (in module mpi4py.MPI):   mpi4py MPI ERR_LASTCODE.
                                                             (line    6)
* ERR_LOCKTYPE (in module mpi4py.MPI):   mpi4py MPI ERR_LOCKTYPE.
                                                             (line    6)
* ERR_NAME (in module mpi4py.MPI):       mpi4py MPI ERR_NAME.
                                                             (line    6)
* ERR_NO_MEM (in module mpi4py.MPI):     mpi4py MPI ERR_NO_MEM.
                                                             (line    6)
* ERR_NO_SPACE (in module mpi4py.MPI):   mpi4py MPI ERR_NO_SPACE.
                                                             (line    6)
* ERR_NO_SUCH_FILE (in module mpi4py.MPI): mpi4py MPI ERR_NO_SUCH_FILE.
                                                             (line    6)
* ERR_NOT_SAME (in module mpi4py.MPI):   mpi4py MPI ERR_NOT_SAME.
                                                             (line    6)
* ERR_OP (in module mpi4py.MPI):         mpi4py MPI ERR_OP.  (line    6)
* ERR_OTHER (in module mpi4py.MPI):      mpi4py MPI ERR_OTHER.
                                                             (line    6)
* ERR_PENDING (in module mpi4py.MPI):    mpi4py MPI ERR_PENDING.
                                                             (line    6)
* ERR_PORT (in module mpi4py.MPI):       mpi4py MPI ERR_PORT.
                                                             (line    6)
* ERR_PROC_ABORTED (in module mpi4py.MPI): mpi4py MPI ERR_PROC_ABORTED.
                                                             (line    6)
* ERR_PROC_FAILED (in module mpi4py.MPI): mpi4py MPI ERR_PROC_FAILED.
                                                             (line    6)
* ERR_PROC_FAILED_PENDING (in module mpi4py.MPI): mpi4py MPI ERR_PROC_FAILED_PENDING.
                                                             (line    6)
* ERR_QUOTA (in module mpi4py.MPI):      mpi4py MPI ERR_QUOTA.
                                                             (line    6)
* ERR_RANK (in module mpi4py.MPI):       mpi4py MPI ERR_RANK.
                                                             (line    6)
* ERR_READ_ONLY (in module mpi4py.MPI):  mpi4py MPI ERR_READ_ONLY.
                                                             (line    6)
* ERR_REQUEST (in module mpi4py.MPI):    mpi4py MPI ERR_REQUEST.
                                                             (line    6)
* ERR_REVOKED (in module mpi4py.MPI):    mpi4py MPI ERR_REVOKED.
                                                             (line    6)
* ERR_RMA_ATTACH (in module mpi4py.MPI): mpi4py MPI ERR_RMA_ATTACH.
                                                             (line    6)
* ERR_RMA_CONFLICT (in module mpi4py.MPI): mpi4py MPI ERR_RMA_CONFLICT.
                                                             (line    6)
* ERR_RMA_FLAVOR (in module mpi4py.MPI): mpi4py MPI ERR_RMA_FLAVOR.
                                                             (line    6)
* ERR_RMA_RANGE (in module mpi4py.MPI):  mpi4py MPI ERR_RMA_RANGE.
                                                             (line    6)
* ERR_RMA_SHARED (in module mpi4py.MPI): mpi4py MPI ERR_RMA_SHARED.
                                                             (line    6)
* ERR_RMA_SYNC (in module mpi4py.MPI):   mpi4py MPI ERR_RMA_SYNC.
                                                             (line    6)
* ERR_ROOT (in module mpi4py.MPI):       mpi4py MPI ERR_ROOT.
                                                             (line    6)
* ERR_SERVICE (in module mpi4py.MPI):    mpi4py MPI ERR_SERVICE.
                                                             (line    6)
* ERR_SESSION (in module mpi4py.MPI):    mpi4py MPI ERR_SESSION.
                                                             (line    6)
* ERR_SIZE (in module mpi4py.MPI):       mpi4py MPI ERR_SIZE.
                                                             (line    6)
* ERR_SPAWN (in module mpi4py.MPI):      mpi4py MPI ERR_SPAWN.
                                                             (line    6)
* ERR_TAG (in module mpi4py.MPI):        mpi4py MPI ERR_TAG. (line    6)
* ERR_TOPOLOGY (in module mpi4py.MPI):   mpi4py MPI ERR_TOPOLOGY.
                                                             (line    6)
* ERR_TRUNCATE (in module mpi4py.MPI):   mpi4py MPI ERR_TRUNCATE.
                                                             (line    6)
* ERR_TYPE (in module mpi4py.MPI):       mpi4py MPI ERR_TYPE.
                                                             (line    6)
* ERR_UNKNOWN (in module mpi4py.MPI):    mpi4py MPI ERR_UNKNOWN.
                                                             (line    6)
* ERR_UNSUPPORTED_DATAREP (in module mpi4py.MPI): mpi4py MPI ERR_UNSUPPORTED_DATAREP.
                                                             (line    6)
* ERR_UNSUPPORTED_OPERATION (in module mpi4py.MPI): mpi4py MPI ERR_UNSUPPORTED_OPERATION.
                                                             (line    6)
* ERR_VALUE_TOO_LARGE (in module mpi4py.MPI): mpi4py MPI ERR_VALUE_TOO_LARGE.
                                                             (line    6)
* ERR_WIN (in module mpi4py.MPI):        mpi4py MPI ERR_WIN. (line    6)
* Errhandler (class in mpi4py.MPI):      mpi4py MPI Errhandler.
                                                             (line    6)
* ERRHANDLER_NULL (in module mpi4py.MPI): mpi4py MPI ERRHANDLER_NULL.
                                                             (line    6)
* error (mpi4py.MPI.Status attribute):   mpi4py MPI Status.  (line  213)
* error_class (mpi4py.MPI.Exception attribute): mpi4py MPI Exception.
                                                             (line   71)
* error_code (mpi4py.MPI.Exception attribute): mpi4py MPI Exception.
                                                             (line   75)
* error_string (mpi4py.MPI.Exception attribute): mpi4py MPI Exception.
                                                             (line   79)
* errors (mpi4py.mpi4py.rc attribute):   Runtime configuration options.
                                                             (line  151)
* ERRORS_ABORT (in module mpi4py.MPI):   mpi4py MPI ERRORS_ABORT.
                                                             (line    6)
* ERRORS_ARE_FATAL (in module mpi4py.MPI): mpi4py MPI ERRORS_ARE_FATAL.
                                                             (line    6)
* ERRORS_RETURN (in module mpi4py.MPI):  mpi4py MPI ERRORS_RETURN.
                                                             (line    6)
* Exception:                             mpi4py MPI Exception.
                                                             (line    6)
* Excl() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  136)
* Exscan_init() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  298)
* Exscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  282)
* exscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  445)
* extent (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  792)
* F_BOOL (in module mpi4py.MPI):         mpi4py MPI F_BOOL.  (line    6)
* F_COMPLEX (in module mpi4py.MPI):      mpi4py MPI F_COMPLEX.
                                                             (line    6)
* F_DOUBLE (in module mpi4py.MPI):       mpi4py MPI F_DOUBLE.
                                                             (line    6)
* F_DOUBLE_COMPLEX (in module mpi4py.MPI): mpi4py MPI F_DOUBLE_COMPLEX.
                                                             (line    6)
* F_ERROR (in module mpi4py.MPI):        mpi4py MPI F_ERROR. (line    6)
* F_FLOAT (in module mpi4py.MPI):        mpi4py MPI F_FLOAT. (line    6)
* F_FLOAT_COMPLEX (in module mpi4py.MPI): mpi4py MPI F_FLOAT_COMPLEX.
                                                             (line    6)
* F_INT (in module mpi4py.MPI):          mpi4py MPI F_INT.   (line    6)
* F_SOURCE (in module mpi4py.MPI):       mpi4py MPI F_SOURCE.
                                                             (line    6)
* F_STATUS_SIZE (in module mpi4py.MPI):  mpi4py MPI F_STATUS_SIZE.
                                                             (line    6)
* F_TAG (in module mpi4py.MPI):          mpi4py MPI F_TAG.   (line    6)
* f2py() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.    (line 2231)
* f2py() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  728)
* f2py() (mpi4py.MPI.Errhandler class method): mpi4py MPI Errhandler.
                                                             (line   52)
* f2py() (mpi4py.MPI.File class method): mpi4py MPI File.    (line  956)
* f2py() (mpi4py.MPI.Group class method): mpi4py MPI Group.  (line  242)
* f2py() (mpi4py.MPI.Info class method): mpi4py MPI Info.    (line  197)
* f2py() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  132)
* f2py() (mpi4py.MPI.Op class method):   mpi4py MPI Op.      (line  103)
* f2py() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  300)
* f2py() (mpi4py.MPI.Session class method): mpi4py MPI Session.
                                                             (line  228)
* f2py() (mpi4py.MPI.Status class method): mpi4py MPI Status.
                                                             (line  189)
* f2py() (mpi4py.MPI.Win class method):  mpi4py MPI Win.     (line  806)
* fast_reduce (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line  104)
* Fence() (mpi4py.MPI.Win method):       mpi4py MPI Win.     (line  414)
* Fetch_and_op() (mpi4py.MPI.Win method): mpi4py MPI Win.    (line  424)
* File (class in mpi4py.MPI):            mpi4py MPI File.    (line    6)
* FILE_NULL (in module mpi4py.MPI):      mpi4py MPI FILE_NULL.
                                                             (line    6)
* finalize (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line   89)
* Finalize() (in module mpi4py.MPI):     mpi4py MPI Finalize.
                                                             (line    6)
* Finalize() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line  135)
* flavor (mpi4py.MPI.Win attribute):     mpi4py MPI Win.     (line  850)
* FLOAT (in module mpi4py.MPI):          mpi4py MPI FLOAT.   (line    6)
* FLOAT_INT (in module mpi4py.MPI):      mpi4py MPI FLOAT_INT.
                                                             (line    6)
* Flush_all() (mpi4py.MPI.Win method):   mpi4py MPI Win.     (line  455)
* Flush_buffer() (in module mpi4py.MPI): mpi4py MPI Flush_buffer.
                                                             (line    6)
* Flush_buffer() (mpi4py.MPI.Comm method): mpi4py MPI Comm.  (line  973)
* Flush_buffer() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line  142)
* Flush_local_all() (mpi4py.MPI.Win method): mpi4py MPI Win. (line  472)
* Flush_local() (mpi4py.MPI.Win method): mpi4py MPI Win.     (line  462)
* Flush() (mpi4py.MPI.Win method):       mpi4py MPI Win.     (line  445)
* format (mpi4py.MPI.buffer attribute):  mpi4py MPI buffer.  (line  159)
* Free_keyval() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line  987)
* Free_keyval() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  492)
* Free_keyval() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  487)
* Free_mem() (in module mpi4py.MPI):     mpi4py MPI Free_mem.
                                                             (line    6)
* Free() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line  980)
* free() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 2239)
* Free() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  485)
* free() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  736)
* Free() (mpi4py.MPI.Errhandler method): mpi4py MPI Errhandler.
                                                             (line   45)
* free() (mpi4py.MPI.Errhandler method): mpi4py MPI Errhandler.
                                                             (line   60)
* free() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  964)
* Free() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  146)
* free() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  250)
* Free() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  135)
* free() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  205)
* free() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  140)
* Free() (mpi4py.MPI.Op method):         mpi4py MPI Op.      (line   75)
* free() (mpi4py.MPI.Op method):         mpi4py MPI Op.      (line  111)
* Free() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  130)
* free() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  308)
* free() (mpi4py.MPI.Session method):    mpi4py MPI Session. (line  236)
* Free() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  480)
* free() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  814)
* free() (mpi4py.util.pkl5.Message method): mpi4py util pkl5.
                                                             (line  126)
* Free() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   45)
* free() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   52)
* free() (mpi4py.util.sync.Condition method): Condition variable.
                                                             (line  135)
* free() (mpi4py.util.sync.Counter method): Global counter.  (line   72)
* free() (mpi4py.util.sync.Mutex method): Mutual exclusion.  (line  104)
* free() (mpi4py.util.sync.Semaphore method): Semaphore object.
                                                             (line   93)
* from_numpy_dtype() (in module mpi4py.util.dtlib): mpi4py util dtlib.
                                                             (line   11)
* fromaddress() (mpi4py.MPI.buffer static method): mpi4py MPI buffer.
                                                             (line   98)
* frombuffer() (mpi4py.MPI.buffer static method): mpi4py MPI buffer.
                                                             (line  114)
* fromcode() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  743)
* fromhandle() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line 2246)
* fromhandle() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  754)
* fromhandle() (mpi4py.MPI.Errhandler class method): mpi4py MPI Errhandler.
                                                             (line   67)
* fromhandle() (mpi4py.MPI.File class method): mpi4py MPI File.
                                                             (line  971)
* fromhandle() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line  257)
* fromhandle() (mpi4py.MPI.Info class method): mpi4py MPI Info.
                                                             (line  212)
* fromhandle() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  147)
* fromhandle() (mpi4py.MPI.Op class method): mpi4py MPI Op.  (line  118)
* fromhandle() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  315)
* fromhandle() (mpi4py.MPI.Session class method): mpi4py MPI Session.
                                                             (line  243)
* fromhandle() (mpi4py.MPI.Win class method): mpi4py MPI Win.
                                                             (line  821)
* Gather_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.   (line 1013)
* Gather() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line  997)
* gather() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 2256)
* gather() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line  379)
* Gatherv_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.  (line 1050)
* Gatherv() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1031)
* Get_accumulate() (mpi4py.MPI.Win method): mpi4py MPI Win.  (line  513)
* Get_address() (in module mpi4py.MPI):  mpi4py MPI Get_address.
                                                             (line    6)
* Get_amode() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  291)
* Get_atomicity() (mpi4py.MPI.File method): mpi4py MPI File. (line  298)
* Get_attr() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1068)
* Get_attr() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  502)
* Get_attr() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  534)
* Get_byte_offset() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  305)
* Get_cart_rank() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   65)
* get_comm_workers() (in module mpi4py.futures): Parallel tasks.
                                                             (line   13)
* get_config() (in module mpi4py):       Miscellaneous functions.
                                                             (line   36)
* Get_contents() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  512)
* Get_coords() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   75)
* Get_count() (mpi4py.MPI.Status method): mpi4py MPI Status. (line   81)
* Get_dim() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   85)
* Get_dims() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   65)
* Get_dist_neighbors_count() (mpi4py.MPI.Distgraphcomm method): mpi4py MPI Distgraphcomm.
                                                             (line   40)
* Get_dist_neighbors() (mpi4py.MPI.Distgraphcomm method): mpi4py MPI Distgraphcomm.
                                                             (line   32)
* Get_elements() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line   91)
* Get_envelope() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  520)
* Get_errhandler() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1078)
* Get_errhandler() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  318)
* Get_errhandler() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line  149)
* Get_errhandler() (mpi4py.MPI.Win method): mpi4py MPI Win.  (line  544)
* Get_error_class() (in module mpi4py.MPI): mpi4py MPI Get_error_class.
                                                             (line    6)
* Get_error_class() (mpi4py.MPI.Exception method): mpi4py MPI Exception.
                                                             (line   47)
* Get_error_code() (mpi4py.MPI.Exception method): mpi4py MPI Exception.
                                                             (line   54)
* Get_error_string() (in module mpi4py.MPI): mpi4py MPI Get_error_string.
                                                             (line    6)
* Get_error_string() (mpi4py.MPI.Exception method): mpi4py MPI Exception.
                                                             (line   61)
* Get_error() (mpi4py.MPI.Status method): mpi4py MPI Status. (line  101)
* Get_extent() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  529)
* Get_failed() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1085)
* Get_group() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1092)
* Get_group() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  325)
* Get_group() (mpi4py.MPI.Win method):   mpi4py MPI Win.     (line  551)
* Get_hw_resource_info() (in module mpi4py.MPI): mpi4py MPI Get_hw_resource_info.
                                                             (line    6)
* get_include() (in module mpi4py):      Miscellaneous functions.
                                                             (line   21)
* Get_info() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1099)
* Get_info() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  332)
* Get_info() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line  156)
* Get_info() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  558)
* Get_library_version() (in module mpi4py.MPI): mpi4py MPI Get_library_version.
                                                             (line    6)
* Get_name() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1106)
* Get_name() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  536)
* Get_name() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  565)
* Get_neighbors_count() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   82)
* Get_neighbors() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   72)
* Get_nkeys() (mpi4py.MPI.Info method):  mpi4py MPI Info.    (line  152)
* Get_nth_pset() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line  163)
* Get_nthkey() (mpi4py.MPI.Info method): mpi4py MPI Info.    (line  159)
* Get_num_psets() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line  177)
* Get_parent() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.
                                                             (line 1113)
* Get_position_shared() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  349)
* Get_position() (mpi4py.MPI.File method): mpi4py MPI File.  (line  339)
* Get_processor_name() (in module mpi4py.MPI): mpi4py MPI Get_processor_name.
                                                             (line    6)
* Get_pset_info() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line  187)
* Get_rank() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1120)
* Get_rank() (mpi4py.MPI.Group method):  mpi4py MPI Group.   (line  153)
* Get_remote_group() (mpi4py.MPI.Intercomm method): mpi4py MPI Intercomm.
                                                             (line   73)
* Get_remote_size() (mpi4py.MPI.Intercomm method): mpi4py MPI Intercomm.
                                                             (line   81)
* Get_size() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1127)
* Get_size() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  543)
* Get_size() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  359)
* Get_size() (mpi4py.MPI.Group method):  mpi4py MPI Group.   (line  160)
* Get_source() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  108)
* Get_status_all() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  147)
* get_status_all() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  335)
* get_status_all() (mpi4py.util.pkl5.Request class method): mpi4py util pkl5.
                                                             (line   96)
* Get_status_any() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  161)
* get_status_any() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  349)
* Get_status_some() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  175)
* get_status_some() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  363)
* Get_status() (mpi4py.MPI.Request method): mpi4py MPI Request.
                                                             (line  137)
* get_status() (mpi4py.MPI.Request method): mpi4py MPI Request.
                                                             (line  325)
* get_status() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   66)
* Get_tag() (mpi4py.MPI.Status method):  mpi4py MPI Status.  (line  115)
* Get_topo() (mpi4py.MPI.Cartcomm method): mpi4py MPI Cartcomm.
                                                             (line   92)
* Get_topo() (mpi4py.MPI.Graphcomm method): mpi4py MPI Graphcomm.
                                                             (line   92)
* Get_topology() (mpi4py.MPI.Comm method): mpi4py MPI Comm.  (line 1134)
* Get_true_extent() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  551)
* Get_type_extent() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  366)
* Get_value_index() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  558)
* get_vendor() (in module mpi4py.MPI):   mpi4py MPI get_vendor.
                                                             (line    6)
* Get_version() (in module mpi4py.MPI):  mpi4py MPI Get_version.
                                                             (line    6)
* Get_view() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  376)
* Get() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  142)
* get() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  222)
* Get() (mpi4py.MPI.Win method):         mpi4py MPI Win.     (line  497)
* get() (mpi4py.util.pool.AsyncResult method): mpi4py util pool.
                                                             (line  311)
* GRAPH (in module mpi4py.MPI):          mpi4py MPI GRAPH.   (line    6)
* Graph_map() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  316)
* Graphcomm (class in mpi4py.MPI):       mpi4py MPI Graphcomm.
                                                             (line    6)
* Grequest (class in mpi4py.MPI):        mpi4py MPI Grequest.
                                                             (line    6)
* Group (class in mpi4py.MPI):           mpi4py MPI Group.   (line    6)
* group (mpi4py.MPI.Comm attribute):     mpi4py MPI Comm.    (line 2513)
* group (mpi4py.MPI.File attribute):     mpi4py MPI File.    (line  997)
* group (mpi4py.MPI.Win attribute):      mpi4py MPI Win.     (line  854)
* GROUP_EMPTY (in module mpi4py.MPI):    mpi4py MPI GROUP_EMPTY.
                                                             (line    6)
* GROUP_NULL (in module mpi4py.MPI):     mpi4py MPI GROUP_NULL.
                                                             (line    6)
* group_rank (mpi4py.MPI.File attribute): mpi4py MPI File.   (line 1001)
* group_rank (mpi4py.MPI.Win attribute): mpi4py MPI Win.     (line  858)
* group_size (mpi4py.MPI.File attribute): mpi4py MPI File.   (line 1005)
* group_size (mpi4py.MPI.Win attribute): mpi4py MPI Win.     (line  862)
* handle (mpi4py.MPI.Comm attribute):    mpi4py MPI Comm.    (line 2517)
* handle (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  796)
* handle (mpi4py.MPI.Errhandler attribute): mpi4py MPI Errhandler.
                                                             (line   85)
* handle (mpi4py.MPI.File attribute):    mpi4py MPI File.    (line 1009)
* handle (mpi4py.MPI.Group attribute):   mpi4py MPI Group.   (line  275)
* handle (mpi4py.MPI.Info attribute):    mpi4py MPI Info.    (line  302)
* handle (mpi4py.MPI.Message attribute): mpi4py MPI Message. (line  220)
* handle (mpi4py.MPI.Op attribute):      mpi4py MPI Op.      (line  136)
* handle (mpi4py.MPI.Request attribute): mpi4py MPI Request. (line  493)
* handle (mpi4py.MPI.Session attribute): mpi4py MPI Session. (line  261)
* handle (mpi4py.MPI.Win attribute):     mpi4py MPI Win.     (line  866)
* Iagree() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1142)
* Iallgather() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1152)
* Iallgatherv() (mpi4py.MPI.Comm method): mpi4py MPI Comm.   (line 1166)
* Iallreduce() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1180)
* Ialltoall() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1196)
* Ialltoallv() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1210)
* Ialltoallw() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1224)
* Ibarrier() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1238)
* Ibcast() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1245)
* Ibsend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1259)
* ibsend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 2270)
* ibsend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line  236)
* IDENT (in module mpi4py.MPI):          mpi4py MPI IDENT.   (line    6)
* Idup_with_info() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1285)
* Idup() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1275)
* Iexscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  330)
* Iflush_buffer() (in module mpi4py.MPI): mpi4py MPI Iflush_buffer.
                                                             (line    6)
* Iflush_buffer() (mpi4py.MPI.Comm method): mpi4py MPI Comm. (line 1295)
* Iflush_buffer() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line  197)
* Igather() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1302)
* Igatherv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1318)
* imap_unordered() (mpi4py.util.pool.Pool method): mpi4py util pool.
                                                             (line  174)
* imap() (mpi4py.util.pool.Pool method): mpi4py util pool.   (line  155)
* Improbe() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1334)
* improbe() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 2286)
* improbe() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.
                                                             (line  347)
* IN_PLACE (in module mpi4py.MPI):       mpi4py MPI IN_PLACE.
                                                             (line    6)
* Incl() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  167)
* indegree (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  355)
* index (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  110)
* inedges (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  359)
* Ineighbor_allgather() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  103)
* Ineighbor_allgatherv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  117)
* Ineighbor_alltoall() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  131)
* Ineighbor_alltoallv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  145)
* Ineighbor_alltoallw() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  159)
* Info (class in mpi4py.MPI):            mpi4py MPI Info.    (line    6)
* info (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 2521)
* info (mpi4py.MPI.File attribute):      mpi4py MPI File.    (line 1013)
* info (mpi4py.MPI.Win attribute):       mpi4py MPI Win.     (line  870)
* INFO_ENV (in module mpi4py.MPI):       mpi4py MPI INFO_ENV.
                                                             (line    6)
* INFO_NULL (in module mpi4py.MPI):      mpi4py MPI INFO_NULL.
                                                             (line    6)
* Init_thread() (in module mpi4py.MPI):  mpi4py MPI Init_thread.
                                                             (line    6)
* Init() (in module mpi4py.MPI):         mpi4py MPI Init.    (line    6)
* Init() (mpi4py.MPI.Session class method): mpi4py MPI Session.
                                                             (line  204)
* initialize (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line   41)
* inoutedges (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  363)
* InPlace (in module mpi4py.typing):     mpi4py typing.      (line  115)
* InPlaceType (class in mpi4py.MPI):     mpi4py MPI InPlaceType.
                                                             (line    6)
* INT (in module mpi4py.MPI):            mpi4py MPI INT.     (line    6)
* INT_INT (in module mpi4py.MPI):        mpi4py MPI INT_INT. (line    6)
* INT16_T (in module mpi4py.MPI):        mpi4py MPI INT16_T. (line    6)
* INT32_T (in module mpi4py.MPI):        mpi4py MPI INT32_T. (line    6)
* INT64_T (in module mpi4py.MPI):        mpi4py MPI INT64_T. (line    6)
* INT8_T (in module mpi4py.MPI):         mpi4py MPI INT8_T.  (line    6)
* INTEGER (in module mpi4py.MPI):        mpi4py MPI INTEGER. (line    6)
* INTEGER1 (in module mpi4py.MPI):       mpi4py MPI INTEGER1.
                                                             (line    6)
* INTEGER16 (in module mpi4py.MPI):      mpi4py MPI INTEGER16.
                                                             (line    6)
* INTEGER2 (in module mpi4py.MPI):       mpi4py MPI INTEGER2.
                                                             (line    6)
* INTEGER4 (in module mpi4py.MPI):       mpi4py MPI INTEGER4.
                                                             (line    6)
* INTEGER8 (in module mpi4py.MPI):       mpi4py MPI INTEGER8.
                                                             (line    6)
* Intercomm (class in mpi4py.MPI):       mpi4py MPI Intercomm.
                                                             (line    6)
* Intercomm (class in mpi4py.util.pkl5): mpi4py util pkl5.   (line  441)
* Intersection() (mpi4py.MPI.Group class method): mpi4py MPI Group.
                                                             (line  177)
* Intracomm (class in mpi4py.MPI):       mpi4py MPI Intracomm.
                                                             (line    6)
* Intracomm (class in mpi4py.util.pkl5): mpi4py util pkl5.   (line  435)
* IO (in module mpi4py.MPI):             mpi4py MPI IO.      (line    6)
* Iprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1350)
* iprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 2302)
* Iprobe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line   70)
* iprobe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  157)
* iprobe() (mpi4py.util.pkl5.Message class method): mpi4py util pkl5.
                                                             (line  158)
* Iread_all() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  394)
* Iread_at_all() (mpi4py.MPI.File method): mpi4py MPI File.  (line  418)
* Iread_at() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  404)
* Iread_shared() (mpi4py.MPI.File method): mpi4py MPI File.  (line  432)
* Iread() (mpi4py.MPI.File method):      mpi4py MPI File.    (line  384)
* irecv_bufsz (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line  134)
* Irecv() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1366)
* irecv() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 2318)
* Irecv() (mpi4py.MPI.Message method):   mpi4py MPI Message. (line   89)
* irecv() (mpi4py.MPI.Message method):   mpi4py MPI Message. (line  176)
* irecv() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  287)
* irecv() (mpi4py.util.pkl5.Message method): mpi4py util pkl5.
                                                             (line  143)
* Ireduce_scatter_block() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1419)
* Ireduce_scatter() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1400)
* Ireduce() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1382)
* Irsend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1436)
* Is_cancelled() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  122)
* is_commutative (mpi4py.MPI.Op attribute): mpi4py MPI Op.   (line  140)
* Is_commutative() (mpi4py.MPI.Op method): mpi4py MPI Op.    (line   82)
* Is_finalized() (in module mpi4py.MPI): mpi4py MPI Is_finalized.
                                                             (line    6)
* Is_initialized() (in module mpi4py.MPI): mpi4py MPI Is_initialized.
                                                             (line    6)
* is_inter (mpi4py.MPI.Comm attribute):  mpi4py MPI Comm.    (line 2525)
* Is_inter() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1452)
* is_intra (mpi4py.MPI.Comm attribute):  mpi4py MPI Comm.    (line 2529)
* Is_intra() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1459)
* is_named (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  800)
* is_predefined (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  804)
* is_predefined (mpi4py.MPI.Op attribute): mpi4py MPI Op.    (line  144)
* Is_revoked() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1466)
* Is_thread_main() (in module mpi4py.MPI): mpi4py MPI Is_thread_main.
                                                             (line    6)
* is_topo (mpi4py.MPI.Comm attribute):   mpi4py MPI Comm.    (line 2533)
* Iscan() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  346)
* Iscatter() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1473)
* Iscatterv() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1489)
* Isend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1505)
* isend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 2334)
* isend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  220)
* Isendrecv_replace() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1544)
* Isendrecv() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1521)
* Ishrink() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1573)
* Issend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1581)
* issend() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 2350)
* issend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line  252)
* istarmap_unordered() (mpi4py.util.pool.Pool method): mpi4py util pool.
                                                             (line  263)
* istarmap() (mpi4py.util.pool.Pool method): mpi4py util pool.
                                                             (line  245)
* items() (mpi4py.MPI.Info method):      mpi4py MPI Info.    (line  236)
* itemsize (mpi4py.MPI.buffer attribute): mpi4py MPI buffer. (line  163)
* Iwrite_all() (mpi4py.MPI.File method): mpi4py MPI File.    (line  452)
* Iwrite_at_all() (mpi4py.MPI.File method): mpi4py MPI File. (line  476)
* Iwrite_at() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  462)
* Iwrite_shared() (mpi4py.MPI.File method): mpi4py MPI File. (line  490)
* Iwrite() (mpi4py.MPI.File method):     mpi4py MPI File.    (line  442)
* Join() (mpi4py.MPI.Comm class method): mpi4py MPI Comm.    (line 1597)
* join() (mpi4py.util.pool.Pool method): mpi4py util pool.   (line  294)
* keys() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  243)
* KEYVAL_INVALID (in module mpi4py.MPI): mpi4py MPI KEYVAL_INVALID.
                                                             (line    6)
* LAND (in module mpi4py.MPI):           mpi4py MPI LAND.    (line    6)
* LASTUSEDCODE (in module mpi4py.MPI):   mpi4py MPI LASTUSEDCODE.
                                                             (line    6)
* lb (mpi4py.MPI.Datatype attribute):    mpi4py MPI Datatype.
                                                             (line  808)
* loads_oob() (mpi4py.MPI.Pickle method): mpi4py MPI Pickle. (line   78)
* loads() (mpi4py.MPI.Pickle method):    mpi4py MPI Pickle.  (line   68)
* Lock_all() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  588)
* LOCK_EXCLUSIVE (in module mpi4py.MPI): mpi4py MPI LOCK_EXCLUSIVE.
                                                             (line    6)
* LOCK_SHARED (in module mpi4py.MPI):    mpi4py MPI LOCK_SHARED.
                                                             (line    6)
* Lock() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  572)
* locked() (mpi4py.util.sync.Condition method): Condition variable.
                                                             (line   79)
* locked() (mpi4py.util.sync.Mutex method): Mutual exclusion.
                                                             (line   90)
* LOGICAL (in module mpi4py.MPI):        mpi4py MPI LOGICAL. (line    6)
* LOGICAL1 (in module mpi4py.MPI):       mpi4py MPI LOGICAL1.
                                                             (line    6)
* LOGICAL2 (in module mpi4py.MPI):       mpi4py MPI LOGICAL2.
                                                             (line    6)
* LOGICAL4 (in module mpi4py.MPI):       mpi4py MPI LOGICAL4.
                                                             (line    6)
* LOGICAL8 (in module mpi4py.MPI):       mpi4py MPI LOGICAL8.
                                                             (line    6)
* LONG (in module mpi4py.MPI):           mpi4py MPI LONG.    (line    6)
* LONG_DOUBLE (in module mpi4py.MPI):    mpi4py MPI LONG_DOUBLE.
                                                             (line    6)
* LONG_DOUBLE_INT (in module mpi4py.MPI): mpi4py MPI LONG_DOUBLE_INT.
                                                             (line    6)
* LONG_INT (in module mpi4py.MPI):       mpi4py MPI LONG_INT.
                                                             (line    6)
* LONG_LONG (in module mpi4py.MPI):      mpi4py MPI LONG_LONG.
                                                             (line    6)
* Lookup_name() (in module mpi4py.MPI):  mpi4py MPI Lookup_name.
                                                             (line    6)
* LOR (in module mpi4py.MPI):            mpi4py MPI LOR.     (line    6)
* LXOR (in module mpi4py.MPI):           mpi4py MPI LXOR.    (line    6)
* map_async() (mpi4py.util.pool.Pool method): mpi4py util pool.
                                                             (line  130)
* map() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  136)
* map() (mpi4py.util.pool.Pool method):  mpi4py util pool.   (line  100)
* MapResult (class in mpi4py.util.pool): mpi4py util pool.   (line  360)
* Match_size() (mpi4py.MPI.Datatype class method): mpi4py MPI Datatype.
                                                             (line  572)
* MAX (in module mpi4py.MPI):            mpi4py MPI MAX.     (line    6)
* MAX_DATAREP_STRING (in module mpi4py.MPI): mpi4py MPI MAX_DATAREP_STRING.
                                                             (line    6)
* MAX_ERROR_STRING (in module mpi4py.MPI): mpi4py MPI MAX_ERROR_STRING.
                                                             (line    6)
* MAX_INFO_KEY (in module mpi4py.MPI):   mpi4py MPI MAX_INFO_KEY.
                                                             (line    6)
* MAX_INFO_VAL (in module mpi4py.MPI):   mpi4py MPI MAX_INFO_VAL.
                                                             (line    6)
* MAX_LIBRARY_VERSION_STRING (in module mpi4py.MPI): mpi4py MPI MAX_LIBRARY_VERSION_STRING.
                                                             (line    6)
* MAX_OBJECT_NAME (in module mpi4py.MPI): mpi4py MPI MAX_OBJECT_NAME.
                                                             (line    6)
* MAX_PORT_NAME (in module mpi4py.MPI):  mpi4py MPI MAX_PORT_NAME.
                                                             (line    6)
* MAX_PROCESSOR_NAME (in module mpi4py.MPI): mpi4py MPI MAX_PROCESSOR_NAME.
                                                             (line    6)
* MAX_PSET_NAME_LEN (in module mpi4py.MPI): mpi4py MPI MAX_PSET_NAME_LEN.
                                                             (line    6)
* MAX_STRINGTAG_LEN (in module mpi4py.MPI): mpi4py MPI MAX_STRINGTAG_LEN.
                                                             (line    6)
* MAXLOC (in module mpi4py.MPI):         mpi4py MPI MAXLOC.  (line    6)
* memory (in module mpi4py.MPI):         mpi4py MPI memory.  (line    6)
* Merge() (mpi4py.MPI.Intercomm method): mpi4py MPI Intercomm.
                                                             (line   88)
* Message (class in mpi4py.MPI):         mpi4py MPI Message. (line    6)
* Message (class in mpi4py.util.pkl5):   mpi4py util pkl5.   (line  117)
* MESSAGE_NO_PROC (in module mpi4py.MPI): mpi4py MPI MESSAGE_NO_PROC.
                                                             (line    6)
* MESSAGE_NULL (in module mpi4py.MPI):   mpi4py MPI MESSAGE_NULL.
                                                             (line    6)
* MIN (in module mpi4py.MPI):            mpi4py MPI MIN.     (line    6)
* MINLOC (in module mpi4py.MPI):         mpi4py MPI MINLOC.  (line    6)
* MODE_APPEND (in module mpi4py.MPI):    mpi4py MPI MODE_APPEND.
                                                             (line    6)
* MODE_CREATE (in module mpi4py.MPI):    mpi4py MPI MODE_CREATE.
                                                             (line    6)
* MODE_DELETE_ON_CLOSE (in module mpi4py.MPI): mpi4py MPI MODE_DELETE_ON_CLOSE.
                                                             (line    6)
* MODE_EXCL (in module mpi4py.MPI):      mpi4py MPI MODE_EXCL.
                                                             (line    6)
* MODE_NOCHECK (in module mpi4py.MPI):   mpi4py MPI MODE_NOCHECK.
                                                             (line    6)
* MODE_NOPRECEDE (in module mpi4py.MPI): mpi4py MPI MODE_NOPRECEDE.
                                                             (line    6)
* MODE_NOPUT (in module mpi4py.MPI):     mpi4py MPI MODE_NOPUT.
                                                             (line    6)
* MODE_NOSTORE (in module mpi4py.MPI):   mpi4py MPI MODE_NOSTORE.
                                                             (line    6)
* MODE_NOSUCCEED (in module mpi4py.MPI): mpi4py MPI MODE_NOSUCCEED.
                                                             (line    6)
* MODE_RDONLY (in module mpi4py.MPI):    mpi4py MPI MODE_RDONLY.
                                                             (line    6)
* MODE_RDWR (in module mpi4py.MPI):      mpi4py MPI MODE_RDWR.
                                                             (line    6)
* MODE_SEQUENTIAL (in module mpi4py.MPI): mpi4py MPI MODE_SEQUENTIAL.
                                                             (line    6)
* MODE_UNIQUE_OPEN (in module mpi4py.MPI): mpi4py MPI MODE_UNIQUE_OPEN.
                                                             (line    6)
* MODE_WRONLY (in module mpi4py.MPI):    mpi4py MPI MODE_WRONLY.
                                                             (line    6)
* model (mpi4py.MPI.Win attribute):      mpi4py MPI Win.     (line  874)
* module; mpi4py:                        mpi4py.             (line    6)
* module; mpi4py.bench:                  mpi4py bench.       (line    6)
* module; mpi4py.futures:                mpi4py futures.     (line    6)
* module; mpi4py.MPI:                    mpi4py MPI<2>.      (line    6)
* module; mpi4py.run:                    mpi4py run.         (line    6)
* module; mpi4py.typing:                 mpi4py typing.      (line    6)
* module; mpi4py.util:                   mpi4py util.        (line    6)
* module; mpi4py.util.dtlib:             mpi4py util dtlib.  (line    6)
* module; mpi4py.util.pkl5:              mpi4py util pkl5.   (line    6)
* module; mpi4py.util.pool:              mpi4py util pool.   (line    6)
* module; mpi4py.util.sync:              mpi4py util sync.   (line    6)
* MPI4PY_BUILD_BACKEND:                  Build backends.     (line    8)
* MPI4PY_BUILD_BACKEND <1>:              Using setuptools.   (line    6)
* MPI4PY_BUILD_BACKEND <2>:              Using scikit-build-core.
                                                             (line    6)
* MPI4PY_BUILD_BACKEND <3>:              Using meson-python. (line    6)
* MPI4PY_BUILD_CONFIGURE:                Using setuptools.   (line   46)
* MPI4PY_BUILD_MPICC:                    Using setuptools.   (line   18)
* MPI4PY_BUILD_MPICC <1>:                Using setuptools.   (line   59)
* MPI4PY_BUILD_MPICFG:                   Using setuptools.   (line   36)
* MPI4PY_BUILD_MPICFG <1>:               Using setuptools.   (line   67)
* MPI4PY_BUILD_MPILD:                    Using setuptools.   (line   25)
* MPI4PY_BUILD_MPILD <1>:                Using setuptools.   (line   63)
* MPI4PY_FUTURES_BACKOFF:                MPIPoolExecutor.    (line  119)
* MPI4PY_FUTURES_BACKOFF <1>:            MPIPoolExecutor.    (line  252)
* MPI4PY_FUTURES_MAX_WORKERS:            MPIPoolExecutor.    (line   49)
* MPI4PY_FUTURES_MAX_WORKERS <1>:        MPIPoolExecutor.    (line  228)
* MPI4PY_FUTURES_MAX_WORKERS <2>:        Computing the Julia set.
                                                             (line   83)
* MPI4PY_FUTURES_USE_PKL5:               MPIPoolExecutor.    (line  109)
* MPI4PY_FUTURES_USE_PKL5 <1>:           MPIPoolExecutor.    (line  237)
* MPI4PY_PICKLE_PROTOCOL:                Tutorial.           (line   56)
* MPI4PY_RC_ERRORS:                      Runtime configuration options.
                                                             (line  167)
* MPI4PY_RC_FAST_REDUCE:                 Runtime configuration options.
                                                             (line  117)
* MPI4PY_RC_FINALIZE:                    Runtime configuration options.
                                                             (line  102)
* MPI4PY_RC_INITIALIZE:                  Runtime configuration options.
                                                             (line   54)
* MPI4PY_RC_IRECV_BUFSZ:                 Runtime configuration options.
                                                             (line  147)
* MPI4PY_RC_RECV_MPROBE:                 Runtime configuration options.
                                                             (line  132)
* MPI4PY_RC_THREAD_LEVEL:                Runtime configuration options.
                                                             (line   87)
* MPI4PY_RC_THREADS:                     Runtime configuration options.
                                                             (line   69)
* mpi4py.rc (in module mpi4py):          Runtime configuration options.
                                                             (line    6)
* MPICC:                                 Building.           (line   19)
* MPICC <1>:                             Building.           (line   45)
* MPICFG:                                Building.           (line   13)
* MPICommExecutor (class in mpi4py.futures): MPICommExecutor.
                                                             (line   30)
* MPIEXEC_UNIVERSE_SIZE:                 Computing the Julia set.
                                                             (line   72)
* MPILD:                                 Building.           (line   24)
* MPIPoolExecutor (class in mpi4py.futures): MPIPoolExecutor.
                                                             (line   44)
* Mprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1607)
* mprobe() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 2366)
* mprobe() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5. (line  331)
* Mutex (class in mpi4py.util.sync):     Mutual exclusion.   (line    6)
* name (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 2537)
* name (mpi4py.MPI.Datatype attribute):  mpi4py MPI Datatype.
                                                             (line  812)
* name (mpi4py.MPI.Win attribute):       mpi4py MPI Win.     (line  878)
* nbytes (mpi4py.MPI.buffer attribute):  mpi4py MPI buffer.  (line  167)
* ndim (mpi4py.MPI.Cartcomm attribute):  mpi4py MPI Cartcomm.
                                                             (line  140)
* nedges (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  114)
* Neighbor_allgather_init() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  187)
* Neighbor_allgather() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  173)
* neighbor_allgather() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  328)
* Neighbor_allgatherv_init() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  218)
* Neighbor_allgatherv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  204)
* Neighbor_alltoall_init() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  249)
* Neighbor_alltoall() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  235)
* neighbor_alltoall() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  338)
* Neighbor_alltoallv_init() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  280)
* Neighbor_alltoallv() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  266)
* Neighbor_alltoallw_init() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  311)
* Neighbor_alltoallw() (mpi4py.MPI.Topocomm method): mpi4py MPI Topocomm.
                                                             (line  297)
* neighbors (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  118)
* next() (mpi4py.util.sync.Counter method): Global counter.  (line   59)
* nneighbors (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  122)
* nnodes (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  126)
* NO_OP (in module mpi4py.MPI):          mpi4py MPI NO_OP.   (line    6)
* notify_all() (mpi4py.util.sync.Condition method): Condition variable.
                                                             (line  125)
* notify() (mpi4py.util.sync.Condition method): Condition variable.
                                                             (line  111)
* num_workers (mpi4py.futures.MPIPoolExecutor attribute): MPIPoolExecutor.
                                                             (line  221)
* obj (mpi4py.MPI.buffer attribute):     mpi4py MPI buffer.  (line  171)
* OFFSET (in module mpi4py.MPI):         mpi4py MPI OFFSET.  (line    6)
* Offset (in module mpi4py.typing):      mpi4py typing.      (line  139)
* Op (class in mpi4py.MPI):              mpi4py MPI Op.      (line    6)
* OP_NULL (in module mpi4py.MPI):        mpi4py MPI OP_NULL. (line    6)
* Open_port() (in module mpi4py.MPI):    mpi4py MPI Open_port.
                                                             (line    6)
* Open() (mpi4py.MPI.File class method): mpi4py MPI File.    (line  500)
* ORDER_C (in module mpi4py.MPI):        mpi4py MPI ORDER_C. (line    6)
* ORDER_F (in module mpi4py.MPI):        mpi4py MPI ORDER_F. (line    6)
* ORDER_FORTRAN (in module mpi4py.MPI):  mpi4py MPI ORDER_FORTRAN.
                                                             (line    6)
* outdegree (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  367)
* outedges (mpi4py.MPI.Topocomm attribute): mpi4py MPI Topocomm.
                                                             (line  371)
* Pack_external_size() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  624)
* Pack_external() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  604)
* Pack_size() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  642)
* Pack() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  586)
* PACKED (in module mpi4py.MPI):         mpi4py MPI PACKED.  (line    6)
* Parrived() (mpi4py.MPI.Prequest method): mpi4py MPI Prequest.
                                                             (line   44)
* PATH:                                  Using setuptools.   (line   16)
* PATH <1>:                              Building.           (line   38)
* Pcontrol() (in module mpi4py.MPI):     mpi4py MPI Pcontrol.
                                                             (line    6)
* periods (mpi4py.MPI.Cartcomm attribute): mpi4py MPI Cartcomm.
                                                             (line  144)
* Pickle (class in mpi4py.MPI):          mpi4py MPI Pickle.  (line    6)
* pickle (in module mpi4py.MPI):         mpi4py MPI pickle.  (line    6)
* Pool (class in mpi4py.util.pool):      mpi4py util pool.   (line   21)
* pop() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  250)
* popitem() (mpi4py.MPI.Info method):    mpi4py MPI Info.    (line  264)
* Post() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  598)
* Pready_list() (mpi4py.MPI.Prequest method): mpi4py MPI Prequest.
                                                             (line   64)
* Pready_range() (mpi4py.MPI.Prequest method): mpi4py MPI Prequest.
                                                             (line   74)
* Pready() (mpi4py.MPI.Prequest method): mpi4py MPI Prequest.
                                                             (line   54)
* Preallocate() (mpi4py.MPI.File method): mpi4py MPI File.   (line  519)
* Precv_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1623)
* Prequest (class in mpi4py.MPI):        mpi4py MPI Prequest.
                                                             (line    6)
* Probe() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1644)
* probe() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 2382)
* Probe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line   99)
* probe() (mpi4py.MPI.Message class method): mpi4py MPI Message.
                                                             (line  183)
* probe() (mpi4py.util.pkl5.Message class method): mpi4py util pkl5.
                                                             (line  150)
* PROC_NULL (in module mpi4py.MPI):      mpi4py MPI PROC_NULL.
                                                             (line    6)
* PROD (in module mpi4py.MPI):           mpi4py MPI PROD.    (line    6)
* profile() (in module mpi4py):          Miscellaneous functions.
                                                             (line    6)
* PROTOCOL (mpi4py.MPI.Pickle attribute): mpi4py MPI Pickle. (line   96)
* Psend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1662)
* Publish_name() (in module mpi4py.MPI): mpi4py MPI Publish_name.
                                                             (line    6)
* Put() (mpi4py.MPI.Win method):         mpi4py MPI Win.     (line  612)
* py2f() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 2398)
* py2f() (mpi4py.MPI.Datatype method):   mpi4py MPI Datatype.
                                                             (line  764)
* py2f() (mpi4py.MPI.Errhandler method): mpi4py MPI Errhandler.
                                                             (line   77)
* py2f() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  981)
* py2f() (mpi4py.MPI.Group method):      mpi4py MPI Group.   (line  267)
* py2f() (mpi4py.MPI.Info method):       mpi4py MPI Info.    (line  271)
* py2f() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  202)
* py2f() (mpi4py.MPI.Op method):         mpi4py MPI Op.      (line  128)
* py2f() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  377)
* py2f() (mpi4py.MPI.Session method):    mpi4py MPI Session. (line  253)
* py2f() (mpi4py.MPI.Status method):     mpi4py MPI Status.  (line  197)
* py2f() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  831)
* Python Enhancement Proposals; PEP 574: mpi4py util pkl5.   (line    8)
* Query_thread() (in module mpi4py.MPI): mpi4py MPI Query_thread.
                                                             (line    6)
* Raccumulate() (mpi4py.MPI.Win method): mpi4py MPI Win.     (line  628)
* Range_excl() (mpi4py.MPI.Group method): mpi4py MPI Group.  (line  192)
* Range_incl() (mpi4py.MPI.Group method): mpi4py MPI Group.  (line  203)
* rank (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 2541)
* rank (mpi4py.MPI.Group attribute):     mpi4py MPI Group.   (line  279)
* Read_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  557)
* Read_all_end() (mpi4py.MPI.File method): mpi4py MPI File.  (line  567)
* Read_all() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  543)
* Read_at_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  614)
* Read_at_all_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  628)
* Read_at_all() (mpi4py.MPI.File method): mpi4py MPI File.   (line  598)
* Read_at() (mpi4py.MPI.File method):    mpi4py MPI File.    (line  582)
* Read_ordered_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  656)
* Read_ordered_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  666)
* Read_ordered() (mpi4py.MPI.File method): mpi4py MPI File.  (line  642)
* Read_shared() (mpi4py.MPI.File method): mpi4py MPI File.   (line  680)
* Read() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  529)
* readonly (mpi4py.MPI.buffer attribute): mpi4py MPI buffer. (line  175)
* ready() (mpi4py.util.pool.AsyncResult method): mpi4py util pool.
                                                             (line  337)
* REAL (in module mpi4py.MPI):           mpi4py MPI REAL.    (line    6)
* REAL16 (in module mpi4py.MPI):         mpi4py MPI REAL16.  (line    6)
* REAL2 (in module mpi4py.MPI):          mpi4py MPI REAL2.   (line    6)
* REAL4 (in module mpi4py.MPI):          mpi4py MPI REAL4.   (line    6)
* REAL8 (in module mpi4py.MPI):          mpi4py MPI REAL8.   (line    6)
* Recv_init() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1703)
* recv_mprobe (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line  119)
* Recv() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1683)
* recv() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 2403)
* Recv() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  118)
* recv() (mpi4py.MPI.Message method):    mpi4py MPI Message. (line  207)
* recv() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.   (line  268)
* recv() (mpi4py.util.pkl5.Message method): mpi4py util pkl5.
                                                             (line  133)
* Reduce_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.   (line 1737)
* Reduce_local() (mpi4py.MPI.Op method): mpi4py MPI Op.      (line   89)
* Reduce_scatter_block_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1793)
* Reduce_scatter_block() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1777)
* Reduce_scatter_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1812)
* Reduce_scatter() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 1758)
* Reduce() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1719)
* reduce() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 2422)
* Register_datarep() (in module mpi4py.MPI): mpi4py MPI Register_datarep.
                                                             (line    6)
* release() (mpi4py.MPI.buffer method):  mpi4py MPI buffer.  (line  128)
* release() (mpi4py.util.sync.Condition method): Condition variable.
                                                             (line   72)
* release() (mpi4py.util.sync.Mutex method): Mutual exclusion.
                                                             (line   83)
* release() (mpi4py.util.sync.Semaphore method): Semaphore object.
                                                             (line   81)
* remote_group (mpi4py.MPI.Intercomm attribute): mpi4py MPI Intercomm.
                                                             (line  101)
* remote_size (mpi4py.MPI.Intercomm attribute): mpi4py MPI Intercomm.
                                                             (line  105)
* Remove_error_class() (in module mpi4py.MPI): mpi4py MPI Remove_error_class.
                                                             (line    6)
* Remove_error_code() (in module mpi4py.MPI): mpi4py MPI Remove_error_code.
                                                             (line    6)
* Remove_error_string() (in module mpi4py.MPI): mpi4py MPI Remove_error_string.
                                                             (line    6)
* REPLACE (in module mpi4py.MPI):        mpi4py MPI REPLACE. (line    6)
* Request (class in mpi4py.MPI):         mpi4py MPI Request. (line    6)
* Request (class in mpi4py.util.pkl5):   mpi4py util pkl5.   (line   36)
* REQUEST_NULL (in module mpi4py.MPI):   mpi4py MPI REQUEST_NULL.
                                                             (line    6)
* Revoke() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 1833)
* Rget_accumulate() (mpi4py.MPI.Win method): mpi4py MPI Win. (line  662)
* Rget() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  646)
* ROOT (in module mpi4py.MPI):           mpi4py MPI ROOT.    (line    6)
* Rput() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  684)
* Rsend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 1856)
* Rsend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 1840)
* S (in module mpi4py.typing):           mpi4py typing.      (line  303)
* Scan_init() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  378)
* Scan() (mpi4py.MPI.Intracomm method):  mpi4py MPI Intracomm.
                                                             (line  362)
* scan() (mpi4py.MPI.Intracomm method):  mpi4py MPI Intracomm.
                                                             (line  460)
* Scatter_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.  (line 1888)
* Scatter() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 1872)
* scatter() (mpi4py.MPI.Comm method):    mpi4py MPI Comm.    (line 2439)
* scatter() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.
                                                             (line  395)
* Scatterv_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm. (line 1925)
* Scatterv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1906)
* SEEK_CUR (in module mpi4py.MPI):       mpi4py MPI SEEK_CUR.
                                                             (line    6)
* SEEK_END (in module mpi4py.MPI):       mpi4py MPI SEEK_END.
                                                             (line    6)
* SEEK_SET (in module mpi4py.MPI):       mpi4py MPI SEEK_SET.
                                                             (line    6)
* Seek_shared() (mpi4py.MPI.File method): mpi4py MPI File.   (line  708)
* Seek() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  694)
* Semaphore (class in mpi4py.util.sync): Semaphore object.   (line    6)
* Send_init() (mpi4py.MPI.Comm method):  mpi4py MPI Comm.    (line 1964)
* Send() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 1944)
* send() (mpi4py.MPI.Comm method):       mpi4py MPI Comm.    (line 2453)
* send() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.   (line  172)
* Sendrecv_replace() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 2013)
* Sendrecv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 1980)
* sendrecv() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 2469)
* sendrecv() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.
                                                             (line  306)
* Sequential (class in mpi4py.util.sync): Sequential execution.
                                                             (line    6)
* Session (class in mpi4py.MPI):         mpi4py MPI Session. (line    6)
* SESSION_NULL (in module mpi4py.MPI):   mpi4py MPI SESSION_NULL.
                                                             (line    6)
* Set_atomicity() (mpi4py.MPI.File method): mpi4py MPI File. (line  722)
* Set_attr() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 2044)
* Set_attr() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  658)
* Set_attr() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  700)
* Set_cancelled() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  129)
* Set_elements() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  142)
* Set_errhandler() (mpi4py.MPI.Comm method): mpi4py MPI Comm.
                                                             (line 2058)
* Set_errhandler() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  732)
* Set_errhandler() (mpi4py.MPI.Session method): mpi4py MPI Session.
                                                             (line  218)
* Set_errhandler() (mpi4py.MPI.Win method): mpi4py MPI Win.  (line  714)
* Set_error() (mpi4py.MPI.Status method): mpi4py MPI Status. (line  159)
* Set_info() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 2068)
* Set_info() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  742)
* Set_info() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  724)
* Set_name() (mpi4py.MPI.Comm method):   mpi4py MPI Comm.    (line 2078)
* Set_name() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  672)
* Set_name() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  734)
* Set_size() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  752)
* Set_source() (mpi4py.MPI.Status method): mpi4py MPI Status.
                                                             (line  169)
* Set_tag() (mpi4py.MPI.Status method):  mpi4py MPI Status.  (line  179)
* Set_view() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  762)
* Set() (mpi4py.MPI.Info method):        mpi4py MPI Info.    (line  169)
* Shared_query() (mpi4py.MPI.Win method): mpi4py MPI Win.    (line  744)
* Shift() (mpi4py.MPI.Cartcomm method):  mpi4py MPI Cartcomm.
                                                             (line  100)
* SHORT (in module mpi4py.MPI):          mpi4py MPI SHORT.   (line    6)
* SHORT_INT (in module mpi4py.MPI):      mpi4py MPI SHORT_INT.
                                                             (line    6)
* Shrink() (mpi4py.MPI.Comm method):     mpi4py MPI Comm.    (line 2088)
* shutdown() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  179)
* SIGNED_CHAR (in module mpi4py.MPI):    mpi4py MPI SIGNED_CHAR.
                                                             (line    6)
* SIGNED_INT (in module mpi4py.MPI):     mpi4py MPI SIGNED_INT.
                                                             (line    6)
* SIGNED_LONG (in module mpi4py.MPI):    mpi4py MPI SIGNED_LONG.
                                                             (line    6)
* SIGNED_LONG_LONG (in module mpi4py.MPI): mpi4py MPI SIGNED_LONG_LONG.
                                                             (line    6)
* SIGNED_SHORT (in module mpi4py.MPI):   mpi4py MPI SIGNED_SHORT.
                                                             (line    6)
* SIMILAR (in module mpi4py.MPI):        mpi4py MPI SIMILAR. (line    6)
* SINT16_T (in module mpi4py.MPI):       mpi4py MPI SINT16_T.
                                                             (line    6)
* SINT32_T (in module mpi4py.MPI):       mpi4py MPI SINT32_T.
                                                             (line    6)
* SINT64_T (in module mpi4py.MPI):       mpi4py MPI SINT64_T.
                                                             (line    6)
* SINT8_T (in module mpi4py.MPI):        mpi4py MPI SINT8_T. (line    6)
* size (mpi4py.MPI.Comm attribute):      mpi4py MPI Comm.    (line 2545)
* size (mpi4py.MPI.Datatype attribute):  mpi4py MPI Datatype.
                                                             (line  816)
* size (mpi4py.MPI.File attribute):      mpi4py MPI File.    (line 1017)
* size (mpi4py.MPI.Group attribute):     mpi4py MPI Group.   (line  283)
* source (mpi4py.MPI.Status attribute):  mpi4py MPI Status.  (line  217)
* Spawn_multiple() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  419)
* Spawn() (mpi4py.MPI.Intracomm method): mpi4py MPI Intracomm.
                                                             (line  396)
* Split_type() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 2109)
* Split() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 2095)
* Ssend_init() (mpi4py.MPI.Comm method): mpi4py MPI Comm.    (line 2141)
* Ssend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 2125)
* ssend() (mpi4py.MPI.Comm method):      mpi4py MPI Comm.    (line 2494)
* ssend() (mpi4py.util.pkl5.Comm method): mpi4py util pkl5.  (line  204)
* starmap_async() (mpi4py.util.pool.Pool method): mpi4py util pool.
                                                             (line  221)
* starmap() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  165)
* starmap() (mpi4py.util.pool.Pool method): mpi4py util pool.
                                                             (line  191)
* Start() (mpi4py.MPI.Grequest class method): mpi4py MPI Grequest.
                                                             (line   44)
* Start() (mpi4py.MPI.Prequest method):  mpi4py MPI Prequest.
                                                             (line   88)
* Start() (mpi4py.MPI.Win method):       mpi4py MPI Win.     (line  754)
* Startall() (mpi4py.MPI.Prequest class method): mpi4py MPI Prequest.
                                                             (line   95)
* Status (class in mpi4py.MPI):          mpi4py MPI Status.  (line    6)
* Sub() (mpi4py.MPI.Cartcomm method):    mpi4py MPI Cartcomm.
                                                             (line  115)
* submit() (mpi4py.futures.MPIPoolExecutor method): MPIPoolExecutor.
                                                             (line  126)
* SUBVERSION (in module mpi4py.MPI):     mpi4py MPI SUBVERSION.
                                                             (line    6)
* SUCCESS (in module mpi4py.MPI):        mpi4py MPI SUCCESS. (line    6)
* successful() (mpi4py.util.pool.AsyncResult method): mpi4py util pool.
                                                             (line  344)
* SUM (in module mpi4py.MPI):            mpi4py MPI SUM.     (line    6)
* SupportsBuffer (in module mpi4py.typing): mpi4py typing.   (line   72)
* SupportsCAI (in module mpi4py.typing): mpi4py typing.      (line   92)
* SupportsDLPack (in module mpi4py.typing): mpi4py typing.   (line   82)
* Sync() (mpi4py.MPI.File method):       mpi4py MPI File.    (line  783)
* Sync() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  768)
* T (in module mpi4py.typing):           mpi4py typing.      (line  307)
* tag (mpi4py.MPI.Status attribute):     mpi4py MPI Status.  (line  221)
* TAG_UB (in module mpi4py.MPI):         mpi4py MPI TAG_UB.  (line    6)
* TargetSpec (in module mpi4py.typing):  mpi4py typing.      (line  284)
* terminate() (mpi4py.util.pool.Pool method): mpi4py util pool.
                                                             (line  287)
* Test() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  189)
* test() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  382)
* Test() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  775)
* test() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   76)
* Testall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  199)
* testall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  392)
* testall() (mpi4py.util.pkl5.Request class method): mpi4py util pkl5.
                                                             (line  103)
* Testany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  213)
* testany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  406)
* Testsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  227)
* testsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  420)
* THREAD_FUNNELED (in module mpi4py.MPI): mpi4py MPI THREAD_FUNNELED.
                                                             (line    6)
* thread_level (mpi4py.mpi4py.rc attribute): Runtime configuration options.
                                                             (line   71)
* THREAD_MULTIPLE (in module mpi4py.MPI): mpi4py MPI THREAD_MULTIPLE.
                                                             (line    6)
* THREAD_SERIALIZED (in module mpi4py.MPI): mpi4py MPI THREAD_SERIALIZED.
                                                             (line    6)
* THREAD_SINGLE (in module mpi4py.MPI):  mpi4py MPI THREAD_SINGLE.
                                                             (line    6)
* ThreadPool (class in mpi4py.util.pool): mpi4py util pool.  (line  301)
* threads (mpi4py.mpi4py.rc attribute):  Runtime configuration options.
                                                             (line   56)
* THRESHOLD (mpi4py.MPI.Pickle attribute): mpi4py MPI Pickle.
                                                             (line  100)
* to_numpy_dtype() (in module mpi4py.util.dtlib): mpi4py util dtlib.
                                                             (line   21)
* tobytes() (mpi4py.MPI.buffer method):  mpi4py MPI buffer.  (line  135)
* tocode() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  769)
* tomemory() (mpi4py.MPI.Win method):    mpi4py MPI Win.     (line  836)
* topo (mpi4py.MPI.Cartcomm attribute):  mpi4py MPI Cartcomm.
                                                             (line  148)
* topo (mpi4py.MPI.Graphcomm attribute): mpi4py MPI Graphcomm.
                                                             (line  130)
* Topocomm (class in mpi4py.MPI):        mpi4py MPI Topocomm.
                                                             (line    6)
* topology (mpi4py.MPI.Comm attribute):  mpi4py MPI Comm.    (line 2549)
* toreadonly() (mpi4py.MPI.buffer method): mpi4py MPI buffer.
                                                             (line  145)
* Translate_ranks() (mpi4py.MPI.Group method): mpi4py MPI Group.
                                                             (line  214)
* true_extent (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  820)
* true_lb (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  824)
* true_ub (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  828)
* TWOINT (in module mpi4py.MPI):         mpi4py MPI TWOINT.  (line    6)
* typechar (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  832)
* TYPECLASS_COMPLEX (in module mpi4py.MPI): mpi4py MPI TYPECLASS_COMPLEX.
                                                             (line    6)
* TYPECLASS_INTEGER (in module mpi4py.MPI): mpi4py MPI TYPECLASS_INTEGER.
                                                             (line    6)
* TYPECLASS_REAL (in module mpi4py.MPI): mpi4py MPI TYPECLASS_REAL.
                                                             (line    6)
* TypeSpec (in module mpi4py.typing):    mpi4py typing.      (line  145)
* typestr (mpi4py.MPI.Datatype attribute): mpi4py MPI Datatype.
                                                             (line  836)
* U (in module mpi4py.typing):           mpi4py typing.      (line  311)
* ub (mpi4py.MPI.Datatype attribute):    mpi4py MPI Datatype.
                                                             (line  840)
* UINT16_T (in module mpi4py.MPI):       mpi4py MPI UINT16_T.
                                                             (line    6)
* UINT32_T (in module mpi4py.MPI):       mpi4py MPI UINT32_T.
                                                             (line    6)
* UINT64_T (in module mpi4py.MPI):       mpi4py MPI UINT64_T.
                                                             (line    6)
* UINT8_T (in module mpi4py.MPI):        mpi4py MPI UINT8_T. (line    6)
* UNDEFINED (in module mpi4py.MPI):      mpi4py MPI UNDEFINED.
                                                             (line    6)
* UNEQUAL (in module mpi4py.MPI):        mpi4py MPI UNEQUAL. (line    6)
* Union() (mpi4py.MPI.Group class method): mpi4py MPI Group. (line  228)
* UNIVERSE_SIZE (in module mpi4py.MPI):  mpi4py MPI UNIVERSE_SIZE.
                                                             (line    6)
* Unlock_all() (mpi4py.MPI.Win method):  mpi4py MPI Win.     (line  792)
* Unlock() (mpi4py.MPI.Win method):      mpi4py MPI Win.     (line  782)
* Unpack_external() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  700)
* Unpack() (mpi4py.MPI.Datatype method): mpi4py MPI Datatype.
                                                             (line  682)
* Unpublish_name() (in module mpi4py.MPI): mpi4py MPI Unpublish_name.
                                                             (line    6)
* UNSIGNED (in module mpi4py.MPI):       mpi4py MPI UNSIGNED.
                                                             (line    6)
* UNSIGNED_CHAR (in module mpi4py.MPI):  mpi4py MPI UNSIGNED_CHAR.
                                                             (line    6)
* UNSIGNED_INT (in module mpi4py.MPI):   mpi4py MPI UNSIGNED_INT.
                                                             (line    6)
* UNSIGNED_LONG (in module mpi4py.MPI):  mpi4py MPI UNSIGNED_LONG.
                                                             (line    6)
* UNSIGNED_LONG_LONG (in module mpi4py.MPI): mpi4py MPI UNSIGNED_LONG_LONG.
                                                             (line    6)
* UNSIGNED_SHORT (in module mpi4py.MPI): mpi4py MPI UNSIGNED_SHORT.
                                                             (line    6)
* UNWEIGHTED (in module mpi4py.MPI):     mpi4py MPI UNWEIGHTED.
                                                             (line    6)
* update() (mpi4py.MPI.Info method):     mpi4py MPI Info.    (line  276)
* V (in module mpi4py.typing):           mpi4py typing.      (line  315)
* values() (mpi4py.MPI.Info method):     mpi4py MPI Info.    (line  292)
* VERSION (in module mpi4py.MPI):        mpi4py MPI VERSION. (line    6)
* wait_for() (mpi4py.util.sync.Condition method): Condition variable.
                                                             (line   96)
* Wait() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  241)
* wait() (mpi4py.MPI.Request method):    mpi4py MPI Request. (line  435)
* Wait() (mpi4py.MPI.Win method):        mpi4py MPI Win.     (line  799)
* wait() (mpi4py.util.pkl5.Request method): mpi4py util pkl5.
                                                             (line   86)
* wait() (mpi4py.util.pool.AsyncResult method): mpi4py util pool.
                                                             (line  327)
* wait() (mpi4py.util.sync.Condition method): Condition variable.
                                                             (line   86)
* Waitall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  251)
* waitall() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  445)
* waitall() (mpi4py.util.pkl5.Request class method): mpi4py util pkl5.
                                                             (line  110)
* Waitany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  265)
* waitany() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  460)
* Waitsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  279)
* waitsome() (mpi4py.MPI.Request class method): mpi4py MPI Request.
                                                             (line  474)
* WCHAR (in module mpi4py.MPI):          mpi4py MPI WCHAR.   (line    6)
* WEIGHTS_EMPTY (in module mpi4py.MPI):  mpi4py MPI WEIGHTS_EMPTY.
                                                             (line    6)
* Win (class in mpi4py.MPI):             mpi4py MPI Win.     (line    6)
* WIN_BASE (in module mpi4py.MPI):       mpi4py MPI WIN_BASE.
                                                             (line    6)
* WIN_CREATE_FLAVOR (in module mpi4py.MPI): mpi4py MPI WIN_CREATE_FLAVOR.
                                                             (line    6)
* WIN_DISP_UNIT (in module mpi4py.MPI):  mpi4py MPI WIN_DISP_UNIT.
                                                             (line    6)
* WIN_FLAVOR (in module mpi4py.MPI):     mpi4py MPI WIN_FLAVOR.
                                                             (line    6)
* WIN_FLAVOR_ALLOCATE (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_ALLOCATE.
                                                             (line    6)
* WIN_FLAVOR_CREATE (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_CREATE.
                                                             (line    6)
* WIN_FLAVOR_DYNAMIC (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_DYNAMIC.
                                                             (line    6)
* WIN_FLAVOR_SHARED (in module mpi4py.MPI): mpi4py MPI WIN_FLAVOR_SHARED.
                                                             (line    6)
* WIN_MODEL (in module mpi4py.MPI):      mpi4py MPI WIN_MODEL.
                                                             (line    6)
* WIN_NULL (in module mpi4py.MPI):       mpi4py MPI WIN_NULL.
                                                             (line    6)
* WIN_SEPARATE (in module mpi4py.MPI):   mpi4py MPI WIN_SEPARATE.
                                                             (line    6)
* WIN_SIZE (in module mpi4py.MPI):       mpi4py MPI WIN_SIZE.
                                                             (line    6)
* WIN_UNIFIED (in module mpi4py.MPI):    mpi4py MPI WIN_UNIFIED.
                                                             (line    6)
* Write_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  819)
* Write_all_end() (mpi4py.MPI.File method): mpi4py MPI File. (line  829)
* Write_all() (mpi4py.MPI.File method):  mpi4py MPI File.    (line  805)
* Write_at_all_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  876)
* Write_at_all_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  890)
* Write_at_all() (mpi4py.MPI.File method): mpi4py MPI File.  (line  860)
* Write_at() (mpi4py.MPI.File method):   mpi4py MPI File.    (line  844)
* Write_ordered_begin() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  918)
* Write_ordered_end() (mpi4py.MPI.File method): mpi4py MPI File.
                                                             (line  928)
* Write_ordered() (mpi4py.MPI.File method): mpi4py MPI File. (line  904)
* Write_shared() (mpi4py.MPI.File method): mpi4py MPI File.  (line  942)
* Write() (mpi4py.MPI.File method):      mpi4py MPI File.    (line  791)
* Wtick() (in module mpi4py.MPI):        mpi4py MPI Wtick.   (line    6)
* WTIME_IS_GLOBAL (in module mpi4py.MPI): mpi4py MPI WTIME_IS_GLOBAL.
                                                             (line    6)
* Wtime() (in module mpi4py.MPI):        mpi4py MPI Wtime.   (line    6)

       



Tag Table:
Node: Top322
Ref: index doc523
Ref: b523
Node: Introduction23002
Ref: intro doc23083
Ref: c23083
Ref: intro introduction23083
Ref: d23083
Ref: intro mpi-for-python23083
Ref: e23083
Ref: Introduction-Footnote-125163
Ref: Introduction-Footnote-225196
Node: What is MPI?25260
Ref: intro what-is-mpi25345
Ref: f25345
Ref: What is MPI?-Footnote-126161
Ref: What is MPI?-Footnote-226196
Ref: What is MPI?-Footnote-326227
Node: What is Python?26261
Ref: intro what-is-python26371
Ref: 1626371
Ref: What is Python?-Footnote-127651
Node: Related Projects27683
Ref: intro related-projects27772
Ref: 1927772
Ref: intro mpi-std131422
Ref: 1231422
Ref: intro mpi-std231585
Ref: 1331585
Ref: intro mpi-using31736
Ref: 1031736
Ref: intro mpi-ref31894
Ref: 1131894
Ref: intro mpi-mpich32070
Ref: 1432070
Ref: intro mpi-openmpi32272
Ref: 1532272
Ref: intro hinsen9732710
Ref: 1732710
Ref: intro beazley9732931
Ref: 1832931
Ref: Related Projects-Footnote-133175
Ref: Related Projects-Footnote-233277
Ref: Related Projects-Footnote-333322
Ref: Related Projects-Footnote-433370
Ref: Related Projects-Footnote-533429
Ref: Related Projects-Footnote-633456
Ref: Related Projects-Footnote-733483
Ref: Related Projects-Footnote-833511
Node: Overview33541
Ref: overview doc33627
Ref: 1a33627
Ref: overview overview33627
Ref: 1b33627
Node: Communicating Python Objects and Array Data34303
Ref: overview communicating-python-objects-and-array-data34413
Ref: 1c34413
Ref: Communicating Python Objects and Array Data-Footnote-136961
Ref: Communicating Python Objects and Array Data-Footnote-237029
Ref: Communicating Python Objects and Array Data-Footnote-337099
Node: Communicators37167
Ref: overview communicators37315
Ref: 1d37315
Node: Point-to-Point Communications39112
Ref: overview point-to-point-communications39242
Ref: 3839242
Node: Blocking Communications40149
Ref: overview blocking-communications40273
Ref: 3940273
Node: Nonblocking Communications40961
Ref: overview nonblocking-communications41119
Ref: 4041119
Node: Persistent Communications42452
Ref: overview persistent-communications42578
Ref: 4742578
Node: Collective Communications43540
Ref: overview collective-communications43682
Ref: 4c43682
Node: Support for GPU-aware MPI45935
Ref: overview support-for-gpu-aware-mpi46074
Ref: 6846074
Ref: Support for GPU-aware MPI-Footnote-147193
Ref: Support for GPU-aware MPI-Footnote-247219
Ref: Support for GPU-aware MPI-Footnote-347253
Ref: Support for GPU-aware MPI-Footnote-447282
Ref: Support for GPU-aware MPI-Footnote-547328
Ref: Support for GPU-aware MPI-Footnote-647402
Node: Dynamic Process Management47502
Ref: overview dynamic-process-management47640
Ref: 6a47640
Node: One-Sided Communications50030
Ref: overview one-sided-communications50164
Ref: 7550164
Node: Parallel Input/Output52644
Ref: overview parallel-input-output52776
Ref: 8352776
Node: Environmental Management55784
Ref: overview environmental-management55883
Ref: 8a55883
Node: Initialization and Exit56041
Ref: overview initialization-and-exit56160
Ref: 8b56160
Ref: Initialization and Exit-Footnote-157237
Node: Implementation Information57298
Ref: overview implementation-information57432
Ref: 9157432
Node: Timers57949
Ref: overview timers58074
Ref: 9558074
Node: Error Handling58203
Ref: overview error-handling58293
Ref: 9858293
Ref: Error Handling-Footnote-159776
Ref: Error Handling-Footnote-259847
Node: Tutorial59915
Ref: tutorial doc59995
Ref: 6959995
Ref: tutorial id159995
Ref: 9f59995
Ref: tutorial tutorial59995
Ref: a059995
Ref: Tutorial-Footnote-165342
Ref: Tutorial-Footnote-265395
Ref: Tutorial-Footnote-365424
Ref: Tutorial-Footnote-465503
Ref: Tutorial-Footnote-565573
Ref: Tutorial-Footnote-665606
Ref: Tutorial-Footnote-765648
Ref: Tutorial-Footnote-865696
Ref: Tutorial-Footnote-965758
Ref: Tutorial-Footnote-1065829
Ref: Tutorial-Footnote-1165909
Node: Running Python scripts with MPI65978
Ref: tutorial running-python-scripts-with-mpi66091
Ref: a966091
Node: Point-to-Point Communication66353
Ref: tutorial point-to-point-communication66499
Ref: aa66499
Ref: Point-to-Point Communication-Footnote-168124
Node: Collective Communication68192
Ref: tutorial collective-communication68326
Ref: ab68326
Node: Input/Output MPI-IO71286
Ref: tutorial input-output-mpi-io71421
Ref: ac71421
Node: Dynamic Process Management<2>72653
Ref: tutorial dynamic-process-management72797
Ref: ad72797
Node: GPU-aware MPI + Python GPU arrays74087
Ref: tutorial gpu-aware-mpi-python-gpu-arrays74239
Ref: ae74239
Node: One-Sided Communication RMA74748
Ref: tutorial one-sided-communication-rma74889
Ref: af74889
Node: Wrapping with SWIG76904
Ref: tutorial wrapping-with-swig77030
Ref: b077030
Node: Wrapping with F2Py77910
Ref: tutorial wrapping-with-f2py78000
Ref: b178000
Node: mpi4py78775
Ref: mpi4py doc78857
Ref: b278857
Ref: mpi4py module-mpi4py78857
Ref: 078857
Ref: mpi4py mpi4py78857
Ref: b378857
Node: Runtime configuration options79735
Ref: mpi4py runtime-configuration-options79837
Ref: b479837
Ref: mpi4py mpi4py mpi4py rc79906
Ref: b579906
Ref: mpi4py mpi4py mpi4py rc initialize80930
Ref: b680930
Ref: mpi4py mpi4py mpi4py rc threads81125
Ref: b781125
Ref: mpi4py mpi4py mpi4py rc thread_level81318
Ref: b881318
Ref: mpi4py mpi4py mpi4py rc finalize81608
Ref: b981608
Ref: mpi4py mpi4py mpi4py rc fast_reduce81806
Ref: ba81806
Ref: mpi4py mpi4py mpi4py rc recv_mprobe82003
Ref: bb82003
Ref: mpi4py mpi4py mpi4py rc irecv_bufsz82201
Ref: bc82201
Ref: mpi4py mpi4py mpi4py rc errors82444
Ref: bd82444
Ref: Runtime configuration options-Footnote-183374
Ref: Runtime configuration options-Footnote-283436
Ref: Runtime configuration options-Footnote-383498
Ref: Runtime configuration options-Footnote-483560
Ref: Runtime configuration options-Footnote-583622
Ref: Runtime configuration options-Footnote-683682
Ref: Runtime configuration options-Footnote-783744
Ref: Runtime configuration options-Footnote-883806
Ref: Runtime configuration options-Footnote-983868
Ref: Runtime configuration options-Footnote-1083930
Ref: Runtime configuration options-Footnote-1183993
Ref: Runtime configuration options-Footnote-1284056
Ref: Runtime configuration options-Footnote-1384119
Ref: Runtime configuration options-Footnote-1484181
Node: Environment variables84242
Ref: mpi4py environment-variables84376
Ref: c684376
Ref: mpi4py envvar-MPI4PY_RC_INITIALIZE84823
Ref: be84823
Ref: mpi4py envvar-MPI4PY_RC_FINALIZE85115
Ref: c185115
Ref: mpi4py envvar-MPI4PY_RC_THREADS85441
Ref: bf85441
Ref: mpi4py envvar-MPI4PY_RC_THREAD_LEVEL85680
Ref: c085680
Ref: mpi4py envvar-MPI4PY_RC_FAST_REDUCE85993
Ref: c285993
Ref: mpi4py envvar-MPI4PY_RC_RECV_MPROBE86243
Ref: c386243
Ref: mpi4py envvar-MPI4PY_RC_IRECV_BUFSZ86463
Ref: c486463
Ref: mpi4py envvar-MPI4PY_RC_ERRORS86717
Ref: c586717
Ref: mpi4py envvar-MPI4PY_PICKLE_PROTOCOL87019
Ref: a687019
Ref: mpi4py envvar-MPI4PY_PICKLE_THRESHOLD87393
Ref: c787393
Ref: Environment variables-Footnote-187865
Ref: Environment variables-Footnote-287928
Ref: Environment variables-Footnote-387990
Ref: Environment variables-Footnote-488030
Ref: Environment variables-Footnote-588092
Ref: Environment variables-Footnote-688154
Ref: Environment variables-Footnote-788216
Ref: Environment variables-Footnote-888278
Ref: Environment variables-Footnote-988340
Ref: Environment variables-Footnote-1088402
Ref: Environment variables-Footnote-1188465
Ref: Environment variables-Footnote-1288529
Ref: Environment variables-Footnote-1388592
Ref: Environment variables-Footnote-1488655
Ref: Environment variables-Footnote-1588718
Ref: Environment variables-Footnote-1688781
Ref: Environment variables-Footnote-1788844
Ref: Environment variables-Footnote-1888907
Ref: Environment variables-Footnote-1988969
Ref: Environment variables-Footnote-2089031
Ref: Environment variables-Footnote-2189111
Node: Miscellaneous functions89173
Ref: mpi4py miscellaneous-functions89269
Ref: c989269
Ref: mpi4py mpi4py profile89326
Ref: ca89326
Ref: mpi4py mpi4py get_include89661
Ref: cb89661
Ref: mpi4py mpi4py get_config90118
Ref: cc90118
Ref: Miscellaneous functions-Footnote-190739
Ref: Miscellaneous functions-Footnote-290799
Ref: Miscellaneous functions-Footnote-390861
Ref: Miscellaneous functions-Footnote-490921
Ref: Miscellaneous functions-Footnote-590983
Ref: Miscellaneous functions-Footnote-691043
Ref: Miscellaneous functions-Footnote-791124
Ref: Miscellaneous functions-Footnote-891185
Ref: Miscellaneous functions-Footnote-991245
Node: mpi4py MPI91305
Ref: mpi4py MPI doc91392
Ref: cd91392
Ref: mpi4py MPI mpi4py-mpi91392
Ref: ce91392
Node: Classes91470
Ref: mpi4py MPI classes91542
Ref: cf91542
Node: Functions93330
Ref: mpi4py MPI functions93421
Ref: db93421
Node: Attributes97738
Ref: mpi4py MPI attributes97813
Ref: f497813
Ref: Attributes-Footnote-1126001
Ref: Attributes-Footnote-2126062
Ref: Attributes-Footnote-3126123
Ref: Attributes-Footnote-4126184
Ref: Attributes-Footnote-5126245
Ref: Attributes-Footnote-6126306
Ref: Attributes-Footnote-7126367
Ref: Attributes-Footnote-8126428
Ref: Attributes-Footnote-9126489
Ref: Attributes-Footnote-10126550
Ref: Attributes-Footnote-11126612
Ref: Attributes-Footnote-12126674
Ref: Attributes-Footnote-13126736
Ref: Attributes-Footnote-14126798
Ref: Attributes-Footnote-15126860
Ref: Attributes-Footnote-16126922
Ref: Attributes-Footnote-17126984
Ref: Attributes-Footnote-18127046
Ref: Attributes-Footnote-19127108
Ref: Attributes-Footnote-20127170
Ref: Attributes-Footnote-21127232
Ref: Attributes-Footnote-22127294
Ref: Attributes-Footnote-23127356
Ref: Attributes-Footnote-24127418
Ref: Attributes-Footnote-25127480
Ref: Attributes-Footnote-26127542
Ref: Attributes-Footnote-27127604
Ref: Attributes-Footnote-28127666
Ref: Attributes-Footnote-29127728
Ref: Attributes-Footnote-30127790
Ref: Attributes-Footnote-31127852
Ref: Attributes-Footnote-32127914
Ref: Attributes-Footnote-33127976
Ref: Attributes-Footnote-34128038
Ref: Attributes-Footnote-35128100
Ref: Attributes-Footnote-36128162
Ref: Attributes-Footnote-37128224
Ref: Attributes-Footnote-38128286
Ref: Attributes-Footnote-39128348
Ref: Attributes-Footnote-40128410
Ref: Attributes-Footnote-41128472
Ref: Attributes-Footnote-42128534
Ref: Attributes-Footnote-43128596
Ref: Attributes-Footnote-44128658
Ref: Attributes-Footnote-45128720
Ref: Attributes-Footnote-46128782
Ref: Attributes-Footnote-47128844
Ref: Attributes-Footnote-48128906
Ref: Attributes-Footnote-49128968
Ref: Attributes-Footnote-50129030
Ref: Attributes-Footnote-51129092
Ref: Attributes-Footnote-52129154
Ref: Attributes-Footnote-53129216
Ref: Attributes-Footnote-54129278
Ref: Attributes-Footnote-55129340
Ref: Attributes-Footnote-56129402
Ref: Attributes-Footnote-57129464
Ref: Attributes-Footnote-58129526
Ref: Attributes-Footnote-59129588
Ref: Attributes-Footnote-60129650
Ref: Attributes-Footnote-61129712
Ref: Attributes-Footnote-62129774
Ref: Attributes-Footnote-63129836
Ref: Attributes-Footnote-64129898
Ref: Attributes-Footnote-65129960
Ref: Attributes-Footnote-66130022
Ref: Attributes-Footnote-67130084
Ref: Attributes-Footnote-68130146
Ref: Attributes-Footnote-69130208
Ref: Attributes-Footnote-70130270
Ref: Attributes-Footnote-71130332
Ref: Attributes-Footnote-72130394
Ref: Attributes-Footnote-73130456
Ref: Attributes-Footnote-74130518
Ref: Attributes-Footnote-75130580
Ref: Attributes-Footnote-76130642
Ref: Attributes-Footnote-77130704
Ref: Attributes-Footnote-78130766
Ref: Attributes-Footnote-79130828
Ref: Attributes-Footnote-80130890
Ref: Attributes-Footnote-81130952
Ref: Attributes-Footnote-82131014
Ref: Attributes-Footnote-83131076
Ref: Attributes-Footnote-84131138
Ref: Attributes-Footnote-85131200
Ref: Attributes-Footnote-86131262
Ref: Attributes-Footnote-87131324
Ref: Attributes-Footnote-88131386
Ref: Attributes-Footnote-89131448
Ref: Attributes-Footnote-90131510
Ref: Attributes-Footnote-91131572
Ref: Attributes-Footnote-92131634
Ref: Attributes-Footnote-93131696
Ref: Attributes-Footnote-94131758
Ref: Attributes-Footnote-95131820
Ref: Attributes-Footnote-96131882
Ref: Attributes-Footnote-97131944
Ref: Attributes-Footnote-98132006
Ref: Attributes-Footnote-99132068
Ref: Attributes-Footnote-100132130
Ref: Attributes-Footnote-101132193
Ref: Attributes-Footnote-102132256
Ref: Attributes-Footnote-103132319
Ref: Attributes-Footnote-104132382
Ref: Attributes-Footnote-105132445
Ref: Attributes-Footnote-106132508
Ref: Attributes-Footnote-107132571
Ref: Attributes-Footnote-108132634
Ref: Attributes-Footnote-109132697
Ref: Attributes-Footnote-110132760
Ref: Attributes-Footnote-111132823
Ref: Attributes-Footnote-112132886
Ref: Attributes-Footnote-113132949
Ref: Attributes-Footnote-114133012
Ref: Attributes-Footnote-115133075
Ref: Attributes-Footnote-116133138
Ref: Attributes-Footnote-117133201
Ref: Attributes-Footnote-118133264
Ref: Attributes-Footnote-119133327
Ref: Attributes-Footnote-120133390
Ref: Attributes-Footnote-121133453
Ref: Attributes-Footnote-122133516
Ref: Attributes-Footnote-123133579
Ref: Attributes-Footnote-124133642
Ref: Attributes-Footnote-125133705
Ref: Attributes-Footnote-126133768
Ref: Attributes-Footnote-127133831
Ref: Attributes-Footnote-128133894
Ref: Attributes-Footnote-129133957
Ref: Attributes-Footnote-130134020
Ref: Attributes-Footnote-131134083
Ref: Attributes-Footnote-132134146
Ref: Attributes-Footnote-133134209
Ref: Attributes-Footnote-134134272
Ref: Attributes-Footnote-135134335
Ref: Attributes-Footnote-136134398
Ref: Attributes-Footnote-137134461
Ref: Attributes-Footnote-138134524
Ref: Attributes-Footnote-139134587
Ref: Attributes-Footnote-140134650
Ref: Attributes-Footnote-141134713
Ref: Attributes-Footnote-142134776
Ref: Attributes-Footnote-143134839
Ref: Attributes-Footnote-144134902
Ref: Attributes-Footnote-145134965
Ref: Attributes-Footnote-146135028
Ref: Attributes-Footnote-147135091
Ref: Attributes-Footnote-148135154
Ref: Attributes-Footnote-149135217
Ref: Attributes-Footnote-150135280
Ref: Attributes-Footnote-151135343
Ref: Attributes-Footnote-152135406
Ref: Attributes-Footnote-153135469
Ref: Attributes-Footnote-154135532
Ref: Attributes-Footnote-155135595
Ref: Attributes-Footnote-156135658
Ref: Attributes-Footnote-157135721
Node: mpi4py typing135784
Ref: mpi4py typing doc135879
Ref: 205135879
Ref: mpi4py typing module-mpi4py typing135879
Ref: 5135879
Ref: mpi4py typing mpi4py-typing135879
Ref: 206135879
Ref: mpi4py typing mpi4py typing SupportsBuffer137497
Ref: 207137497
Ref: mpi4py typing mpi4py typing SupportsDLPack137672
Ref: 208137672
Ref: mpi4py typing mpi4py typing SupportsCAI137873
Ref: 209137873
Ref: mpi4py typing mpi4py typing Buffer138072
Ref: 20a138072
Ref: mpi4py typing mpi4py typing Bottom138232
Ref: 20b138232
Ref: mpi4py typing mpi4py typing InPlace138345
Ref: 20c138345
Ref: mpi4py typing mpi4py typing Aint138458
Ref: 20d138458
Ref: mpi4py typing mpi4py typing Count138588
Ref: 20e138588
Ref: mpi4py typing mpi4py typing Displ138716
Ref: 20f138716
Ref: mpi4py typing mpi4py typing Offset138851
Ref: 210138851
Ref: mpi4py typing mpi4py typing TypeSpec138981
Ref: 211138981
Ref: mpi4py typing mpi4py typing BufSpec139090
Ref: 212139090
Ref: mpi4py typing mpi4py typing BufSpecB140075
Ref: 213140075
Ref: mpi4py typing mpi4py typing BufSpecV140898
Ref: 214140898
Ref: mpi4py typing mpi4py typing BufSpecW143259
Ref: 215143259
Ref: mpi4py typing mpi4py typing TargetSpec144865
Ref: 216144865
Ref: mpi4py typing mpi4py typing S145368
Ref: 217145368
Ref: mpi4py typing mpi4py typing T145440
Ref: 218145440
Ref: mpi4py typing mpi4py typing U145512
Ref: 219145512
Ref: mpi4py typing mpi4py typing V145584
Ref: 21a145584
Ref: mpi4py typing-Footnote-1145692
Ref: mpi4py typing-Footnote-2145756
Ref: mpi4py typing-Footnote-3145819
Ref: mpi4py typing-Footnote-4145887
Ref: mpi4py typing-Footnote-5145955
Ref: mpi4py typing-Footnote-6146021
Ref: mpi4py typing-Footnote-7146095
Ref: mpi4py typing-Footnote-8146195
Ref: mpi4py typing-Footnote-9146257
Ref: mpi4py typing-Footnote-10146319
Ref: mpi4py typing-Footnote-11146392
Ref: mpi4py typing-Footnote-12146465
Ref: mpi4py typing-Footnote-13146538
Ref: mpi4py typing-Footnote-14146611
Ref: mpi4py typing-Footnote-15146672
Ref: mpi4py typing-Footnote-16146740
Ref: mpi4py typing-Footnote-17146813
Ref: mpi4py typing-Footnote-18146881
Ref: mpi4py typing-Footnote-19146942
Ref: mpi4py typing-Footnote-20147010
Ref: mpi4py typing-Footnote-21147083
Ref: mpi4py typing-Footnote-22147144
Ref: mpi4py typing-Footnote-23147212
Ref: mpi4py typing-Footnote-24147275
Ref: mpi4py typing-Footnote-25147348
Ref: mpi4py typing-Footnote-26147415
Ref: mpi4py typing-Footnote-27147481
Ref: mpi4py typing-Footnote-28147549
Ref: mpi4py typing-Footnote-29147622
Ref: mpi4py typing-Footnote-30147690
Ref: mpi4py typing-Footnote-31147751
Ref: mpi4py typing-Footnote-32147819
Ref: mpi4py typing-Footnote-33147892
Ref: mpi4py typing-Footnote-34147953
Ref: mpi4py typing-Footnote-35148020
Ref: mpi4py typing-Footnote-36148086
Ref: mpi4py typing-Footnote-37148154
Ref: mpi4py typing-Footnote-38148225
Ref: mpi4py typing-Footnote-39148298
Ref: mpi4py typing-Footnote-40148366
Ref: mpi4py typing-Footnote-41148434
Ref: mpi4py typing-Footnote-42148505
Ref: mpi4py typing-Footnote-43148578
Ref: mpi4py typing-Footnote-44148649
Ref: mpi4py typing-Footnote-45148722
Ref: mpi4py typing-Footnote-46148790
Ref: mpi4py typing-Footnote-47148851
Ref: mpi4py typing-Footnote-48148919
Ref: mpi4py typing-Footnote-49148990
Ref: mpi4py typing-Footnote-50149063
Ref: mpi4py typing-Footnote-51149124
Ref: mpi4py typing-Footnote-52149192
Ref: mpi4py typing-Footnote-53149260
Ref: mpi4py typing-Footnote-54149331
Ref: mpi4py typing-Footnote-55149404
Ref: mpi4py typing-Footnote-56149475
Ref: mpi4py typing-Footnote-57149548
Ref: mpi4py typing-Footnote-58149609
Ref: mpi4py typing-Footnote-59149677
Ref: mpi4py typing-Footnote-60149748
Ref: mpi4py typing-Footnote-61149821
Ref: mpi4py typing-Footnote-62149892
Ref: mpi4py typing-Footnote-63149965
Ref: mpi4py typing-Footnote-64150026
Ref: mpi4py typing-Footnote-65150094
Ref: mpi4py typing-Footnote-66150157
Ref: mpi4py typing-Footnote-67150225
Ref: mpi4py typing-Footnote-68150296
Ref: mpi4py typing-Footnote-69150369
Ref: mpi4py typing-Footnote-70150440
Ref: mpi4py typing-Footnote-71150513
Ref: mpi4py typing-Footnote-72150581
Ref: mpi4py typing-Footnote-73150644
Ref: mpi4py typing-Footnote-74150715
Ref: mpi4py typing-Footnote-75150788
Ref: mpi4py typing-Footnote-76150859
Ref: mpi4py typing-Footnote-77150932
Ref: mpi4py typing-Footnote-78150999
Ref: mpi4py typing-Footnote-79151065
Ref: mpi4py typing-Footnote-80151133
Ref: mpi4py typing-Footnote-81151204
Ref: mpi4py typing-Footnote-82151272
Ref: mpi4py typing-Footnote-83151340
Ref: mpi4py typing-Footnote-84151411
Ref: mpi4py typing-Footnote-85151484
Ref: mpi4py typing-Footnote-86151555
Ref: mpi4py typing-Footnote-87151628
Ref: mpi4py typing-Footnote-88151699
Ref: mpi4py typing-Footnote-89151767
Ref: mpi4py typing-Footnote-90151838
Ref: mpi4py typing-Footnote-91151911
Ref: mpi4py typing-Footnote-92151982
Ref: mpi4py typing-Footnote-93152055
Ref: mpi4py typing-Footnote-94152126
Ref: mpi4py typing-Footnote-95152194
Ref: mpi4py typing-Footnote-96152257
Ref: mpi4py typing-Footnote-97152325
Ref: mpi4py typing-Footnote-98152396
Ref: mpi4py typing-Footnote-99152469
Ref: mpi4py typing-Footnote-100152540
Ref: mpi4py typing-Footnote-101152614
Ref: mpi4py typing-Footnote-102152686
Ref: mpi4py typing-Footnote-103152755
Ref: mpi4py typing-Footnote-104152819
Ref: mpi4py typing-Footnote-105152891
Ref: mpi4py typing-Footnote-106152965
Ref: mpi4py typing-Footnote-107153037
Ref: mpi4py typing-Footnote-108153111
Ref: mpi4py typing-Footnote-109153183
Ref: mpi4py typing-Footnote-110153251
Ref: mpi4py typing-Footnote-111153318
Ref: mpi4py typing-Footnote-112153392
Ref: mpi4py typing-Footnote-113153461
Ref: mpi4py typing-Footnote-114153530
Ref: mpi4py typing-Footnote-115153604
Ref: mpi4py typing-Footnote-116153673
Ref: mpi4py typing-Footnote-117153747
Ref: mpi4py typing-Footnote-118153821
Ref: mpi4py typing-Footnote-119153890
Ref: mpi4py typing-Footnote-120153964
Ref: mpi4py typing-Footnote-121154038
Ref: mpi4py typing-Footnote-122154100
Ref: mpi4py typing-Footnote-123154168
Ref: mpi4py typing-Footnote-124154235
Ref: mpi4py typing-Footnote-125154306
Ref: mpi4py typing-Footnote-126154377
Ref: mpi4py typing-Footnote-127154448
Node: mpi4py futures154519
Ref: mpi4py futures doc154615
Ref: 21b154615
Ref: mpi4py futures module-mpi4py futures154615
Ref: 2154615
Ref: mpi4py futures mpi4py-futures154615
Ref: 21c154615
Ref: mpi4py futures-Footnote-1155684
Ref: mpi4py futures-Footnote-2155777
Ref: mpi4py futures-Footnote-3155872
Ref: mpi4py futures-Footnote-4155974
Ref: mpi4py futures-Footnote-5156067
Ref: mpi4py futures-Footnote-6156160
Ref: mpi4py futures-Footnote-7156253
Ref: mpi4py futures-Footnote-8156344
Ref: mpi4py futures-Footnote-9156443
Ref: mpi4py futures-Footnote-10156536
Node: MPIPoolExecutor156630
Ref: mpi4py futures mpipoolexecutor156720
Ref: 21e156720
Ref: mpi4py futures mpi4py futures MPIPoolExecutor158992
Ref: 21d158992
Ref: mpi4py futures mpi4py futures MPIPoolExecutor submit163331
Ref: 222163331
Ref: mpi4py futures mpi4py futures MPIPoolExecutor map163716
Ref: 223163716
Ref: mpi4py futures mpi4py futures MPIPoolExecutor starmap165375
Ref: 224165375
Ref: mpi4py futures mpi4py futures MPIPoolExecutor shutdown166025
Ref: 225166025
Ref: mpi4py futures mpi4py futures MPIPoolExecutor bootup167628
Ref: 226167628
Ref: mpi4py futures mpi4py futures MPIPoolExecutor num_workers168122
Ref: 227168122
Ref: mpi4py futures envvar-MPI4PY_FUTURES_MAX_WORKERS168206
Ref: 21f168206
Ref: mpi4py futures envvar-MPI4PY_FUTURES_USE_PKL5168546
Ref: 220168546
Ref: mpi4py futures envvar-MPI4PY_FUTURES_BACKOFF169317
Ref: 221169317
Ref: MPIPoolExecutor-Footnote-1171246
Ref: MPIPoolExecutor-Footnote-2171324
Ref: MPIPoolExecutor-Footnote-3171396
Ref: MPIPoolExecutor-Footnote-4171468
Ref: MPIPoolExecutor-Footnote-5171534
Ref: MPIPoolExecutor-Footnote-6171606
Ref: MPIPoolExecutor-Footnote-7171678
Ref: MPIPoolExecutor-Footnote-8171741
Ref: MPIPoolExecutor-Footnote-9171836
Ref: MPIPoolExecutor-Footnote-10171898
Ref: MPIPoolExecutor-Footnote-11171968
Ref: MPIPoolExecutor-Footnote-12172070
Ref: MPIPoolExecutor-Footnote-13172137
Ref: MPIPoolExecutor-Footnote-14172199
Ref: MPIPoolExecutor-Footnote-15172261
Ref: MPIPoolExecutor-Footnote-16172329
Ref: MPIPoolExecutor-Footnote-17172395
Ref: MPIPoolExecutor-Footnote-18172457
Ref: MPIPoolExecutor-Footnote-19172519
Ref: MPIPoolExecutor-Footnote-20172583
Ref: MPIPoolExecutor-Footnote-21172656
Ref: MPIPoolExecutor-Footnote-22172720
Ref: MPIPoolExecutor-Footnote-23172793
Ref: MPIPoolExecutor-Footnote-24172855
Ref: MPIPoolExecutor-Footnote-25172916
Ref: MPIPoolExecutor-Footnote-26172988
Ref: MPIPoolExecutor-Footnote-27173048
Ref: MPIPoolExecutor-Footnote-28173110
Ref: MPIPoolExecutor-Footnote-29173172
Ref: MPIPoolExecutor-Footnote-30173235
Ref: MPIPoolExecutor-Footnote-31173298
Ref: MPIPoolExecutor-Footnote-32173362
Ref: MPIPoolExecutor-Footnote-33173426
Ref: MPIPoolExecutor-Footnote-34173520
Ref: MPIPoolExecutor-Footnote-35173582
Ref: MPIPoolExecutor-Footnote-36173682
Ref: MPIPoolExecutor-Footnote-37173758
Ref: MPIPoolExecutor-Footnote-38173821
Ref: MPIPoolExecutor-Footnote-39173884
Ref: MPIPoolExecutor-Footnote-40173961
Ref: MPIPoolExecutor-Footnote-41174033
Ref: MPIPoolExecutor-Footnote-42174096
Ref: MPIPoolExecutor-Footnote-43174160
Ref: MPIPoolExecutor-Footnote-44174223
Ref: MPIPoolExecutor-Footnote-45174293
Ref: MPIPoolExecutor-Footnote-46174356
Ref: MPIPoolExecutor-Footnote-47174419
Ref: MPIPoolExecutor-Footnote-48174482
Ref: MPIPoolExecutor-Footnote-49174545
Ref: MPIPoolExecutor-Footnote-50174609
Ref: MPIPoolExecutor-Footnote-51174672
Ref: MPIPoolExecutor-Footnote-52174713
Ref: MPIPoolExecutor-Footnote-53174777
Ref: MPIPoolExecutor-Footnote-54174841
Node: MPICommExecutor174915
Ref: mpi4py futures mpicommexecutor175026
Ref: 228175026
Ref: mpi4py futures mpi4py futures MPICommExecutor176412
Ref: 229176412
Ref: MPICommExecutor-Footnote-1178318
Ref: MPICommExecutor-Footnote-2178380
Ref: MPICommExecutor-Footnote-3178449
Ref: MPICommExecutor-Footnote-4178511
Ref: MPICommExecutor-Footnote-5178580
Ref: MPICommExecutor-Footnote-6178637
Ref: MPICommExecutor-Footnote-7178694
Node: Command line178799
Ref: mpi4py futures command-line178909
Ref: 22a178909
Ref: Command line-Footnote-1181767
Ref: Command line-Footnote-2181828
Node: Parallel tasks181898
Ref: mpi4py futures parallel-tasks182002
Ref: 22b182002
Ref: mpi4py futures mpi4py futures get_comm_workers182407
Ref: 22c182407
Ref: Parallel tasks-Footnote-1183681
Ref: Parallel tasks-Footnote-2183774
Ref: Parallel tasks-Footnote-3183865
Node: Utilities183958
Ref: mpi4py futures utilities184058
Ref: 22f184058
Ref: mpi4py futures mpi4py futures collect184189
Ref: 230184189
Ref: mpi4py futures mpi4py futures compose184424
Ref: 231184424
Ref: Utilities-Footnote-1185892
Ref: Utilities-Footnote-2185985
Node: Examples186053
Ref: mpi4py futures examples186147
Ref: 232186147
Node: Computing the Julia set186272
Ref: mpi4py futures computing-the-julia-set186375
Ref: 233186375
Ref: Computing the Julia set-Footnote-1190208
Ref: Computing the Julia set-Footnote-2190256
Ref: Computing the Julia set-Footnote-3190308
Ref: Computing the Julia set-Footnote-4190507
Node: Computing Pi parallel task190577
Ref: mpi4py futures computing-pi-parallel-task190680
Ref: 235190680
Node: Citation193343
Ref: mpi4py futures citation193419
Ref: 236193419
Ref: mpi4py futures id4193634
Ref: 237193634
Node: mpi4py util193893
Ref: mpi4py util doc193986
Ref: 238193986
Ref: mpi4py util module-mpi4py util193986
Ref: 6193986
Ref: mpi4py util mpi4py-util193986
Ref: 239193986
Node: mpi4py util dtlib194315
Ref: mpi4py util dtlib doc194405
Ref: 23a194405
Ref: mpi4py util dtlib module-mpi4py util dtlib194405
Ref: 7194405
Ref: mpi4py util dtlib mpi4py-util-dtlib194405
Ref: 23b194405
Ref: mpi4py util dtlib mpi4py util dtlib from_numpy_dtype194576
Ref: 23c194576
Ref: mpi4py util dtlib mpi4py util dtlib to_numpy_dtype194795
Ref: 23d194795
Ref: mpi4py util dtlib-Footnote-1195047
Ref: mpi4py util dtlib-Footnote-2195130
Ref: mpi4py util dtlib-Footnote-3195217
Node: mpi4py util pkl5195282
Ref: mpi4py util pkl5 doc195397
Ref: 23e195397
Ref: mpi4py util pkl5 module-mpi4py util pkl5195397
Ref: 8195397
Ref: mpi4py util pkl5 mpi4py-util-pkl5195397
Ref: 23f195397
Ref: mpi4py util pkl5 mpi4py util pkl5 Request196935
Ref: 240196935
Ref: mpi4py util pkl5 mpi4py util pkl5 Request Free197144
Ref: 241197144
Ref: mpi4py util pkl5 mpi4py util pkl5 Request free197244
Ref: 242197244
Ref: mpi4py util pkl5 mpi4py util pkl5 Request cancel197344
Ref: 243197344
Ref: mpi4py util pkl5 mpi4py util pkl5 Request get_status197448
Ref: 244197448
Ref: mpi4py util pkl5 mpi4py util pkl5 Request test197662
Ref: 245197662
Ref: mpi4py util pkl5 mpi4py util pkl5 Request wait197887
Ref: 246197887
Ref: mpi4py util pkl5 mpi4py util pkl5 Request get_status_all198074
Ref: 247198074
Ref: mpi4py util pkl5 mpi4py util pkl5 Request testall198238
Ref: 248198238
Ref: mpi4py util pkl5 mpi4py util pkl5 Request waitall198379
Ref: 249198379
Ref: mpi4py util pkl5 mpi4py util pkl5 Message198514
Ref: 24a198514
Ref: mpi4py util pkl5 mpi4py util pkl5 Message free198712
Ref: 24b198712
Ref: mpi4py util pkl5 mpi4py util pkl5 Message recv198795
Ref: 24c198795
Ref: mpi4py util pkl5 mpi4py util pkl5 Message irecv198987
Ref: 24d198987
Ref: mpi4py util pkl5 mpi4py util pkl5 Message probe199110
Ref: 24e199110
Ref: mpi4py util pkl5 mpi4py util pkl5 Message iprobe199286
Ref: 24f199286
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm199466
Ref: 250199466
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm send199559
Ref: 251199559
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm bsend199811
Ref: 252199811
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm ssend200064
Ref: 253200064
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm isend200320
Ref: 254200320
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm ibsend200587
Ref: 255200587
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm issend200855
Ref: 256200855
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm recv201126
Ref: 257201126
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm irecv201507
Ref: 258201507
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm sendrecv201924
Ref: 259201924
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm mprobe202470
Ref: 25a202470
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm improbe202799
Ref: 25b202799
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm bcast203143
Ref: 25c203143
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm gather203368
Ref: 25d203368
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm scatter203620
Ref: 25e203620
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm allgather203896
Ref: 25f203896
Ref: mpi4py util pkl5 mpi4py util pkl5 Comm alltoall204086
Ref: 260204086
Ref: mpi4py util pkl5 mpi4py util pkl5 Intracomm204313
Ref: 261204313
Ref: mpi4py util pkl5 mpi4py util pkl5 Intercomm204416
Ref: 262204416
Ref: mpi4py util pkl5-Footnote-1204590
Ref: mpi4py util pkl5-Footnote-2204658
Ref: mpi4py util pkl5-Footnote-3204700
Ref: mpi4py util pkl5-Footnote-4204768
Ref: mpi4py util pkl5-Footnote-5204810
Ref: mpi4py util pkl5-Footnote-6204872
Ref: mpi4py util pkl5-Footnote-7204934
Ref: mpi4py util pkl5-Footnote-8204996
Ref: mpi4py util pkl5-Footnote-9205058
Ref: mpi4py util pkl5-Footnote-10205120
Ref: mpi4py util pkl5-Footnote-11205183
Ref: mpi4py util pkl5-Footnote-12205246
Ref: mpi4py util pkl5-Footnote-13205309
Ref: mpi4py util pkl5-Footnote-14205375
Ref: mpi4py util pkl5-Footnote-15205438
Ref: mpi4py util pkl5-Footnote-16205501
Ref: mpi4py util pkl5-Footnote-17205567
Ref: mpi4py util pkl5-Footnote-18205630
Ref: mpi4py util pkl5-Footnote-19205693
Ref: mpi4py util pkl5-Footnote-20205759
Ref: mpi4py util pkl5-Footnote-21205825
Ref: mpi4py util pkl5-Footnote-22205887
Ref: mpi4py util pkl5-Footnote-23205949
Ref: mpi4py util pkl5-Footnote-24206012
Ref: mpi4py util pkl5-Footnote-25206078
Ref: mpi4py util pkl5-Footnote-26206140
Ref: mpi4py util pkl5-Footnote-27206202
Ref: mpi4py util pkl5-Footnote-28206265
Ref: mpi4py util pkl5-Footnote-29206331
Ref: mpi4py util pkl5-Footnote-30206393
Ref: mpi4py util pkl5-Footnote-31206455
Ref: mpi4py util pkl5-Footnote-32206518
Ref: mpi4py util pkl5-Footnote-33206584
Ref: mpi4py util pkl5-Footnote-34206646
Ref: mpi4py util pkl5-Footnote-35206708
Ref: mpi4py util pkl5-Footnote-36206774
Ref: mpi4py util pkl5-Footnote-37206836
Ref: mpi4py util pkl5-Footnote-38206898
Ref: mpi4py util pkl5-Footnote-39206964
Ref: mpi4py util pkl5-Footnote-40207026
Ref: mpi4py util pkl5-Footnote-41207088
Ref: mpi4py util pkl5-Footnote-42207151
Ref: mpi4py util pkl5-Footnote-43207213
Ref: mpi4py util pkl5-Footnote-44207275
Ref: mpi4py util pkl5-Footnote-45207338
Ref: mpi4py util pkl5-Footnote-46207410
Ref: mpi4py util pkl5-Footnote-47207473
Ref: mpi4py util pkl5-Footnote-48207535
Ref: mpi4py util pkl5-Footnote-49207597
Ref: mpi4py util pkl5-Footnote-50207659
Ref: mpi4py util pkl5-Footnote-51207721
Ref: mpi4py util pkl5-Footnote-52207784
Ref: mpi4py util pkl5-Footnote-53207846
Ref: mpi4py util pkl5-Footnote-54207908
Ref: mpi4py util pkl5-Footnote-55207971
Ref: mpi4py util pkl5-Footnote-56208033
Ref: mpi4py util pkl5-Footnote-57208095
Ref: mpi4py util pkl5-Footnote-58208158
Ref: mpi4py util pkl5-Footnote-59208220
Ref: mpi4py util pkl5-Footnote-60208282
Ref: mpi4py util pkl5-Footnote-61208345
Ref: mpi4py util pkl5-Footnote-62208408
Ref: mpi4py util pkl5-Footnote-63208474
Ref: mpi4py util pkl5-Footnote-64208536
Ref: mpi4py util pkl5-Footnote-65208602
Ref: mpi4py util pkl5-Footnote-66208668
Ref: mpi4py util pkl5-Footnote-67208730
Ref: mpi4py util pkl5-Footnote-68208792
Ref: mpi4py util pkl5-Footnote-69208858
Ref: mpi4py util pkl5-Footnote-70208921
Ref: mpi4py util pkl5-Footnote-71208992
Ref: mpi4py util pkl5-Footnote-72209058
Ref: mpi4py util pkl5-Footnote-73209121
Ref: mpi4py util pkl5-Footnote-74209183
Ref: mpi4py util pkl5-Footnote-75209249
Ref: mpi4py util pkl5-Footnote-76209315
Ref: mpi4py util pkl5-Footnote-77209377
Ref: mpi4py util pkl5-Footnote-78209443
Ref: mpi4py util pkl5-Footnote-79209514
Ref: mpi4py util pkl5-Footnote-80209580
Ref: mpi4py util pkl5-Footnote-81209642
Node: Examples<2>209708
Ref: mpi4py util pkl5 examples209772
Ref: 263209772
Node: mpi4py util pool210995
Ref: mpi4py util pool doc211109
Ref: 264211109
Ref: mpi4py util pool module-mpi4py util pool211109
Ref: 9211109
Ref: mpi4py util pool mpi4py-util-pool211109
Ref: 265211109
Ref: mpi4py util pool mpi4py util pool Pool211668
Ref: 266211668
Ref: mpi4py util pool mpi4py util pool Pool __init__211745
Ref: 267211745
Ref: mpi4py util pool mpi4py util pool Pool apply212863
Ref: 268212863
Ref: mpi4py util pool mpi4py util pool Pool apply_async213352
Ref: 269213352
Ref: mpi4py util pool mpi4py util pool Pool map214169
Ref: 26c214169
Ref: mpi4py util pool mpi4py util pool Pool map_async215115
Ref: 26f215115
Ref: mpi4py util pool mpi4py util pool Pool imap215947
Ref: 26d215947
Ref: mpi4py util pool mpi4py util pool Pool imap_unordered216425
Ref: 26e216425
Ref: mpi4py util pool mpi4py util pool Pool starmap216872
Ref: 271216872
Ref: mpi4py util pool mpi4py util pool Pool starmap_async217862
Ref: 274217862
Ref: mpi4py util pool mpi4py util pool Pool istarmap218693
Ref: 272218693
Ref: mpi4py util pool mpi4py util pool Pool istarmap_unordered219194
Ref: 273219194
Ref: mpi4py util pool mpi4py util pool Pool close219660
Ref: 275219660
Ref: mpi4py util pool mpi4py util pool Pool terminate219789
Ref: 276219789
Ref: mpi4py util pool mpi4py util pool Pool join219925
Ref: 277219925
Ref: mpi4py util pool mpi4py util pool ThreadPool220035
Ref: 278220035
Ref: mpi4py util pool mpi4py util pool AsyncResult220142
Ref: 26b220142
Ref: mpi4py util pool mpi4py util pool AsyncResult get220210
Ref: 279220210
Ref: mpi4py util pool mpi4py util pool AsyncResult wait220632
Ref: 27a220632
Ref: mpi4py util pool mpi4py util pool AsyncResult ready220844
Ref: 27b220844
Ref: mpi4py util pool mpi4py util pool AsyncResult successful220955
Ref: 27c220955
Ref: mpi4py util pool mpi4py util pool ApplyResult221171
Ref: 26a221171
Ref: mpi4py util pool mpi4py util pool MapResult221296
Ref: 270221296
Ref: mpi4py util pool-Footnote-1221490
Ref: mpi4py util pool-Footnote-2221582
Ref: mpi4py util pool-Footnote-3221643
Ref: mpi4py util pool-Footnote-4221705
Ref: mpi4py util pool-Footnote-5221775
Ref: mpi4py util pool-Footnote-6221839
Ref: mpi4py util pool-Footnote-7221901
Ref: mpi4py util pool-Footnote-8221971
Ref: mpi4py util pool-Footnote-9222036
Ref: mpi4py util pool-Footnote-10222101
Ref: mpi4py util pool-Footnote-11222164
Ref: mpi4py util pool-Footnote-12222255
Ref: mpi4py util pool-Footnote-13222318
Ref: mpi4py util pool-Footnote-14222389
Ref: mpi4py util pool-Footnote-15222460
Ref: mpi4py util pool-Footnote-16222531
Ref: mpi4py util pool-Footnote-17222597
Ref: mpi4py util pool-Footnote-18222667
Ref: mpi4py util pool-Footnote-19222728
Ref: mpi4py util pool-Footnote-20222794
Ref: mpi4py util pool-Footnote-21222855
Ref: mpi4py util pool-Footnote-22222920
Ref: mpi4py util pool-Footnote-23222983
Ref: mpi4py util pool-Footnote-24223056
Ref: mpi4py util pool-Footnote-25223121
Ref: mpi4py util pool-Footnote-26223184
Ref: mpi4py util pool-Footnote-27223246
Ref: mpi4py util pool-Footnote-28223317
Ref: mpi4py util pool-Footnote-29223388
Ref: mpi4py util pool-Footnote-30223450
Ref: mpi4py util pool-Footnote-31223513
Ref: mpi4py util pool-Footnote-32223575
Ref: mpi4py util pool-Footnote-33223637
Ref: mpi4py util pool-Footnote-34223700
Ref: mpi4py util pool-Footnote-35223763
Ref: mpi4py util pool-Footnote-36223826
Ref: mpi4py util pool-Footnote-37223899
Ref: mpi4py util pool-Footnote-38223962
Ref: mpi4py util pool-Footnote-39224025
Ref: mpi4py util pool-Footnote-40224088
Ref: mpi4py util pool-Footnote-41224159
Ref: mpi4py util pool-Footnote-42224230
Ref: mpi4py util pool-Footnote-43224292
Ref: mpi4py util pool-Footnote-44224363
Ref: mpi4py util pool-Footnote-45224434
Ref: mpi4py util pool-Footnote-46224505
Ref: mpi4py util pool-Footnote-47224567
Ref: mpi4py util pool-Footnote-48224638
Ref: mpi4py util pool-Footnote-49224700
Ref: mpi4py util pool-Footnote-50224771
Ref: mpi4py util pool-Footnote-51224842
Ref: mpi4py util pool-Footnote-52224913
Ref: mpi4py util pool-Footnote-53224979
Ref: mpi4py util pool-Footnote-54225041
Ref: mpi4py util pool-Footnote-55225104
Ref: mpi4py util pool-Footnote-56225166
Ref: mpi4py util pool-Footnote-57225228
Ref: mpi4py util pool-Footnote-58225291
Ref: mpi4py util pool-Footnote-59225354
Ref: mpi4py util pool-Footnote-60225417
Ref: mpi4py util pool-Footnote-61225490
Ref: mpi4py util pool-Footnote-62225553
Ref: mpi4py util pool-Footnote-63225616
Ref: mpi4py util pool-Footnote-64225679
Ref: mpi4py util pool-Footnote-65225750
Ref: mpi4py util pool-Footnote-66225821
Ref: mpi4py util pool-Footnote-67225892
Ref: mpi4py util pool-Footnote-68225958
Ref: mpi4py util pool-Footnote-69226020
Ref: mpi4py util pool-Footnote-70226091
Ref: mpi4py util pool-Footnote-71226162
Ref: mpi4py util pool-Footnote-72226233
Ref: mpi4py util pool-Footnote-73226304
Ref: mpi4py util pool-Footnote-74226370
Ref: mpi4py util pool-Footnote-75226432
Ref: mpi4py util pool-Footnote-76226503
Ref: mpi4py util pool-Footnote-77226566
Ref: mpi4py util pool-Footnote-78226629
Ref: mpi4py util pool-Footnote-79226692
Ref: mpi4py util pool-Footnote-80226755
Ref: mpi4py util pool-Footnote-81226827
Ref: mpi4py util pool-Footnote-82226891
Ref: mpi4py util pool-Footnote-83226954
Ref: mpi4py util pool-Footnote-84227018
Ref: mpi4py util pool-Footnote-85227081
Ref: mpi4py util pool-Footnote-86227144
Ref: mpi4py util pool-Footnote-87227207
Ref: mpi4py util pool-Footnote-88227277
Node: mpi4py util sync227340
Ref: mpi4py util sync doc227429
Ref: 27d227429
Ref: mpi4py util sync module-mpi4py util sync227429
Ref: a227429
Ref: mpi4py util sync mpi4py-util-sync227429
Ref: 27e227429
Node: Sequential execution227725
Ref: mpi4py util sync sequential-execution227821
Ref: 27f227821
Ref: mpi4py util sync mpi4py util sync Sequential227876
Ref: 280227876
Ref: mpi4py util sync mpi4py util sync Sequential __init__228267
Ref: 281228267
Ref: mpi4py util sync mpi4py util sync Sequential __enter__228582
Ref: 282228582
Ref: mpi4py util sync mpi4py util sync Sequential __exit__228685
Ref: 283228685
Ref: mpi4py util sync mpi4py util sync Sequential begin228836
Ref: 284228836
Ref: mpi4py util sync mpi4py util sync Sequential end228935
Ref: 285228935
Ref: Sequential execution-Footnote-1229066
Ref: Sequential execution-Footnote-2229127
Ref: Sequential execution-Footnote-3229189
Ref: Sequential execution-Footnote-4229255
Ref: Sequential execution-Footnote-5229319
Ref: Sequential execution-Footnote-6229381
Ref: Sequential execution-Footnote-7229443
Node: Global counter229505
Ref: mpi4py util sync global-counter229626
Ref: 286229626
Ref: mpi4py util sync mpi4py util sync Counter229669
Ref: 287229669
Ref: mpi4py util sync mpi4py util sync Counter __init__230089
Ref: 288230089
Ref: mpi4py util sync mpi4py util sync Counter __iter__230810
Ref: 289230810
Ref: mpi4py util sync mpi4py util sync Counter __next__230912
Ref: 28a230912
Ref: mpi4py util sync mpi4py util sync Counter next231013
Ref: 28b231013
Ref: mpi4py util sync mpi4py util sync Counter free231271
Ref: 28c231271
Ref: Global counter-Footnote-1231402
Ref: Global counter-Footnote-2231475
Ref: Global counter-Footnote-3231536
Ref: Global counter-Footnote-4231597
Ref: Global counter-Footnote-5231657
Ref: Global counter-Footnote-6231723
Ref: Global counter-Footnote-7231784
Ref: Global counter-Footnote-8231846
Ref: Global counter-Footnote-9231912
Ref: Global counter-Footnote-10231973
Ref: Global counter-Footnote-11232035
Ref: Global counter-Footnote-12232098
Ref: Global counter-Footnote-13232160
Node: Mutual exclusion232223
Ref: mpi4py util sync mutual-exclusion232342
Ref: 28d232342
Ref: mpi4py util sync mpi4py util sync Mutex232389
Ref: 28e232389
Ref: mpi4py util sync mpi4py util sync Mutex __init__233345
Ref: 291233345
Ref: mpi4py util sync mpi4py util sync Mutex __enter__233832
Ref: 292233832
Ref: mpi4py util sync mpi4py util sync Mutex __exit__233922
Ref: 293233922
Ref: mpi4py util sync mpi4py util sync Mutex acquire234062
Ref: 294234062
Ref: mpi4py util sync mpi4py util sync Mutex release234371
Ref: 295234371
Ref: mpi4py util sync mpi4py util sync Mutex locked234460
Ref: 296234460
Ref: mpi4py util sync mpi4py util sync Mutex count234567
Ref: 297234567
Ref: mpi4py util sync mpi4py util sync Mutex free234666
Ref: 298234666
Ref: mpi4py util sync mcs-paper234759
Ref: 28f234759
Ref: mpi4py util sync uam-book235002
Ref: 290235002
Ref: Mutual exclusion-Footnote-1235315
Ref: Mutual exclusion-Footnote-2235387
Ref: Mutual exclusion-Footnote-3235460
Ref: Mutual exclusion-Footnote-4235532
Ref: Mutual exclusion-Footnote-5235603
Ref: Mutual exclusion-Footnote-6235674
Ref: Mutual exclusion-Footnote-7235736
Ref: Mutual exclusion-Footnote-8235798
Ref: Mutual exclusion-Footnote-9235864
Ref: Mutual exclusion-Footnote-10235928
Ref: Mutual exclusion-Footnote-11235991
Ref: Mutual exclusion-Footnote-12236054
Ref: Mutual exclusion-Footnote-13236117
Ref: Mutual exclusion-Footnote-14236180
Ref: Mutual exclusion-Footnote-15236244
Ref: Mutual exclusion-Footnote-16236307
Ref: Mutual exclusion-Footnote-17236370
Ref: Mutual exclusion-Footnote-18236433
Ref: Mutual exclusion-Footnote-19236495
Node: Condition variable236558
Ref: mpi4py util sync condition-variable236679
Ref: 299236679
Ref: mpi4py util sync mpi4py util sync Condition236730
Ref: 29a236730
Ref: mpi4py util sync mpi4py util sync Condition __init__237338
Ref: 29b237338
Ref: mpi4py util sync mpi4py util sync Condition __enter__237950
Ref: 29c237950
Ref: mpi4py util sync mpi4py util sync Condition __exit__238055
Ref: 29d238055
Ref: mpi4py util sync mpi4py util sync Condition acquire238209
Ref: 29e238209
Ref: mpi4py util sync mpi4py util sync Condition release238374
Ref: 29f238374
Ref: mpi4py util sync mpi4py util sync Condition locked238478
Ref: 2a0238478
Ref: mpi4py util sync mpi4py util sync Condition wait238596
Ref: 2a1238596
Ref: mpi4py util sync mpi4py util sync Condition wait_for238754
Ref: 2a2238754
Ref: mpi4py util sync mpi4py util sync Condition notify239123
Ref: 2a3239123
Ref: mpi4py util sync mpi4py util sync Condition notify_all239413
Ref: 2a4239413
Ref: mpi4py util sync mpi4py util sync Condition free239600
Ref: 2a5239600
Ref: Condition variable-Footnote-1239733
Ref: Condition variable-Footnote-2239811
Ref: Condition variable-Footnote-3239873
Ref: Condition variable-Footnote-4239935
Ref: Condition variable-Footnote-5239997
Ref: Condition variable-Footnote-6240063
Ref: Condition variable-Footnote-7240127
Ref: Condition variable-Footnote-8240189
Ref: Condition variable-Footnote-9240251
Ref: Condition variable-Footnote-10240313
Ref: Condition variable-Footnote-11240376
Ref: Condition variable-Footnote-12240439
Ref: Condition variable-Footnote-13240502
Ref: Condition variable-Footnote-14240572
Ref: Condition variable-Footnote-15240635
Ref: Condition variable-Footnote-16240706
Ref: Condition variable-Footnote-17240769
Ref: Condition variable-Footnote-18240831
Ref: Condition variable-Footnote-19240893
Ref: Condition variable-Footnote-20240955
Node: Semaphore object241018
Ref: mpi4py util sync semaphore-object241134
Ref: 2a6241134
Ref: mpi4py util sync mpi4py util sync Semaphore241181
Ref: 2a7241181
Ref: mpi4py util sync mpi4py util sync Semaphore __init__242099
Ref: 2aa242099
Ref: mpi4py util sync mpi4py util sync Semaphore __enter__242672
Ref: 2ab242672
Ref: mpi4py util sync mpi4py util sync Semaphore __exit__242766
Ref: 2ac242766
Ref: mpi4py util sync mpi4py util sync Semaphore acquire242909
Ref: 2a8242909
Ref: mpi4py util sync mpi4py util sync Semaphore release243264
Ref: 2a9243264
Ref: mpi4py util sync mpi4py util sync Semaphore free243512
Ref: 2ad243512
Ref: Semaphore object-Footnote-1243645
Ref: Semaphore object-Footnote-2243723
Ref: Semaphore object-Footnote-3243808
Ref: Semaphore object-Footnote-4243877
Ref: Semaphore object-Footnote-5243938
Ref: Semaphore object-Footnote-6244000
Ref: Semaphore object-Footnote-7244062
Ref: Semaphore object-Footnote-8244128
Ref: Semaphore object-Footnote-9244192
Ref: Semaphore object-Footnote-10244254
Ref: Semaphore object-Footnote-11244317
Ref: Semaphore object-Footnote-12244380
Ref: Semaphore object-Footnote-13244443
Ref: Semaphore object-Footnote-14244507
Ref: Semaphore object-Footnote-15244570
Ref: Semaphore object-Footnote-16244632
Ref: Semaphore object-Footnote-17244695
Node: Examples<3>244758
Ref: mpi4py util sync examples244847
Ref: 2ae244847
Node: mpi4py run245541
Ref: mpi4py run doc245632
Ref: 2af245632
Ref: mpi4py run module-mpi4py run245632
Ref: 4245632
Ref: mpi4py run mpi4py-run245632
Ref: 2b0245632
Ref: mpi4py run-Footnote-1246995
Ref: mpi4py run-Footnote-2247063
Ref: mpi4py run-Footnote-3247134
Node: Exceptions and deadlocks247206
Ref: mpi4py run exceptions-and-deadlocks247301
Ref: 2b1247301
Ref: Exceptions and deadlocks-Footnote-1249418
Ref: Exceptions and deadlocks-Footnote-2249495
Ref: Exceptions and deadlocks-Footnote-3249565
Ref: Exceptions and deadlocks-Footnote-4249631
Ref: Exceptions and deadlocks-Footnote-5249699
Node: Command line<2>249760
Ref: mpi4py run command-line249855
Ref: 2b2249855
Ref: mpi4py run cmdoption-m250520
Ref: 2b3250520
Ref: mpi4py run cmdoption-c250633
Ref: 2b4250633
Ref: Command line<2>-Footnote-1250921
Ref: Command line<2>-Footnote-2250981
Ref: Command line<2>-Footnote-3251042
Node: mpi4py bench251112
Ref: mpi4py bench doc251201
Ref: 2b5251201
Ref: mpi4py bench module-mpi4py bench251201
Ref: 1251201
Ref: mpi4py bench mpi4py-bench251201
Ref: 2b6251201
Node: Reference251259
Ref: reference doc251349
Ref: 2b7251349
Ref: reference id1251349
Ref: 2b8251349
Ref: reference reference251349
Ref: 2b9251349
Node: mpi4py MPI<2>251479
Ref: reference/mpi4py MPI doc251538
Ref: 2ba251538
Ref: reference/mpi4py MPI module-mpi4py MPI251538
Ref: 3251538
Ref: reference/mpi4py MPI mpi4py-mpi251538
Ref: 2bb251538
Node: mpi4py MPI BottomType271455
Ref: reference/mpi4py MPI BottomType doc271565
Ref: 2bd271565
Ref: reference/mpi4py MPI BottomType mpi4py-mpi-bottomtype271565
Ref: 2be271565
Ref: reference/mpi4py MPI BottomType mpi4py MPI BottomType271624
Ref: fb271624
Ref: reference/mpi4py MPI BottomType mpi4py MPI BottomType __new__271710
Ref: 2bf271710
Ref: mpi4py MPI BottomType-Footnote-1271818
Ref: mpi4py MPI BottomType-Footnote-2271879
Node: mpi4py MPI BufferAutomaticType271945
Ref: reference/mpi4py MPI BufferAutomaticType doc272083
Ref: 2c0272083
Ref: reference/mpi4py MPI BufferAutomaticType mpi4py-mpi-bufferautomatictype272083
Ref: 2c1272083
Ref: reference/mpi4py MPI BufferAutomaticType mpi4py MPI BufferAutomaticType272160
Ref: ff272160
Ref: reference/mpi4py MPI BufferAutomaticType mpi4py MPI BufferAutomaticType __new__272265
Ref: 2c2272265
Ref: mpi4py MPI BufferAutomaticType-Footnote-1272373
Ref: mpi4py MPI BufferAutomaticType-Footnote-2272434
Node: mpi4py MPI Cartcomm272500
Ref: reference/mpi4py MPI Cartcomm doc272632
Ref: 2c3272632
Ref: reference/mpi4py MPI Cartcomm mpi4py-mpi-cartcomm272632
Ref: 2c4272632
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm272687
Ref: 33272687
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm __new__272796
Ref: 2c5272796
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_cart_rank274235
Ref: 2c6274235
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_coords274430
Ref: 2c7274430
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_dim274602
Ref: 2c8274602
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Get_topo274703
Ref: 2c9274703
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Shift274892
Ref: 2ca274892
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm Sub275177
Ref: 2cb275177
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm coords275456
Ref: 2cc275456
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm dim275508
Ref: 2cd275508
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm dims275566
Ref: 2ce275566
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm ndim275615
Ref: 2cf275615
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm periods275674
Ref: 2d0275674
Ref: reference/mpi4py MPI Cartcomm mpi4py MPI Cartcomm topo275727
Ref: 2d1275727
Ref: mpi4py MPI Cartcomm-Footnote-1275822
Ref: mpi4py MPI Cartcomm-Footnote-2275884
Ref: mpi4py MPI Cartcomm-Footnote-3275950
Ref: mpi4py MPI Cartcomm-Footnote-4276020
Ref: mpi4py MPI Cartcomm-Footnote-5276081
Ref: mpi4py MPI Cartcomm-Footnote-6276142
Ref: mpi4py MPI Cartcomm-Footnote-7276203
Ref: mpi4py MPI Cartcomm-Footnote-8276264
Ref: mpi4py MPI Cartcomm-Footnote-9276325
Ref: mpi4py MPI Cartcomm-Footnote-10276386
Ref: mpi4py MPI Cartcomm-Footnote-11276449
Ref: mpi4py MPI Cartcomm-Footnote-12276511
Ref: mpi4py MPI Cartcomm-Footnote-13276573
Ref: mpi4py MPI Cartcomm-Footnote-14276635
Ref: mpi4py MPI Cartcomm-Footnote-15276697
Ref: mpi4py MPI Cartcomm-Footnote-16276759
Ref: mpi4py MPI Cartcomm-Footnote-17276821
Ref: mpi4py MPI Cartcomm-Footnote-18276883
Ref: mpi4py MPI Cartcomm-Footnote-19276945
Ref: mpi4py MPI Cartcomm-Footnote-20277008
Ref: mpi4py MPI Cartcomm-Footnote-21277070
Ref: mpi4py MPI Cartcomm-Footnote-22277132
Ref: mpi4py MPI Cartcomm-Footnote-23277203
Node: mpi4py MPI Comm277266
Ref: reference/mpi4py MPI Comm doc277387
Ref: 2d2277387
Ref: reference/mpi4py MPI Comm mpi4py-mpi-comm277387
Ref: 2d3277387
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm277434
Ref: 1e277434
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm __new__277514
Ref: 2d4277514
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Abort292732
Ref: 2d5292732
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ack_failed293174
Ref: 2d6293174
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Agree293370
Ref: 2d7293370
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allgather293509
Ref: 50293509
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allgather_init293881
Ref: 2d8293881
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allgatherv294233
Ref: 59294233
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allgatherv_init294657
Ref: 2d9294657
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allreduce295017
Ref: 5e295017
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Allreduce_init295329
Ref: 2da295329
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoall295744
Ref: 51295744
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoall_init296092
Ref: 2db296092
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoallv296456
Ref: 5a296456
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoallv_init296876
Ref: 2dc296876
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoallw297248
Ref: 5b297248
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Alltoallw_init297700
Ref: 2dd297700
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Attach_buffer298073
Ref: 2de298073
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Barrier298288
Ref: 22e298288
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Barrier_init298387
Ref: 2df298387
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bcast298564
Ref: 4d298564
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bcast_init298812
Ref: 2e0298812
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bsend299103
Ref: 2e1299103
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Bsend_init299368
Ref: 2e2299368
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Call_errhandler299664
Ref: 2e3299664
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Clone299857
Ref: 2e299857
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Compare299961
Ref: 2e4299961
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Create300118
Ref: 2c300118
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Create_errhandler300290
Ref: 9d300290
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Create_keyval300601
Ref: 2e5300601
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Delete_attr301196
Ref: 2e6301196
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Detach_buffer301373
Ref: 2e7301373
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Disconnect301510
Ref: 72301510
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Dup301619
Ref: 2f301619
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Dup_with_info301794
Ref: 2e8301794
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Flush_buffer301968
Ref: 2e9301968
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Free302104
Ref: 2ea302104
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Free_keyval302196
Ref: 2eb302196
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Gather302379
Ref: 4f302379
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Gather_init302740
Ref: 2ec302740
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Gatherv303144
Ref: 58303144
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Gatherv_init303596
Ref: 2ed303596
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_attr304008
Ref: 94304008
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_errhandler304189
Ref: 9c304189
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_failed304325
Ref: 2ee304325
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_group304449
Ref: 27304449
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_info304582
Ref: 2ef304582
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_name304709
Ref: 2f0304709
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_parent304825
Ref: 6c304825
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_rank304980
Ref: 26304980
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_size305105
Ref: 25305105
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Get_topology305229
Ref: 2f1305229
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iagree305386
Ref: 2f2305386
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iallgather305552
Ref: 2f3305552
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iallgatherv305839
Ref: 2f4305839
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iallreduce306134
Ref: 2f5306134
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ialltoall306469
Ref: 2f6306469
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ialltoallv306768
Ref: 2f7306768
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ialltoallw307075
Ref: 2f8307075
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ibarrier307383
Ref: 2f9307383
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ibcast307489
Ref: 2fa307489
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ibsend307715
Ref: 2fb307715
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Idup307994
Ref: 2fc307994
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Idup_with_info308213
Ref: 2fd308213
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iflush_buffer308431
Ref: 2fe308431
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Igather308562
Ref: 2ff308562
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Igatherv308901
Ref: 300308901
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Improbe309248
Ref: 301309248
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iprobe309591
Ref: 302309591
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Irecv309904
Ref: 42309904
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ireduce310189
Ref: 303310189
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ireduce_scatter310584
Ref: 304310584
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ireduce_scatter_block311064
Ref: 305311064
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Irsend311487
Ref: 306311487
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Is_inter311765
Ref: 21311765
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Is_intra311898
Ref: 22311898
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Is_revoked312031
Ref: 307312031
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iscatter312161
Ref: 308312161
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Iscatterv312504
Ref: 309312504
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Isend312855
Ref: 41312855
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Isendrecv313118
Ref: 30a313118
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Isendrecv_replace313629
Ref: 30b313629
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ishrink314411
Ref: 30c314411
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Issend314599
Ref: 30d314599
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Join314883
Ref: 30e314883
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Mprobe315074
Ref: 30f315074
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Precv_init315405
Ref: 310315405
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Probe315858
Ref: 311315858
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Psend_init316250
Ref: 312316250
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Recv316682
Ref: 3b316682
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Recv_init317110
Ref: 49317110
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce317424
Ref: 5c317424
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce_init317799
Ref: 313317799
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce_scatter318276
Ref: 5d318276
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce_scatter_block318734
Ref: 314318734
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce_scatter_block_init319125
Ref: 315319125
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Reduce_scatter_init319618
Ref: 316319618
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Revoke320163
Ref: 317320163
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Rsend320260
Ref: 318320260
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Rsend_init320525
Ref: 319320525
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Scatter320820
Ref: 4e320820
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Scatter_init321186
Ref: 31a321186
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Scatterv321594
Ref: 57321594
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Scatterv_init322052
Ref: 31b322052
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Send322483
Ref: 3a322483
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Send_init322939
Ref: 48322939
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Sendrecv323238
Ref: 3c323238
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Sendrecv_replace324174
Ref: 31c324174
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_attr325026
Ref: 31d325026
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_errhandler325267
Ref: 9b325267
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_info325466
Ref: 31e325466
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Set_name325660
Ref: 31f325660
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Shrink325828
Ref: 320325828
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Split325962
Ref: 30325962
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Split_type326192
Ref: 321326192
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ssend326493
Ref: 322326493
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm Ssend_init326764
Ref: 323326764
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm allgather327065
Ref: 55327065
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm allreduce327223
Ref: 62327223
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm alltoall327540
Ref: 56327540
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm barrier327736
Ref: 324327736
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm bcast327907
Ref: 52327907
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm bsend328100
Ref: 325328100
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm f2py328348
Ref: 326328348
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm free328475
Ref: 327328475
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm fromhandle328596
Ref: 328328596
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm gather328777
Ref: 54328777
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm ibsend328999
Ref: 329328999
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm improbe329269
Ref: 32a329269
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm iprobe329616
Ref: 32b329616
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm irecv329933
Ref: a2329933
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm isend330242
Ref: a1330242
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm issend330494
Ref: 32c330494
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm mprobe330767
Ref: 32d330767
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm probe331098
Ref: 32e331098
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm py2f331420
Ref: 32f331420
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm recv331480
Ref: 3e331480
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm reduce331856
Ref: 61331856
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm scatter332229
Ref: 53332229
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm send332475
Ref: 3d332475
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm sendrecv332722
Ref: 3f332722
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm ssend333274
Ref: 330333274
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm group333586
Ref: 331333586
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm handle333631
Ref: 332333631
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm info333682
Ref: 333333682
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm is_inter333731
Ref: 334333731
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm is_intra333794
Ref: 335333794
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm is_topo333857
Ref: 336333857
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm name333912
Ref: 337333912
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm rank333961
Ref: 338333961
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm size334020
Ref: a5334020
Ref: reference/mpi4py MPI Comm mpi4py MPI Comm topology334078
Ref: 339334078
Ref: mpi4py MPI Comm-Footnote-1334170
Ref: mpi4py MPI Comm-Footnote-2334234
Ref: mpi4py MPI Comm-Footnote-3334296
Ref: mpi4py MPI Comm-Footnote-4334362
Ref: mpi4py MPI Comm-Footnote-5334423
Ref: mpi4py MPI Comm-Footnote-6334493
Ref: mpi4py MPI Comm-Footnote-7334554
Ref: mpi4py MPI Comm-Footnote-8334616
Ref: mpi4py MPI Comm-Footnote-9334677
Ref: mpi4py MPI Comm-Footnote-10334738
Ref: mpi4py MPI Comm-Footnote-11334800
Ref: mpi4py MPI Comm-Footnote-12334863
Ref: mpi4py MPI Comm-Footnote-13334926
Ref: mpi4py MPI Comm-Footnote-14334989
Ref: mpi4py MPI Comm-Footnote-15335052
Ref: mpi4py MPI Comm-Footnote-16335115
Ref: mpi4py MPI Comm-Footnote-17335178
Ref: mpi4py MPI Comm-Footnote-18335241
Ref: mpi4py MPI Comm-Footnote-19335304
Ref: mpi4py MPI Comm-Footnote-20335367
Ref: mpi4py MPI Comm-Footnote-21335429
Ref: mpi4py MPI Comm-Footnote-22335492
Ref: mpi4py MPI Comm-Footnote-23335554
Ref: mpi4py MPI Comm-Footnote-24335616
Ref: mpi4py MPI Comm-Footnote-25335678
Ref: mpi4py MPI Comm-Footnote-26335741
Ref: mpi4py MPI Comm-Footnote-27335803
Ref: mpi4py MPI Comm-Footnote-28335865
Ref: mpi4py MPI Comm-Footnote-29335927
Ref: mpi4py MPI Comm-Footnote-30335990
Ref: mpi4py MPI Comm-Footnote-31336057
Ref: mpi4py MPI Comm-Footnote-32336119
Ref: mpi4py MPI Comm-Footnote-33336190
Ref: mpi4py MPI Comm-Footnote-34336252
Ref: mpi4py MPI Comm-Footnote-35336315
Ref: mpi4py MPI Comm-Footnote-36336386
Ref: mpi4py MPI Comm-Footnote-37336448
Ref: mpi4py MPI Comm-Footnote-38336514
Ref: mpi4py MPI Comm-Footnote-39336580
Ref: mpi4py MPI Comm-Footnote-40336643
Ref: mpi4py MPI Comm-Footnote-41336714
Ref: mpi4py MPI Comm-Footnote-42336776
Ref: mpi4py MPI Comm-Footnote-43336842
Ref: mpi4py MPI Comm-Footnote-44336905
Ref: mpi4py MPI Comm-Footnote-45336968
Ref: mpi4py MPI Comm-Footnote-46337031
Ref: mpi4py MPI Comm-Footnote-47337093
Ref: mpi4py MPI Comm-Footnote-48337155
Ref: mpi4py MPI Comm-Footnote-49337218
Ref: mpi4py MPI Comm-Footnote-50337281
Ref: mpi4py MPI Comm-Footnote-51337344
Ref: mpi4py MPI Comm-Footnote-52337407
Ref: mpi4py MPI Comm-Footnote-53337474
Ref: mpi4py MPI Comm-Footnote-54337541
Ref: mpi4py MPI Comm-Footnote-55337604
Ref: mpi4py MPI Comm-Footnote-56337667
Ref: mpi4py MPI Comm-Footnote-57337729
Ref: mpi4py MPI Comm-Footnote-58337791
Ref: mpi4py MPI Comm-Footnote-59337854
Ref: mpi4py MPI Comm-Footnote-60337916
Ref: mpi4py MPI Comm-Footnote-61337979
Ref: mpi4py MPI Comm-Footnote-62338042
Ref: mpi4py MPI Comm-Footnote-63338104
Ref: mpi4py MPI Comm-Footnote-64338167
Ref: mpi4py MPI Comm-Footnote-65338229
Ref: mpi4py MPI Comm-Footnote-66338292
Ref: mpi4py MPI Comm-Footnote-67338355
Ref: mpi4py MPI Comm-Footnote-68338417
Ref: mpi4py MPI Comm-Footnote-69338479
Ref: mpi4py MPI Comm-Footnote-70338541
Ref: mpi4py MPI Comm-Footnote-71338607
Ref: mpi4py MPI Comm-Footnote-72338670
Ref: mpi4py MPI Comm-Footnote-73338731
Ref: mpi4py MPI Comm-Footnote-74338793
Ref: mpi4py MPI Comm-Footnote-75338855
Ref: mpi4py MPI Comm-Footnote-76338917
Ref: mpi4py MPI Comm-Footnote-77338979
Ref: mpi4py MPI Comm-Footnote-78339041
Ref: mpi4py MPI Comm-Footnote-79339103
Ref: mpi4py MPI Comm-Footnote-80339166
Ref: mpi4py MPI Comm-Footnote-81339229
Ref: mpi4py MPI Comm-Footnote-82339296
Ref: mpi4py MPI Comm-Footnote-83339359
Ref: mpi4py MPI Comm-Footnote-84339426
Ref: mpi4py MPI Comm-Footnote-85339489
Ref: mpi4py MPI Comm-Footnote-86339551
Ref: mpi4py MPI Comm-Footnote-87339614
Ref: mpi4py MPI Comm-Footnote-88339676
Ref: mpi4py MPI Comm-Footnote-89339738
Ref: mpi4py MPI Comm-Footnote-90339800
Ref: mpi4py MPI Comm-Footnote-91339863
Ref: mpi4py MPI Comm-Footnote-92339926
Ref: mpi4py MPI Comm-Footnote-93339988
Ref: mpi4py MPI Comm-Footnote-94340050
Ref: mpi4py MPI Comm-Footnote-95340113
Ref: mpi4py MPI Comm-Footnote-96340176
Ref: mpi4py MPI Comm-Footnote-97340238
Ref: mpi4py MPI Comm-Footnote-98340300
Ref: mpi4py MPI Comm-Footnote-99340363
Ref: mpi4py MPI Comm-Footnote-100340425
Ref: mpi4py MPI Comm-Footnote-101340488
Ref: mpi4py MPI Comm-Footnote-102340552
Ref: mpi4py MPI Comm-Footnote-103340615
Ref: mpi4py MPI Comm-Footnote-104340678
Ref: mpi4py MPI Comm-Footnote-105340742
Ref: mpi4py MPI Comm-Footnote-106340806
Ref: mpi4py MPI Comm-Footnote-107340870
Ref: mpi4py MPI Comm-Footnote-108340934
Ref: mpi4py MPI Comm-Footnote-109340997
Ref: mpi4py MPI Comm-Footnote-110341061
Ref: mpi4py MPI Comm-Footnote-111341124
Ref: mpi4py MPI Comm-Footnote-112341187
Ref: mpi4py MPI Comm-Footnote-113341250
Ref: mpi4py MPI Comm-Footnote-114341313
Ref: mpi4py MPI Comm-Footnote-115341376
Ref: mpi4py MPI Comm-Footnote-116341440
Ref: mpi4py MPI Comm-Footnote-117341503
Ref: mpi4py MPI Comm-Footnote-118341566
Ref: mpi4py MPI Comm-Footnote-119341629
Ref: mpi4py MPI Comm-Footnote-120341692
Ref: mpi4py MPI Comm-Footnote-121341755
Ref: mpi4py MPI Comm-Footnote-122341818
Ref: mpi4py MPI Comm-Footnote-123341882
Ref: mpi4py MPI Comm-Footnote-124341945
Ref: mpi4py MPI Comm-Footnote-125342008
Ref: mpi4py MPI Comm-Footnote-126342071
Ref: mpi4py MPI Comm-Footnote-127342134
Ref: mpi4py MPI Comm-Footnote-128342197
Ref: mpi4py MPI Comm-Footnote-129342261
Ref: mpi4py MPI Comm-Footnote-130342324
Ref: mpi4py MPI Comm-Footnote-131342387
Ref: mpi4py MPI Comm-Footnote-132342450
Ref: mpi4py MPI Comm-Footnote-133342513
Ref: mpi4py MPI Comm-Footnote-134342576
Ref: mpi4py MPI Comm-Footnote-135342640
Ref: mpi4py MPI Comm-Footnote-136342711
Ref: mpi4py MPI Comm-Footnote-137342774
Ref: mpi4py MPI Comm-Footnote-138342837
Ref: mpi4py MPI Comm-Footnote-139342900
Ref: mpi4py MPI Comm-Footnote-140342963
Ref: mpi4py MPI Comm-Footnote-141343026
Ref: mpi4py MPI Comm-Footnote-142343090
Ref: mpi4py MPI Comm-Footnote-143343154
Ref: mpi4py MPI Comm-Footnote-144343217
Ref: mpi4py MPI Comm-Footnote-145343280
Ref: mpi4py MPI Comm-Footnote-146343344
Ref: mpi4py MPI Comm-Footnote-147343407
Ref: mpi4py MPI Comm-Footnote-148343471
Ref: mpi4py MPI Comm-Footnote-149343535
Ref: mpi4py MPI Comm-Footnote-150343598
Ref: mpi4py MPI Comm-Footnote-151343661
Ref: mpi4py MPI Comm-Footnote-152343725
Ref: mpi4py MPI Comm-Footnote-153343789
Ref: mpi4py MPI Comm-Footnote-154343853
Ref: mpi4py MPI Comm-Footnote-155343916
Ref: mpi4py MPI Comm-Footnote-156343980
Ref: mpi4py MPI Comm-Footnote-157344044
Ref: mpi4py MPI Comm-Footnote-158344107
Ref: mpi4py MPI Comm-Footnote-159344170
Ref: mpi4py MPI Comm-Footnote-160344234
Ref: mpi4py MPI Comm-Footnote-161344297
Ref: mpi4py MPI Comm-Footnote-162344360
Ref: mpi4py MPI Comm-Footnote-163344424
Ref: mpi4py MPI Comm-Footnote-164344487
Ref: mpi4py MPI Comm-Footnote-165344551
Ref: mpi4py MPI Comm-Footnote-166344615
Ref: mpi4py MPI Comm-Footnote-167344678
Ref: mpi4py MPI Comm-Footnote-168344742
Ref: mpi4py MPI Comm-Footnote-169344805
Ref: mpi4py MPI Comm-Footnote-170344869
Ref: mpi4py MPI Comm-Footnote-171344933
Ref: mpi4py MPI Comm-Footnote-172344996
Ref: mpi4py MPI Comm-Footnote-173345059
Ref: mpi4py MPI Comm-Footnote-174345122
Ref: mpi4py MPI Comm-Footnote-175345186
Ref: mpi4py MPI Comm-Footnote-176345249
Ref: mpi4py MPI Comm-Footnote-177345312
Ref: mpi4py MPI Comm-Footnote-178345375
Ref: mpi4py MPI Comm-Footnote-179345438
Ref: mpi4py MPI Comm-Footnote-180345502
Ref: mpi4py MPI Comm-Footnote-181345565
Ref: mpi4py MPI Comm-Footnote-182345628
Ref: mpi4py MPI Comm-Footnote-183345692
Ref: mpi4py MPI Comm-Footnote-184345756
Ref: mpi4py MPI Comm-Footnote-185345819
Ref: mpi4py MPI Comm-Footnote-186345882
Ref: mpi4py MPI Comm-Footnote-187345945
Ref: mpi4py MPI Comm-Footnote-188346008
Ref: mpi4py MPI Comm-Footnote-189346072
Ref: mpi4py MPI Comm-Footnote-190346136
Ref: mpi4py MPI Comm-Footnote-191346199
Ref: mpi4py MPI Comm-Footnote-192346266
Ref: mpi4py MPI Comm-Footnote-193346330
Ref: mpi4py MPI Comm-Footnote-194346394
Ref: mpi4py MPI Comm-Footnote-195346458
Ref: mpi4py MPI Comm-Footnote-196346520
Ref: mpi4py MPI Comm-Footnote-197346584
Ref: mpi4py MPI Comm-Footnote-198346647
Ref: mpi4py MPI Comm-Footnote-199346710
Ref: mpi4py MPI Comm-Footnote-200346773
Ref: mpi4py MPI Comm-Footnote-201346836
Ref: mpi4py MPI Comm-Footnote-202346899
Ref: mpi4py MPI Comm-Footnote-203346962
Ref: mpi4py MPI Comm-Footnote-204347026
Ref: mpi4py MPI Comm-Footnote-205347089
Ref: mpi4py MPI Comm-Footnote-206347152
Ref: mpi4py MPI Comm-Footnote-207347219
Ref: mpi4py MPI Comm-Footnote-208347282
Ref: mpi4py MPI Comm-Footnote-209347349
Ref: mpi4py MPI Comm-Footnote-210347416
Ref: mpi4py MPI Comm-Footnote-211347488
Ref: mpi4py MPI Comm-Footnote-212347555
Ref: mpi4py MPI Comm-Footnote-213347622
Ref: mpi4py MPI Comm-Footnote-214347689
Ref: mpi4py MPI Comm-Footnote-215347756
Ref: mpi4py MPI Comm-Footnote-216347828
Ref: mpi4py MPI Comm-Footnote-217347895
Ref: mpi4py MPI Comm-Footnote-218347958
Ref: mpi4py MPI Comm-Footnote-219348025
Ref: mpi4py MPI Comm-Footnote-220348089
Ref: mpi4py MPI Comm-Footnote-221348156
Ref: mpi4py MPI Comm-Footnote-222348219
Ref: mpi4py MPI Comm-Footnote-223348286
Ref: mpi4py MPI Comm-Footnote-224348353
Ref: mpi4py MPI Comm-Footnote-225348416
Ref: mpi4py MPI Comm-Footnote-226348479
Ref: mpi4py MPI Comm-Footnote-227348543
Ref: mpi4py MPI Comm-Footnote-228348606
Ref: mpi4py MPI Comm-Footnote-229348670
Ref: mpi4py MPI Comm-Footnote-230348733
Ref: mpi4py MPI Comm-Footnote-231348800
Ref: mpi4py MPI Comm-Footnote-232348863
Ref: mpi4py MPI Comm-Footnote-233348926
Ref: mpi4py MPI Comm-Footnote-234348993
Ref: mpi4py MPI Comm-Footnote-235349057
Ref: mpi4py MPI Comm-Footnote-236349124
Ref: mpi4py MPI Comm-Footnote-237349187
Ref: mpi4py MPI Comm-Footnote-238349250
Ref: mpi4py MPI Comm-Footnote-239349313
Ref: mpi4py MPI Comm-Footnote-240349376
Ref: mpi4py MPI Comm-Footnote-241349440
Ref: mpi4py MPI Comm-Footnote-242349504
Ref: mpi4py MPI Comm-Footnote-243349567
Ref: mpi4py MPI Comm-Footnote-244349630
Ref: mpi4py MPI Comm-Footnote-245349694
Ref: mpi4py MPI Comm-Footnote-246349758
Ref: mpi4py MPI Comm-Footnote-247349822
Ref: mpi4py MPI Comm-Footnote-248349885
Ref: mpi4py MPI Comm-Footnote-249349948
Ref: mpi4py MPI Comm-Footnote-250350015
Ref: mpi4py MPI Comm-Footnote-251350078
Ref: mpi4py MPI Comm-Footnote-252350141
Ref: mpi4py MPI Comm-Footnote-253350208
Ref: mpi4py MPI Comm-Footnote-254350271
Ref: mpi4py MPI Comm-Footnote-255350334
Ref: mpi4py MPI Comm-Footnote-256350397
Ref: mpi4py MPI Comm-Footnote-257350460
Ref: mpi4py MPI Comm-Footnote-258350524
Ref: mpi4py MPI Comm-Footnote-259350587
Ref: mpi4py MPI Comm-Footnote-260350650
Ref: mpi4py MPI Comm-Footnote-261350714
Ref: mpi4py MPI Comm-Footnote-262350785
Ref: mpi4py MPI Comm-Footnote-263350848
Ref: mpi4py MPI Comm-Footnote-264350912
Ref: mpi4py MPI Comm-Footnote-265350975
Ref: mpi4py MPI Comm-Footnote-266351038
Ref: mpi4py MPI Comm-Footnote-267351102
Ref: mpi4py MPI Comm-Footnote-268351169
Ref: mpi4py MPI Comm-Footnote-269351241
Ref: mpi4py MPI Comm-Footnote-270351308
Ref: mpi4py MPI Comm-Footnote-271351375
Ref: mpi4py MPI Comm-Footnote-272351442
Ref: mpi4py MPI Comm-Footnote-273351505
Ref: mpi4py MPI Comm-Footnote-274351572
Ref: mpi4py MPI Comm-Footnote-275351636
Ref: mpi4py MPI Comm-Footnote-276351708
Ref: mpi4py MPI Comm-Footnote-277351775
Ref: mpi4py MPI Comm-Footnote-278351839
Ref: mpi4py MPI Comm-Footnote-279351902
Ref: mpi4py MPI Comm-Footnote-280351969
Ref: mpi4py MPI Comm-Footnote-281352036
Ref: mpi4py MPI Comm-Footnote-282352099
Ref: mpi4py MPI Comm-Footnote-283352162
Ref: mpi4py MPI Comm-Footnote-284352226
Ref: mpi4py MPI Comm-Footnote-285352289
Ref: mpi4py MPI Comm-Footnote-286352352
Ref: mpi4py MPI Comm-Footnote-287352416
Ref: mpi4py MPI Comm-Footnote-288352479
Ref: mpi4py MPI Comm-Footnote-289352542
Ref: mpi4py MPI Comm-Footnote-290352606
Ref: mpi4py MPI Comm-Footnote-291352673
Ref: mpi4py MPI Comm-Footnote-292352736
Ref: mpi4py MPI Comm-Footnote-293352799
Node: mpi4py MPI Datatype352863
Ref: reference/mpi4py MPI Datatype doc352989
Ref: 33a352989
Ref: reference/mpi4py MPI Datatype mpi4py-mpi-datatype352989
Ref: 33b352989
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype353044
Ref: d0353044
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype __new__353122
Ref: 33c353122
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Commit359641
Ref: 33d359641
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_contiguous359734
Ref: 33e359734
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_darray359897
Ref: 33f359897
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_f90_complex360524
Ref: 340360524
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_f90_integer360752
Ref: 341360752
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_f90_real360927
Ref: 342360927
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_hindexed361149
Ref: 343361149
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_hindexed_block361512
Ref: 344361512
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_hvector361880
Ref: 345361880
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_indexed362189
Ref: 346362189
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_indexed_block362492
Ref: 347362492
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_keyval362800
Ref: 348362800
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_resized363399
Ref: 349363399
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_struct363641
Ref: 34a363641
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_subarray364138
Ref: 34b364138
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Create_vector364593
Ref: 34c364593
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Delete_attr364880
Ref: 34d364880
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Dup365057
Ref: 34e365057
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Free365149
Ref: 34f365149
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Free_keyval365239
Ref: 350365239
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_attr365418
Ref: 351365418
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_contents365599
Ref: 352365599
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_envelope365831
Ref: 353365831
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_extent366046
Ref: 354366046
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_name366188
Ref: 355366188
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_size366301
Ref: 356366301
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_true_extent366450
Ref: 357366450
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Get_value_index366608
Ref: 358366608
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Match_size366874
Ref: 359366874
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack367136
Ref: 35a367136
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack_external367499
Ref: 35b367499
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack_external_size367933
Ref: 35c367933
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Pack_size368319
Ref: 35d368319
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Set_attr368634
Ref: 35e368634
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Set_name368875
Ref: 35f368875
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Unpack369039
Ref: 360369039
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype Unpack_external369406
Ref: 361369406
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype decode369844
Ref: 362369844
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype f2py370034
Ref: 363370034
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype free370165
Ref: 364370165
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype fromcode370286
Ref: 365370286
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype fromhandle370508
Ref: 366370508
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype py2f370693
Ref: 367370693
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype tocode370753
Ref: 368370753
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype combiner370961
Ref: 369370961
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype contents371012
Ref: 36a371012
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype envelope371063
Ref: 36b371063
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype extent371114
Ref: 36c371114
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype handle371161
Ref: 36d371161
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype is_named371212
Ref: 36e371212
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype is_predefined371274
Ref: 36f371274
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype lb371346
Ref: 370371346
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype name371394
Ref: 371371394
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype size371443
Ref: 372371443
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype true_extent371497
Ref: 373371497
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype true_lb371554
Ref: 374371554
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype true_ub371612
Ref: 375371612
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype typechar371670
Ref: 376371670
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype typestr371727
Ref: 377371727
Ref: reference/mpi4py MPI Datatype mpi4py MPI Datatype ub371780
Ref: 378371780
Ref: mpi4py MPI Datatype-Footnote-1371864
Ref: mpi4py MPI Datatype-Footnote-2371928
Ref: mpi4py MPI Datatype-Footnote-3371990
Ref: mpi4py MPI Datatype-Footnote-4372056
Ref: mpi4py MPI Datatype-Footnote-5372122
Ref: mpi4py MPI Datatype-Footnote-6372183
Ref: mpi4py MPI Datatype-Footnote-7372249
Ref: mpi4py MPI Datatype-Footnote-8372310
Ref: mpi4py MPI Datatype-Footnote-9372371
Ref: mpi4py MPI Datatype-Footnote-10372441
Ref: mpi4py MPI Datatype-Footnote-11372503
Ref: mpi4py MPI Datatype-Footnote-12372574
Ref: mpi4py MPI Datatype-Footnote-13372636
Ref: mpi4py MPI Datatype-Footnote-14372707
Ref: mpi4py MPI Datatype-Footnote-15372769
Ref: mpi4py MPI Datatype-Footnote-16372840
Ref: mpi4py MPI Datatype-Footnote-17372902
Ref: mpi4py MPI Datatype-Footnote-18372964
Ref: mpi4py MPI Datatype-Footnote-19373031
Ref: mpi4py MPI Datatype-Footnote-20373093
Ref: mpi4py MPI Datatype-Footnote-21373155
Ref: mpi4py MPI Datatype-Footnote-22373222
Ref: mpi4py MPI Datatype-Footnote-23373284
Ref: mpi4py MPI Datatype-Footnote-24373351
Ref: mpi4py MPI Datatype-Footnote-25373413
Ref: mpi4py MPI Datatype-Footnote-26373475
Ref: mpi4py MPI Datatype-Footnote-27373542
Ref: mpi4py MPI Datatype-Footnote-28373613
Ref: mpi4py MPI Datatype-Footnote-29373675
Ref: mpi4py MPI Datatype-Footnote-30373746
Ref: mpi4py MPI Datatype-Footnote-31373808
Ref: mpi4py MPI Datatype-Footnote-32373875
Ref: mpi4py MPI Datatype-Footnote-33373937
Ref: mpi4py MPI Datatype-Footnote-34374008
Ref: mpi4py MPI Datatype-Footnote-35374070
Ref: mpi4py MPI Datatype-Footnote-36374137
Ref: mpi4py MPI Datatype-Footnote-37374199
Ref: mpi4py MPI Datatype-Footnote-38374261
Ref: mpi4py MPI Datatype-Footnote-39374323
Ref: mpi4py MPI Datatype-Footnote-40374390
Ref: mpi4py MPI Datatype-Footnote-41374461
Ref: mpi4py MPI Datatype-Footnote-42374523
Ref: mpi4py MPI Datatype-Footnote-43374594
Ref: mpi4py MPI Datatype-Footnote-44374656
Ref: mpi4py MPI Datatype-Footnote-45374723
Ref: mpi4py MPI Datatype-Footnote-46374785
Ref: mpi4py MPI Datatype-Footnote-47374856
Ref: mpi4py MPI Datatype-Footnote-48374918
Ref: mpi4py MPI Datatype-Footnote-49374985
Ref: mpi4py MPI Datatype-Footnote-50375056
Ref: mpi4py MPI Datatype-Footnote-51375118
Ref: mpi4py MPI Datatype-Footnote-52375184
Ref: mpi4py MPI Datatype-Footnote-53375250
Ref: mpi4py MPI Datatype-Footnote-54375313
Ref: mpi4py MPI Datatype-Footnote-55375384
Ref: mpi4py MPI Datatype-Footnote-56375446
Ref: mpi4py MPI Datatype-Footnote-57375512
Ref: mpi4py MPI Datatype-Footnote-58375575
Ref: mpi4py MPI Datatype-Footnote-59375638
Ref: mpi4py MPI Datatype-Footnote-60375701
Ref: mpi4py MPI Datatype-Footnote-61375763
Ref: mpi4py MPI Datatype-Footnote-62375825
Ref: mpi4py MPI Datatype-Footnote-63375887
Ref: mpi4py MPI Datatype-Footnote-64375954
Ref: mpi4py MPI Datatype-Footnote-65376025
Ref: mpi4py MPI Datatype-Footnote-66376087
Ref: mpi4py MPI Datatype-Footnote-67376158
Ref: mpi4py MPI Datatype-Footnote-68376220
Ref: mpi4py MPI Datatype-Footnote-69376291
Ref: mpi4py MPI Datatype-Footnote-70376358
Ref: mpi4py MPI Datatype-Footnote-71376429
Ref: mpi4py MPI Datatype-Footnote-72376491
Ref: mpi4py MPI Datatype-Footnote-73376562
Ref: mpi4py MPI Datatype-Footnote-74376624
Ref: mpi4py MPI Datatype-Footnote-75376695
Ref: mpi4py MPI Datatype-Footnote-76376757
Ref: mpi4py MPI Datatype-Footnote-77376819
Ref: mpi4py MPI Datatype-Footnote-78376886
Ref: mpi4py MPI Datatype-Footnote-79376948
Ref: mpi4py MPI Datatype-Footnote-80377010
Ref: mpi4py MPI Datatype-Footnote-81377072
Ref: mpi4py MPI Datatype-Footnote-82377139
Ref: mpi4py MPI Datatype-Footnote-83377201
Ref: mpi4py MPI Datatype-Footnote-84377264
Ref: mpi4py MPI Datatype-Footnote-85377331
Ref: mpi4py MPI Datatype-Footnote-86377394
Ref: mpi4py MPI Datatype-Footnote-87377456
Ref: mpi4py MPI Datatype-Footnote-88377518
Ref: mpi4py MPI Datatype-Footnote-89377580
Ref: mpi4py MPI Datatype-Footnote-90377642
Ref: mpi4py MPI Datatype-Footnote-91377708
Ref: mpi4py MPI Datatype-Footnote-92377771
Ref: mpi4py MPI Datatype-Footnote-93377834
Ref: mpi4py MPI Datatype-Footnote-94377896
Ref: mpi4py MPI Datatype-Footnote-95377958
Ref: mpi4py MPI Datatype-Footnote-96378020
Ref: mpi4py MPI Datatype-Footnote-97378082
Ref: mpi4py MPI Datatype-Footnote-98378144
Ref: mpi4py MPI Datatype-Footnote-99378206
Ref: mpi4py MPI Datatype-Footnote-100378268
Ref: mpi4py MPI Datatype-Footnote-101378332
Ref: mpi4py MPI Datatype-Footnote-102378395
Ref: mpi4py MPI Datatype-Footnote-103378458
Ref: mpi4py MPI Datatype-Footnote-104378521
Ref: mpi4py MPI Datatype-Footnote-105378584
Ref: mpi4py MPI Datatype-Footnote-106378647
Ref: mpi4py MPI Datatype-Footnote-107378711
Ref: mpi4py MPI Datatype-Footnote-108378774
Ref: mpi4py MPI Datatype-Footnote-109378837
Ref: mpi4py MPI Datatype-Footnote-110378899
Ref: mpi4py MPI Datatype-Footnote-111378962
Ref: mpi4py MPI Datatype-Footnote-112379026
Ref: mpi4py MPI Datatype-Footnote-113379089
Ref: mpi4py MPI Datatype-Footnote-114379152
Ref: mpi4py MPI Datatype-Footnote-115379220
Ref: mpi4py MPI Datatype-Footnote-116379283
Ref: mpi4py MPI Datatype-Footnote-117379346
Ref: mpi4py MPI Datatype-Footnote-118379414
Ref: mpi4py MPI Datatype-Footnote-119379477
Ref: mpi4py MPI Datatype-Footnote-120379540
Ref: mpi4py MPI Datatype-Footnote-121379602
Ref: mpi4py MPI Datatype-Footnote-122379665
Ref: mpi4py MPI Datatype-Footnote-123379728
Ref: mpi4py MPI Datatype-Footnote-124379790
Ref: mpi4py MPI Datatype-Footnote-125379853
Ref: mpi4py MPI Datatype-Footnote-126379916
Ref: mpi4py MPI Datatype-Footnote-127379979
Ref: mpi4py MPI Datatype-Footnote-128380042
Ref: mpi4py MPI Datatype-Footnote-129380105
Ref: mpi4py MPI Datatype-Footnote-130380172
Ref: mpi4py MPI Datatype-Footnote-131380236
Ref: mpi4py MPI Datatype-Footnote-132380298
Ref: mpi4py MPI Datatype-Footnote-133380362
Ref: mpi4py MPI Datatype-Footnote-134380425
Ref: mpi4py MPI Datatype-Footnote-135380488
Ref: mpi4py MPI Datatype-Footnote-136380550
Ref: mpi4py MPI Datatype-Footnote-137380613
Ref: mpi4py MPI Datatype-Footnote-138380676
Ref: mpi4py MPI Datatype-Footnote-139380740
Ref: mpi4py MPI Datatype-Footnote-140380802
Ref: mpi4py MPI Datatype-Footnote-141380865
Ref: mpi4py MPI Datatype-Footnote-142380927
Ref: mpi4py MPI Datatype-Footnote-143380994
Ref: mpi4py MPI Datatype-Footnote-144381057
Ref: mpi4py MPI Datatype-Footnote-145381121
Ref: mpi4py MPI Datatype-Footnote-146381183
Ref: mpi4py MPI Datatype-Footnote-147381246
Ref: mpi4py MPI Datatype-Footnote-148381309
Node: mpi4py MPI Distgraphcomm381371
Ref: reference/mpi4py MPI Distgraphcomm doc381503
Ref: 379381503
Ref: reference/mpi4py MPI Distgraphcomm mpi4py-mpi-distgraphcomm381503
Ref: 37a381503
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm381568
Ref: 35381568
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm __new__381690
Ref: 37b381690
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm Get_dist_neighbors382219
Ref: 37c382219
Ref: reference/mpi4py MPI Distgraphcomm mpi4py MPI Distgraphcomm Get_dist_neighbors_count382469
Ref: 37d382469
Ref: mpi4py MPI Distgraphcomm-Footnote-1382658
Ref: mpi4py MPI Distgraphcomm-Footnote-2382720
Ref: mpi4py MPI Distgraphcomm-Footnote-3382786
Ref: mpi4py MPI Distgraphcomm-Footnote-4382848
Ref: mpi4py MPI Distgraphcomm-Footnote-5382909
Ref: mpi4py MPI Distgraphcomm-Footnote-6382970
Ref: mpi4py MPI Distgraphcomm-Footnote-7383031
Ref: mpi4py MPI Distgraphcomm-Footnote-8383092
Ref: mpi4py MPI Distgraphcomm-Footnote-9383154
Ref: mpi4py MPI Distgraphcomm-Footnote-10383215
Ref: mpi4py MPI Distgraphcomm-Footnote-11383277
Ref: mpi4py MPI Distgraphcomm-Footnote-12383339
Ref: mpi4py MPI Distgraphcomm-Footnote-13383401
Ref: mpi4py MPI Distgraphcomm-Footnote-14383464
Node: mpi4py MPI Errhandler383526
Ref: reference/mpi4py MPI Errhandler doc383654
Ref: 37e383654
Ref: reference/mpi4py MPI Errhandler mpi4py-mpi-errhandler383654
Ref: 37f383654
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler383713
Ref: d8383713
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler __new__383791
Ref: 380383791
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler Free384514
Ref: 381384514
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler f2py384607
Ref: 382384607
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler free384738
Ref: 383384738
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler fromhandle384843
Ref: 384384843
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler py2f385028
Ref: 385385028
Ref: reference/mpi4py MPI Errhandler mpi4py MPI Errhandler handle385147
Ref: 386385147
Ref: mpi4py MPI Errhandler-Footnote-1385234
Ref: mpi4py MPI Errhandler-Footnote-2385298
Ref: mpi4py MPI Errhandler-Footnote-3385360
Ref: mpi4py MPI Errhandler-Footnote-4385426
Ref: mpi4py MPI Errhandler-Footnote-5385488
Ref: mpi4py MPI Errhandler-Footnote-6385549
Ref: mpi4py MPI Errhandler-Footnote-7385611
Ref: mpi4py MPI Errhandler-Footnote-8385672
Node: mpi4py MPI File385733
Ref: reference/mpi4py MPI File doc385857
Ref: 387385857
Ref: reference/mpi4py MPI File mpi4py-mpi-file385857
Ref: 388385857
Ref: reference/mpi4py MPI File mpi4py MPI File385904
Ref: 84385904
Ref: reference/mpi4py MPI File mpi4py MPI File __new__385979
Ref: 389385979
Ref: reference/mpi4py MPI File mpi4py MPI File Call_errhandler393706
Ref: 38a393706
Ref: reference/mpi4py MPI File mpi4py MPI File Close393889
Ref: 86393889
Ref: reference/mpi4py MPI File mpi4py MPI File Create_errhandler393974
Ref: 38b393974
Ref: reference/mpi4py MPI File mpi4py MPI File Delete394274
Ref: 87394274
Ref: reference/mpi4py MPI File mpi4py MPI File Get_amode394547
Ref: 38c394547
Ref: reference/mpi4py MPI File mpi4py MPI File Get_atomicity394651
Ref: 38d394651
Ref: reference/mpi4py MPI File mpi4py MPI File Get_byte_offset394758
Ref: 38e394758
Ref: reference/mpi4py MPI File mpi4py MPI File Get_errhandler395053
Ref: 38f395053
Ref: reference/mpi4py MPI File mpi4py MPI File Get_group395181
Ref: 390395181
Ref: reference/mpi4py MPI File mpi4py MPI File Get_info395317
Ref: 391395317
Ref: reference/mpi4py MPI File mpi4py MPI File Get_position395436
Ref: 392395436
Ref: reference/mpi4py MPI File mpi4py MPI File Get_position_shared395682
Ref: 393395682
Ref: reference/mpi4py MPI File mpi4py MPI File Get_size395926
Ref: 394395926
Ref: reference/mpi4py MPI File mpi4py MPI File Get_type_extent396022
Ref: 395396022
Ref: reference/mpi4py MPI File mpi4py MPI File Get_view396215
Ref: 89396215
Ref: reference/mpi4py MPI File mpi4py MPI File Iread396381
Ref: 396396381
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_all396570
Ref: 397396570
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_at396774
Ref: 398396774
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_at_all397021
Ref: 399397021
Ref: reference/mpi4py MPI File mpi4py MPI File Iread_shared397283
Ref: 39a397283
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite397475
Ref: 39b397475
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_all397666
Ref: 39c397666
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_at397872
Ref: 39d397872
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_at_all398121
Ref: 39e398121
Ref: reference/mpi4py MPI File mpi4py MPI File Iwrite_shared398385
Ref: 39f398385
Ref: reference/mpi4py MPI File mpi4py MPI File Open398579
Ref: 85398579
Ref: reference/mpi4py MPI File mpi4py MPI File Preallocate398976
Ref: 3a0398976
Ref: reference/mpi4py MPI File mpi4py MPI File Read399141
Ref: 3a1399141
Ref: reference/mpi4py MPI File mpi4py MPI File Read_all399402
Ref: 3a2399402
Ref: reference/mpi4py MPI File mpi4py MPI File Read_all_begin399678
Ref: 3a3399678
Ref: reference/mpi4py MPI File mpi4py MPI File Read_all_end399879
Ref: 3a4399879
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at400186
Ref: 3a5400186
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at_all400489
Ref: 3a6400489
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at_all_begin400807
Ref: 3a7400807
Ref: reference/mpi4py MPI File mpi4py MPI File Read_at_all_end401066
Ref: 3a8401066
Ref: reference/mpi4py MPI File mpi4py MPI File Read_ordered401358
Ref: 3a9401358
Ref: reference/mpi4py MPI File mpi4py MPI File Read_ordered_begin401634
Ref: 3aa401634
Ref: reference/mpi4py MPI File mpi4py MPI File Read_ordered_end401835
Ref: 3ab401835
Ref: reference/mpi4py MPI File mpi4py MPI File Read_shared402132
Ref: 3ac402132
Ref: reference/mpi4py MPI File mpi4py MPI File Seek402396
Ref: 3ad402396
Ref: reference/mpi4py MPI File mpi4py MPI File Seek_shared402628
Ref: 3ae402628
Ref: reference/mpi4py MPI File mpi4py MPI File Set_atomicity402863
Ref: 3af402863
Ref: reference/mpi4py MPI File mpi4py MPI File Set_errhandler403017
Ref: 3b0403017
Ref: reference/mpi4py MPI File mpi4py MPI File Set_info403207
Ref: 3b1403207
Ref: reference/mpi4py MPI File mpi4py MPI File Set_size403392
Ref: 3b2403392
Ref: reference/mpi4py MPI File mpi4py MPI File Set_view403535
Ref: 88403535
Ref: reference/mpi4py MPI File mpi4py MPI File Sync403977
Ref: 3b3403977
Ref: reference/mpi4py MPI File mpi4py MPI File Write404126
Ref: 3b4404126
Ref: reference/mpi4py MPI File mpi4py MPI File Write_all404389
Ref: 3b5404389
Ref: reference/mpi4py MPI File mpi4py MPI File Write_all_begin404667
Ref: 3b6404667
Ref: reference/mpi4py MPI File mpi4py MPI File Write_all_end404870
Ref: 3b7404870
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at405179
Ref: 3b8405179
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at_all405484
Ref: 3b9405484
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at_all_begin405804
Ref: 3ba405804
Ref: reference/mpi4py MPI File mpi4py MPI File Write_at_all_end406065
Ref: 3bb406065
Ref: reference/mpi4py MPI File mpi4py MPI File Write_ordered406359
Ref: 3bc406359
Ref: reference/mpi4py MPI File mpi4py MPI File Write_ordered_begin406637
Ref: 3bd406637
Ref: reference/mpi4py MPI File mpi4py MPI File Write_ordered_end406840
Ref: 3be406840
Ref: reference/mpi4py MPI File mpi4py MPI File Write_shared407139
Ref: 3bf407139
Ref: reference/mpi4py MPI File mpi4py MPI File f2py407406
Ref: 3c0407406
Ref: reference/mpi4py MPI File mpi4py MPI File free407533
Ref: 3c1407533
Ref: reference/mpi4py MPI File mpi4py MPI File fromhandle407640
Ref: 3c2407640
Ref: reference/mpi4py MPI File mpi4py MPI File py2f407821
Ref: 3c3407821
Ref: reference/mpi4py MPI File mpi4py MPI File amode407942
Ref: 3c4407942
Ref: reference/mpi4py MPI File mpi4py MPI File atomicity407993
Ref: 3c5407993
Ref: reference/mpi4py MPI File mpi4py MPI File group408051
Ref: 3c6408051
Ref: reference/mpi4py MPI File mpi4py MPI File group_rank408096
Ref: 3c7408096
Ref: reference/mpi4py MPI File mpi4py MPI File group_size408151
Ref: 3c8408151
Ref: reference/mpi4py MPI File mpi4py MPI File handle408206
Ref: 3c9408206
Ref: reference/mpi4py MPI File mpi4py MPI File info408257
Ref: 3ca408257
Ref: reference/mpi4py MPI File mpi4py MPI File size408306
Ref: 3cb408306
Ref: mpi4py MPI File-Footnote-1408396
Ref: mpi4py MPI File-Footnote-2408460
Ref: mpi4py MPI File-Footnote-3408522
Ref: mpi4py MPI File-Footnote-4408588
Ref: mpi4py MPI File-Footnote-5408649
Ref: mpi4py MPI File-Footnote-6408711
Ref: mpi4py MPI File-Footnote-7408773
Ref: mpi4py MPI File-Footnote-8408843
Ref: mpi4py MPI File-Footnote-9408904
Ref: mpi4py MPI File-Footnote-10408966
Ref: mpi4py MPI File-Footnote-11409029
Ref: mpi4py MPI File-Footnote-12409090
Ref: mpi4py MPI File-Footnote-13409153
Ref: mpi4py MPI File-Footnote-14409216
Ref: mpi4py MPI File-Footnote-15409278
Ref: mpi4py MPI File-Footnote-16409341
Ref: mpi4py MPI File-Footnote-17409403
Ref: mpi4py MPI File-Footnote-18409465
Ref: mpi4py MPI File-Footnote-19409527
Ref: mpi4py MPI File-Footnote-20409589
Ref: mpi4py MPI File-Footnote-21409651
Ref: mpi4py MPI File-Footnote-22409713
Ref: mpi4py MPI File-Footnote-23409776
Ref: mpi4py MPI File-Footnote-24409838
Ref: mpi4py MPI File-Footnote-25409899
Ref: mpi4py MPI File-Footnote-26409961
Ref: mpi4py MPI File-Footnote-27410023
Ref: mpi4py MPI File-Footnote-28410085
Ref: mpi4py MPI File-Footnote-29410147
Ref: mpi4py MPI File-Footnote-30410210
Ref: mpi4py MPI File-Footnote-31410271
Ref: mpi4py MPI File-Footnote-32410334
Ref: mpi4py MPI File-Footnote-33410396
Ref: mpi4py MPI File-Footnote-34410463
Ref: mpi4py MPI File-Footnote-35410525
Ref: mpi4py MPI File-Footnote-36410588
Ref: mpi4py MPI File-Footnote-37410651
Ref: mpi4py MPI File-Footnote-38410714
Ref: mpi4py MPI File-Footnote-39410777
Ref: mpi4py MPI File-Footnote-40410840
Ref: mpi4py MPI File-Footnote-41410903
Ref: mpi4py MPI File-Footnote-42410966
Ref: mpi4py MPI File-Footnote-43411029
Ref: mpi4py MPI File-Footnote-44411091
Ref: mpi4py MPI File-Footnote-45411154
Ref: mpi4py MPI File-Footnote-46411217
Ref: mpi4py MPI File-Footnote-47411279
Ref: mpi4py MPI File-Footnote-48411342
Ref: mpi4py MPI File-Footnote-49411405
Ref: mpi4py MPI File-Footnote-50411467
Ref: mpi4py MPI File-Footnote-51411530
Ref: mpi4py MPI File-Footnote-52411593
Ref: mpi4py MPI File-Footnote-53411656
Ref: mpi4py MPI File-Footnote-54411719
Ref: mpi4py MPI File-Footnote-55411782
Ref: mpi4py MPI File-Footnote-56411845
Ref: mpi4py MPI File-Footnote-57411908
Ref: mpi4py MPI File-Footnote-58411971
Ref: mpi4py MPI File-Footnote-59412034
Ref: mpi4py MPI File-Footnote-60412097
Ref: mpi4py MPI File-Footnote-61412159
Ref: mpi4py MPI File-Footnote-62412221
Ref: mpi4py MPI File-Footnote-63412284
Ref: mpi4py MPI File-Footnote-64412346
Ref: mpi4py MPI File-Footnote-65412408
Ref: mpi4py MPI File-Footnote-66412471
Ref: mpi4py MPI File-Footnote-67412534
Ref: mpi4py MPI File-Footnote-68412597
Ref: mpi4py MPI File-Footnote-69412660
Ref: mpi4py MPI File-Footnote-70412723
Ref: mpi4py MPI File-Footnote-71412785
Ref: mpi4py MPI File-Footnote-72412848
Ref: mpi4py MPI File-Footnote-73412910
Ref: mpi4py MPI File-Footnote-74412973
Ref: mpi4py MPI File-Footnote-75413034
Ref: mpi4py MPI File-Footnote-76413097
Ref: mpi4py MPI File-Footnote-77413160
Ref: mpi4py MPI File-Footnote-78413223
Ref: mpi4py MPI File-Footnote-79413286
Ref: mpi4py MPI File-Footnote-80413349
Ref: mpi4py MPI File-Footnote-81413412
Ref: mpi4py MPI File-Footnote-82413475
Ref: mpi4py MPI File-Footnote-83413538
Ref: mpi4py MPI File-Footnote-84413601
Ref: mpi4py MPI File-Footnote-85413663
Ref: mpi4py MPI File-Footnote-86413726
Ref: mpi4py MPI File-Footnote-87413789
Ref: mpi4py MPI File-Footnote-88413851
Ref: mpi4py MPI File-Footnote-89413914
Ref: mpi4py MPI File-Footnote-90413977
Ref: mpi4py MPI File-Footnote-91414039
Ref: mpi4py MPI File-Footnote-92414102
Ref: mpi4py MPI File-Footnote-93414165
Ref: mpi4py MPI File-Footnote-94414228
Ref: mpi4py MPI File-Footnote-95414291
Ref: mpi4py MPI File-Footnote-96414354
Ref: mpi4py MPI File-Footnote-97414417
Ref: mpi4py MPI File-Footnote-98414480
Ref: mpi4py MPI File-Footnote-99414543
Ref: mpi4py MPI File-Footnote-100414606
Ref: mpi4py MPI File-Footnote-101414670
Ref: mpi4py MPI File-Footnote-102414733
Ref: mpi4py MPI File-Footnote-103414797
Ref: mpi4py MPI File-Footnote-104414860
Node: mpi4py MPI Graphcomm414923
Ref: reference/mpi4py MPI Graphcomm doc415045
Ref: 3cc415045
Ref: reference/mpi4py MPI Graphcomm mpi4py-mpi-graphcomm415045
Ref: 3cd415045
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm415102
Ref: 34415102
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm __new__415216
Ref: 3ce415216
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_dims416572
Ref: 3cf416572
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_neighbors416701
Ref: 3d0416701
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_neighbors_count416875
Ref: 3d1416875
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm Get_topo417049
Ref: 3d2417049
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm dims417248
Ref: 3d3417248
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm edges417312
Ref: 3d4417312
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm index417357
Ref: 3d5417357
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm nedges417402
Ref: 3d6417402
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm neighbors417458
Ref: 3d7417458
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm nneighbors417511
Ref: 3d8417511
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm nnodes417575
Ref: 3d9417575
Ref: reference/mpi4py MPI Graphcomm mpi4py MPI Graphcomm topo417631
Ref: 3da417631
Ref: mpi4py MPI Graphcomm-Footnote-1417726
Ref: mpi4py MPI Graphcomm-Footnote-2417788
Ref: mpi4py MPI Graphcomm-Footnote-3417854
Ref: mpi4py MPI Graphcomm-Footnote-4417916
Ref: mpi4py MPI Graphcomm-Footnote-5417977
Ref: mpi4py MPI Graphcomm-Footnote-6418038
Ref: mpi4py MPI Graphcomm-Footnote-7418099
Ref: mpi4py MPI Graphcomm-Footnote-8418160
Ref: mpi4py MPI Graphcomm-Footnote-9418221
Ref: mpi4py MPI Graphcomm-Footnote-10418282
Ref: mpi4py MPI Graphcomm-Footnote-11418344
Ref: mpi4py MPI Graphcomm-Footnote-12418407
Ref: mpi4py MPI Graphcomm-Footnote-13418469
Ref: mpi4py MPI Graphcomm-Footnote-14418531
Ref: mpi4py MPI Graphcomm-Footnote-15418593
Node: mpi4py MPI Grequest418655
Ref: reference/mpi4py MPI Grequest doc418778
Ref: 3db418778
Ref: reference/mpi4py MPI Grequest mpi4py-mpi-grequest418778
Ref: 3dc418778
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest418835
Ref: d2418835
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest __new__418934
Ref: 3dd418934
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest Complete419543
Ref: 3de419543
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest Start419665
Ref: 3df419665
Ref: reference/mpi4py MPI Grequest mpi4py MPI Grequest complete420465
Ref: 3e0420465
Ref: mpi4py MPI Grequest-Footnote-1420676
Ref: mpi4py MPI Grequest-Footnote-2420738
Ref: mpi4py MPI Grequest-Footnote-3420804
Ref: mpi4py MPI Grequest-Footnote-4420866
Ref: mpi4py MPI Grequest-Footnote-5420936
Ref: mpi4py MPI Grequest-Footnote-6420998
Ref: mpi4py MPI Grequest-Footnote-7421060
Ref: mpi4py MPI Grequest-Footnote-8421130
Ref: mpi4py MPI Grequest-Footnote-9421192
Ref: mpi4py MPI Grequest-Footnote-10421254
Ref: mpi4py MPI Grequest-Footnote-11421325
Ref: mpi4py MPI Grequest-Footnote-12421388
Ref: mpi4py MPI Grequest-Footnote-13421451
Ref: mpi4py MPI Grequest-Footnote-14421514
Ref: mpi4py MPI Grequest-Footnote-15421580
Ref: mpi4py MPI Grequest-Footnote-16421643
Ref: mpi4py MPI Grequest-Footnote-17421705
Ref: mpi4py MPI Grequest-Footnote-18421766
Ref: mpi4py MPI Grequest-Footnote-19421832
Ref: mpi4py MPI Grequest-Footnote-20421895
Ref: mpi4py MPI Grequest-Footnote-21421961
Node: mpi4py MPI Group422024
Ref: reference/mpi4py MPI Group doc422149
Ref: 3e1422149
Ref: reference/mpi4py MPI Group mpi4py-mpi-group422149
Ref: 3e2422149
Ref: reference/mpi4py MPI Group mpi4py MPI Group422200
Ref: 28422200
Ref: reference/mpi4py MPI Group mpi4py MPI Group __new__422278
Ref: 3e3422278
Ref: reference/mpi4py MPI Group mpi4py MPI Group Compare424639
Ref: 3e4424639
Ref: reference/mpi4py MPI Group mpi4py MPI Group Create_from_session_pset424791
Ref: 3e5424791
Ref: reference/mpi4py MPI Group mpi4py MPI Group Difference425091
Ref: 2b425091
Ref: reference/mpi4py MPI Group mpi4py MPI Group Dup425376
Ref: 3e6425376
Ref: reference/mpi4py MPI Group mpi4py MPI Group Excl425464
Ref: 3e7425464
Ref: reference/mpi4py MPI Group mpi4py MPI Group Free425659
Ref: 3e8425659
Ref: reference/mpi4py MPI Group mpi4py MPI Group Get_rank425744
Ref: 3e9425744
Ref: reference/mpi4py MPI Group mpi4py MPI Group Get_size425862
Ref: 3ea425862
Ref: reference/mpi4py MPI Group mpi4py MPI Group Incl425979
Ref: 3eb425979
Ref: reference/mpi4py MPI Group mpi4py MPI Group Intersection426175
Ref: 2a426175
Ref: reference/mpi4py MPI Group mpi4py MPI Group Range_excl426475
Ref: 3ec426475
Ref: reference/mpi4py MPI Group mpi4py MPI Group Range_incl426743
Ref: 3ed426743
Ref: reference/mpi4py MPI Group mpi4py MPI Group Translate_ranks427011
Ref: 3ee427011
Ref: reference/mpi4py MPI Group mpi4py MPI Group Union427347
Ref: 29427347
Ref: reference/mpi4py MPI Group mpi4py MPI Group f2py427623
Ref: 3ef427623
Ref: reference/mpi4py MPI Group mpi4py MPI Group free427750
Ref: 3f0427750
Ref: reference/mpi4py MPI Group mpi4py MPI Group fromhandle427870
Ref: 3f1427870
Ref: reference/mpi4py MPI Group mpi4py MPI Group py2f428051
Ref: 3f2428051
Ref: reference/mpi4py MPI Group mpi4py MPI Group handle428171
Ref: 3f3428171
Ref: reference/mpi4py MPI Group mpi4py MPI Group rank428222
Ref: 3f4428222
Ref: reference/mpi4py MPI Group mpi4py MPI Group size428281
Ref: 3f5428281
Ref: mpi4py MPI Group-Footnote-1428375
Ref: mpi4py MPI Group-Footnote-2428439
Ref: mpi4py MPI Group-Footnote-3428501
Ref: mpi4py MPI Group-Footnote-4428567
Ref: mpi4py MPI Group-Footnote-5428628
Ref: mpi4py MPI Group-Footnote-6428688
Ref: mpi4py MPI Group-Footnote-7428754
Ref: mpi4py MPI Group-Footnote-8428820
Ref: mpi4py MPI Group-Footnote-9428886
Ref: mpi4py MPI Group-Footnote-10428956
Ref: mpi4py MPI Group-Footnote-11429018
Ref: mpi4py MPI Group-Footnote-12429085
Ref: mpi4py MPI Group-Footnote-13429148
Ref: mpi4py MPI Group-Footnote-14429210
Ref: mpi4py MPI Group-Footnote-15429272
Ref: mpi4py MPI Group-Footnote-16429343
Ref: mpi4py MPI Group-Footnote-17429405
Ref: mpi4py MPI Group-Footnote-18429472
Ref: mpi4py MPI Group-Footnote-19429539
Ref: mpi4py MPI Group-Footnote-20429610
Ref: mpi4py MPI Group-Footnote-21429673
Ref: mpi4py MPI Group-Footnote-22429735
Ref: mpi4py MPI Group-Footnote-23429797
Ref: mpi4py MPI Group-Footnote-24429859
Ref: mpi4py MPI Group-Footnote-25429926
Ref: mpi4py MPI Group-Footnote-26429997
Ref: mpi4py MPI Group-Footnote-27430060
Ref: mpi4py MPI Group-Footnote-28430122
Ref: mpi4py MPI Group-Footnote-29430184
Ref: mpi4py MPI Group-Footnote-30430246
Ref: mpi4py MPI Group-Footnote-31430313
Ref: mpi4py MPI Group-Footnote-32430384
Ref: mpi4py MPI Group-Footnote-33430446
Ref: mpi4py MPI Group-Footnote-34430509
Ref: mpi4py MPI Group-Footnote-35430572
Ref: mpi4py MPI Group-Footnote-36430634
Ref: mpi4py MPI Group-Footnote-37430696
Ref: mpi4py MPI Group-Footnote-38430763
Ref: mpi4py MPI Group-Footnote-39430825
Ref: mpi4py MPI Group-Footnote-40430888
Ref: mpi4py MPI Group-Footnote-41430950
Node: mpi4py MPI InPlaceType431012
Ref: reference/mpi4py MPI InPlaceType doc431133
Ref: 3f6431133
Ref: reference/mpi4py MPI InPlaceType mpi4py-mpi-inplacetype431133
Ref: 3f7431133
Ref: reference/mpi4py MPI InPlaceType mpi4py MPI InPlaceType431196
Ref: fd431196
Ref: reference/mpi4py MPI InPlaceType mpi4py MPI InPlaceType __new__431285
Ref: 3f8431285
Ref: mpi4py MPI InPlaceType-Footnote-1431393
Ref: mpi4py MPI InPlaceType-Footnote-2431454
Node: mpi4py MPI Info431520
Ref: reference/mpi4py MPI Info doc431645
Ref: 3f9431645
Ref: reference/mpi4py MPI Info mpi4py-mpi-info431645
Ref: 3fa431645
Ref: reference/mpi4py MPI Info mpi4py MPI Info431694
Ref: d4431694
Ref: reference/mpi4py MPI Info mpi4py MPI Info __new__431764
Ref: 3fb431764
Ref: reference/mpi4py MPI Info mpi4py MPI Info Create434047
Ref: 3fc434047
Ref: reference/mpi4py MPI Info mpi4py MPI Info Create_env434389
Ref: 3fd434389
Ref: reference/mpi4py MPI Info mpi4py MPI Info Delete434613
Ref: 3fe434613
Ref: reference/mpi4py MPI Info mpi4py MPI Info Dup434771
Ref: 3ff434771
Ref: reference/mpi4py MPI Info mpi4py MPI Info Free434876
Ref: 400434876
Ref: reference/mpi4py MPI Info mpi4py MPI Info Get434968
Ref: 401434968
Ref: reference/mpi4py MPI Info mpi4py MPI Info Get_nkeys435137
Ref: 402435137
Ref: reference/mpi4py MPI Info mpi4py MPI Info Get_nthkey435265
Ref: 403435265
Ref: reference/mpi4py MPI Info mpi4py MPI Info Set435423
Ref: 404435423
Ref: reference/mpi4py MPI Info mpi4py MPI Info clear435638
Ref: 405435638
Ref: reference/mpi4py MPI Info mpi4py MPI Info copy435726
Ref: 406435726
Ref: reference/mpi4py MPI Info mpi4py MPI Info f2py435812
Ref: 407435812
Ref: reference/mpi4py MPI Info mpi4py MPI Info free435938
Ref: 408435938
Ref: reference/mpi4py MPI Info mpi4py MPI Info fromhandle436058
Ref: 409436058
Ref: reference/mpi4py MPI Info mpi4py MPI Info get436238
Ref: 40a436238
Ref: reference/mpi4py MPI Info mpi4py MPI Info items436475
Ref: 40b436475
Ref: reference/mpi4py MPI Info mpi4py MPI Info keys436598
Ref: 40c436598
Ref: reference/mpi4py MPI Info mpi4py MPI Info pop436699
Ref: 40d436699
Ref: reference/mpi4py MPI Info mpi4py MPI Info popitem436899
Ref: 40e436899
Ref: reference/mpi4py MPI Info mpi4py MPI Info py2f437008
Ref: 40f437008
Ref: reference/mpi4py MPI Info mpi4py MPI Info update437067
Ref: 410437067
Ref: reference/mpi4py MPI Info mpi4py MPI Info values437446
Ref: 411437446
Ref: reference/mpi4py MPI Info mpi4py MPI Info handle437612
Ref: 412437612
Ref: mpi4py MPI Info-Footnote-1437699
Ref: mpi4py MPI Info-Footnote-2437763
Ref: mpi4py MPI Info-Footnote-3437825
Ref: mpi4py MPI Info-Footnote-4437891
Ref: mpi4py MPI Info-Footnote-5437960
Ref: mpi4py MPI Info-Footnote-6438020
Ref: mpi4py MPI Info-Footnote-7438080
Ref: mpi4py MPI Info-Footnote-8438150
Ref: mpi4py MPI Info-Footnote-9438212
Ref: mpi4py MPI Info-Footnote-10438272
Ref: mpi4py MPI Info-Footnote-11438333
Ref: mpi4py MPI Info-Footnote-12438396
Ref: mpi4py MPI Info-Footnote-13438463
Ref: mpi4py MPI Info-Footnote-14438534
Ref: mpi4py MPI Info-Footnote-15438595
Ref: mpi4py MPI Info-Footnote-16438658
Ref: mpi4py MPI Info-Footnote-17438725
Ref: mpi4py MPI Info-Footnote-18438786
Ref: mpi4py MPI Info-Footnote-19438849
Ref: mpi4py MPI Info-Footnote-20438916
Ref: mpi4py MPI Info-Footnote-21438979
Ref: mpi4py MPI Info-Footnote-22439040
Ref: mpi4py MPI Info-Footnote-23439101
Ref: mpi4py MPI Info-Footnote-24439164
Ref: mpi4py MPI Info-Footnote-25439226
Ref: mpi4py MPI Info-Footnote-26439288
Ref: mpi4py MPI Info-Footnote-27439349
Ref: mpi4py MPI Info-Footnote-28439410
Ref: mpi4py MPI Info-Footnote-29439471
Ref: mpi4py MPI Info-Footnote-30439534
Ref: mpi4py MPI Info-Footnote-31439597
Ref: mpi4py MPI Info-Footnote-32439664
Ref: mpi4py MPI Info-Footnote-33439726
Ref: mpi4py MPI Info-Footnote-34439789
Ref: mpi4py MPI Info-Footnote-35439851
Ref: mpi4py MPI Info-Footnote-36439912
Ref: mpi4py MPI Info-Footnote-37439973
Ref: mpi4py MPI Info-Footnote-38440036
Ref: mpi4py MPI Info-Footnote-39440097
Ref: mpi4py MPI Info-Footnote-40440160
Ref: mpi4py MPI Info-Footnote-41440222
Ref: mpi4py MPI Info-Footnote-42440285
Ref: mpi4py MPI Info-Footnote-43440346
Ref: mpi4py MPI Info-Footnote-44440407
Ref: mpi4py MPI Info-Footnote-45440469
Ref: mpi4py MPI Info-Footnote-46440530
Ref: mpi4py MPI Info-Footnote-47440591
Ref: mpi4py MPI Info-Footnote-48440652
Ref: mpi4py MPI Info-Footnote-49440713
Ref: mpi4py MPI Info-Footnote-50440776
Ref: mpi4py MPI Info-Footnote-51440837
Ref: mpi4py MPI Info-Footnote-52440898
Ref: mpi4py MPI Info-Footnote-53440960
Ref: mpi4py MPI Info-Footnote-54441030
Ref: mpi4py MPI Info-Footnote-55441091
Ref: mpi4py MPI Info-Footnote-56441152
Ref: mpi4py MPI Info-Footnote-57441223
Ref: mpi4py MPI Info-Footnote-58441286
Ref: mpi4py MPI Info-Footnote-59441347
Ref: mpi4py MPI Info-Footnote-60441408
Ref: mpi4py MPI Info-Footnote-61441469
Ref: mpi4py MPI Info-Footnote-62441532
Ref: mpi4py MPI Info-Footnote-63441594
Node: mpi4py MPI Intercomm441655
Ref: reference/mpi4py MPI Intercomm doc441778
Ref: 413441778
Ref: reference/mpi4py MPI Intercomm mpi4py-mpi-intercomm441778
Ref: 414441778
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm441837
Ref: 20441837
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm __new__441924
Ref: 415441924
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Create_from_groups442843
Ref: 416442843
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Get_remote_group443504
Ref: 417443504
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Get_remote_size443669
Ref: 418443669
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm Merge443780
Ref: 32443780
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm remote_group444031
Ref: 419444031
Ref: reference/mpi4py MPI Intercomm mpi4py MPI Intercomm remote_size444090
Ref: 41a444090
Ref: mpi4py MPI Intercomm-Footnote-1444198
Ref: mpi4py MPI Intercomm-Footnote-2444260
Ref: mpi4py MPI Intercomm-Footnote-3444326
Ref: mpi4py MPI Intercomm-Footnote-4444387
Ref: mpi4py MPI Intercomm-Footnote-5444448
Ref: mpi4py MPI Intercomm-Footnote-6444508
Ref: mpi4py MPI Intercomm-Footnote-7444570
Ref: mpi4py MPI Intercomm-Footnote-8444631
Node: mpi4py MPI Intracomm444693
Ref: reference/mpi4py MPI Intracomm doc444819
Ref: 41b444819
Ref: reference/mpi4py MPI Intracomm mpi4py-mpi-intracomm444819
Ref: 41c444819
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm444878
Ref: 1f444878
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm __new__444965
Ref: 41d444965
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Accept447334
Ref: 6f447334
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Cart_map447648
Ref: 41e447648
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Connect447967
Ref: 71447967
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_cart448282
Ref: 36448282
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_dist_graph448647
Ref: 41f448647
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_dist_graph_adjacent449272
Ref: 420449272
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_from_group449963
Ref: 421449963
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_graph450412
Ref: 37450412
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_group450750
Ref: 2d450750
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Create_intercomm450992
Ref: 31450992
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Exscan451379
Ref: 60451379
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Exscan_init451689
Ref: 422451689
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Graph_map452087
Ref: 423452087
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Iexscan452383
Ref: 424452383
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Iscan452704
Ref: 425452704
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Scan453023
Ref: 5f453023
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Scan_init453331
Ref: 426453331
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Spawn453727
Ref: 6b453727
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm Spawn_multiple454287
Ref: 427454287
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm exscan455072
Ref: 64455072
Ref: reference/mpi4py MPI Intracomm mpi4py MPI Intracomm scan455381
Ref: 63455381
Ref: mpi4py MPI Intracomm-Footnote-1455724
Ref: mpi4py MPI Intracomm-Footnote-2455786
Ref: mpi4py MPI Intracomm-Footnote-3455852
Ref: mpi4py MPI Intracomm-Footnote-4455912
Ref: mpi4py MPI Intracomm-Footnote-5455973
Ref: mpi4py MPI Intracomm-Footnote-6456043
Ref: mpi4py MPI Intracomm-Footnote-7456104
Ref: mpi4py MPI Intracomm-Footnote-8456174
Ref: mpi4py MPI Intracomm-Footnote-9456236
Ref: mpi4py MPI Intracomm-Footnote-10456298
Ref: mpi4py MPI Intracomm-Footnote-11456360
Ref: mpi4py MPI Intracomm-Footnote-12456421
Ref: mpi4py MPI Intracomm-Footnote-13456483
Ref: mpi4py MPI Intracomm-Footnote-14456554
Ref: mpi4py MPI Intracomm-Footnote-15456616
Ref: mpi4py MPI Intracomm-Footnote-16456687
Ref: mpi4py MPI Intracomm-Footnote-17456750
Ref: mpi4py MPI Intracomm-Footnote-18456813
Ref: mpi4py MPI Intracomm-Footnote-19456876
Ref: mpi4py MPI Intracomm-Footnote-20456947
Ref: mpi4py MPI Intracomm-Footnote-21457009
Ref: mpi4py MPI Intracomm-Footnote-22457080
Ref: mpi4py MPI Intracomm-Footnote-23457142
Ref: mpi4py MPI Intracomm-Footnote-24457213
Ref: mpi4py MPI Intracomm-Footnote-25457275
Ref: mpi4py MPI Intracomm-Footnote-26457346
Ref: mpi4py MPI Intracomm-Footnote-27457408
Ref: mpi4py MPI Intracomm-Footnote-28457471
Ref: mpi4py MPI Intracomm-Footnote-29457534
Ref: mpi4py MPI Intracomm-Footnote-30457605
Ref: mpi4py MPI Intracomm-Footnote-31457667
Ref: mpi4py MPI Intracomm-Footnote-32457738
Ref: mpi4py MPI Intracomm-Footnote-33457800
Ref: mpi4py MPI Intracomm-Footnote-34457871
Ref: mpi4py MPI Intracomm-Footnote-35457933
Ref: mpi4py MPI Intracomm-Footnote-36457996
Ref: mpi4py MPI Intracomm-Footnote-37458067
Ref: mpi4py MPI Intracomm-Footnote-38458129
Ref: mpi4py MPI Intracomm-Footnote-39458192
Ref: mpi4py MPI Intracomm-Footnote-40458255
Ref: mpi4py MPI Intracomm-Footnote-41458316
Ref: mpi4py MPI Intracomm-Footnote-42458379
Ref: mpi4py MPI Intracomm-Footnote-43458450
Ref: mpi4py MPI Intracomm-Footnote-44458512
Ref: mpi4py MPI Intracomm-Footnote-45458583
Ref: mpi4py MPI Intracomm-Footnote-46458645
Ref: mpi4py MPI Intracomm-Footnote-47458708
Ref: mpi4py MPI Intracomm-Footnote-48458770
Ref: mpi4py MPI Intracomm-Footnote-49458832
Ref: mpi4py MPI Intracomm-Footnote-50458894
Ref: mpi4py MPI Intracomm-Footnote-51458956
Ref: mpi4py MPI Intracomm-Footnote-52459019
Ref: mpi4py MPI Intracomm-Footnote-53459090
Ref: mpi4py MPI Intracomm-Footnote-54459152
Ref: mpi4py MPI Intracomm-Footnote-55459223
Ref: mpi4py MPI Intracomm-Footnote-56459285
Ref: mpi4py MPI Intracomm-Footnote-57459347
Ref: mpi4py MPI Intracomm-Footnote-58459410
Ref: mpi4py MPI Intracomm-Footnote-59459471
Ref: mpi4py MPI Intracomm-Footnote-60459542
Ref: mpi4py MPI Intracomm-Footnote-61459603
Ref: mpi4py MPI Intracomm-Footnote-62459666
Ref: mpi4py MPI Intracomm-Footnote-63459728
Ref: mpi4py MPI Intracomm-Footnote-64459790
Ref: mpi4py MPI Intracomm-Footnote-65459852
Ref: mpi4py MPI Intracomm-Footnote-66459914
Ref: mpi4py MPI Intracomm-Footnote-67459977
Ref: mpi4py MPI Intracomm-Footnote-68460048
Ref: mpi4py MPI Intracomm-Footnote-69460109
Ref: mpi4py MPI Intracomm-Footnote-70460180
Ref: mpi4py MPI Intracomm-Footnote-71460251
Ref: mpi4py MPI Intracomm-Footnote-72460312
Ref: mpi4py MPI Intracomm-Footnote-73460375
Ref: mpi4py MPI Intracomm-Footnote-74460446
Ref: mpi4py MPI Intracomm-Footnote-75460508
Ref: mpi4py MPI Intracomm-Footnote-76460571
Ref: mpi4py MPI Intracomm-Footnote-77460642
Ref: mpi4py MPI Intracomm-Footnote-78460704
Ref: mpi4py MPI Intracomm-Footnote-79460766
Ref: mpi4py MPI Intracomm-Footnote-80460828
Ref: mpi4py MPI Intracomm-Footnote-81460890
Ref: mpi4py MPI Intracomm-Footnote-82460953
Ref: mpi4py MPI Intracomm-Footnote-83461019
Ref: mpi4py MPI Intracomm-Footnote-84461090
Ref: mpi4py MPI Intracomm-Footnote-85461156
Ref: mpi4py MPI Intracomm-Footnote-86461222
Ref: mpi4py MPI Intracomm-Footnote-87461288
Ref: mpi4py MPI Intracomm-Footnote-88461354
Ref: mpi4py MPI Intracomm-Footnote-89461420
Ref: mpi4py MPI Intracomm-Footnote-90461491
Ref: mpi4py MPI Intracomm-Footnote-91461557
Ref: mpi4py MPI Intracomm-Footnote-92461623
Ref: mpi4py MPI Intracomm-Footnote-93461689
Node: mpi4py MPI Message461755
Ref: reference/mpi4py MPI Message doc461874
Ref: 428461874
Ref: reference/mpi4py MPI Message mpi4py-mpi-message461874
Ref: 429461874
Ref: reference/mpi4py MPI Message mpi4py MPI Message461929
Ref: d7461929
Ref: reference/mpi4py MPI Message mpi4py MPI Message __new__462006
Ref: 42a462006
Ref: reference/mpi4py MPI Message mpi4py MPI Message Iprobe463416
Ref: 42b463416
Ref: reference/mpi4py MPI Message mpi4py MPI Message Irecv463821
Ref: 42c463821
Ref: reference/mpi4py MPI Message mpi4py MPI Message Probe464002
Ref: 42d464002
Ref: reference/mpi4py MPI Message mpi4py MPI Message Recv464396
Ref: 42e464396
Ref: reference/mpi4py MPI Message mpi4py MPI Message f2py464658
Ref: 42f464658
Ref: reference/mpi4py MPI Message mpi4py MPI Message free464787
Ref: 430464787
Ref: reference/mpi4py MPI Message mpi4py MPI Message fromhandle464870
Ref: 431464870
Ref: reference/mpi4py MPI Message mpi4py MPI Message iprobe465053
Ref: 432465053
Ref: reference/mpi4py MPI Message mpi4py MPI Message irecv465463
Ref: 433465463
Ref: reference/mpi4py MPI Message mpi4py MPI Message probe465585
Ref: 434465585
Ref: reference/mpi4py MPI Message mpi4py MPI Message py2f465980
Ref: 435465980
Ref: reference/mpi4py MPI Message mpi4py MPI Message recv466039
Ref: 436466039
Ref: reference/mpi4py MPI Message mpi4py MPI Message handle466292
Ref: 437466292
Ref: mpi4py MPI Message-Footnote-1466379
Ref: mpi4py MPI Message-Footnote-2466443
Ref: mpi4py MPI Message-Footnote-3466505
Ref: mpi4py MPI Message-Footnote-4466571
Ref: mpi4py MPI Message-Footnote-5466632
Ref: mpi4py MPI Message-Footnote-6466693
Ref: mpi4py MPI Message-Footnote-7466755
Ref: mpi4py MPI Message-Footnote-8466821
Ref: mpi4py MPI Message-Footnote-9466883
Ref: mpi4py MPI Message-Footnote-10466944
Ref: mpi4py MPI Message-Footnote-11467006
Ref: mpi4py MPI Message-Footnote-12467069
Ref: mpi4py MPI Message-Footnote-13467136
Ref: mpi4py MPI Message-Footnote-14467199
Ref: mpi4py MPI Message-Footnote-15467262
Ref: mpi4py MPI Message-Footnote-16467324
Ref: mpi4py MPI Message-Footnote-17467387
Ref: mpi4py MPI Message-Footnote-18467449
Ref: mpi4py MPI Message-Footnote-19467511
Ref: mpi4py MPI Message-Footnote-20467573
Ref: mpi4py MPI Message-Footnote-21467636
Ref: mpi4py MPI Message-Footnote-22467703
Ref: mpi4py MPI Message-Footnote-23467766
Ref: mpi4py MPI Message-Footnote-24467828
Ref: mpi4py MPI Message-Footnote-25467890
Ref: mpi4py MPI Message-Footnote-26467953
Ref: mpi4py MPI Message-Footnote-27468020
Ref: mpi4py MPI Message-Footnote-28468082
Ref: mpi4py MPI Message-Footnote-29468145
Node: mpi4py MPI Op468211
Ref: reference/mpi4py MPI Op doc468327
Ref: 438468327
Ref: reference/mpi4py MPI Op mpi4py-mpi-op468327
Ref: 439468327
Ref: reference/mpi4py MPI Op mpi4py MPI Op468372
Ref: d3468372
Ref: reference/mpi4py MPI Op mpi4py MPI Op __new__468448
Ref: 43a468448
Ref: reference/mpi4py MPI Op mpi4py MPI Op Create469706
Ref: 43b469706
Ref: reference/mpi4py MPI Op mpi4py MPI Op Free470094
Ref: 43c470094
Ref: reference/mpi4py MPI Op mpi4py MPI Op Is_commutative470205
Ref: 43d470205
Ref: reference/mpi4py MPI Op mpi4py MPI Op Reduce_local470337
Ref: 43e470337
Ref: reference/mpi4py MPI Op mpi4py MPI Op f2py470601
Ref: 43f470601
Ref: reference/mpi4py MPI Op mpi4py MPI Op free470725
Ref: 440470725
Ref: reference/mpi4py MPI Op mpi4py MPI Op fromhandle470845
Ref: 441470845
Ref: reference/mpi4py MPI Op mpi4py MPI Op py2f471023
Ref: 442471023
Ref: reference/mpi4py MPI Op mpi4py MPI Op handle471143
Ref: 443471143
Ref: reference/mpi4py MPI Op mpi4py MPI Op is_commutative471194
Ref: 444471194
Ref: reference/mpi4py MPI Op mpi4py MPI Op is_predefined471269
Ref: 445471269
Ref: mpi4py MPI Op-Footnote-1471378
Ref: mpi4py MPI Op-Footnote-2471442
Ref: mpi4py MPI Op-Footnote-3471504
Ref: mpi4py MPI Op-Footnote-4471570
Ref: mpi4py MPI Op-Footnote-5471640
Ref: mpi4py MPI Op-Footnote-6471702
Ref: mpi4py MPI Op-Footnote-7471764
Ref: mpi4py MPI Op-Footnote-8471830
Ref: mpi4py MPI Op-Footnote-9471892
Ref: mpi4py MPI Op-Footnote-10471954
Ref: mpi4py MPI Op-Footnote-11472017
Ref: mpi4py MPI Op-Footnote-12472079
Ref: mpi4py MPI Op-Footnote-13472142
Ref: mpi4py MPI Op-Footnote-14472204
Node: mpi4py MPI Pickle472266
Ref: reference/mpi4py MPI Pickle doc472383
Ref: 446472383
Ref: reference/mpi4py MPI Pickle mpi4py-mpi-pickle472383
Ref: 447472383
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle472436
Ref: d9472436
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle __new__472527
Ref: 448472527
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle dumps473468
Ref: 449473468
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle dumps_oob473626
Ref: 44a473626
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle loads473860
Ref: 44b473860
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle loads_oob474035
Ref: 44c474035
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle PROTOCOL474411
Ref: a7474411
Ref: reference/mpi4py MPI Pickle mpi4py MPI Pickle THRESHOLD474470
Ref: c8474470
Ref: mpi4py MPI Pickle-Footnote-1474571
Ref: mpi4py MPI Pickle-Footnote-2474635
Ref: mpi4py MPI Pickle-Footnote-3474697
Ref: mpi4py MPI Pickle-Footnote-4474763
Ref: mpi4py MPI Pickle-Footnote-5474828
Ref: mpi4py MPI Pickle-Footnote-6474890
Ref: mpi4py MPI Pickle-Footnote-7474955
Ref: mpi4py MPI Pickle-Footnote-8475017
Ref: mpi4py MPI Pickle-Footnote-9475079
Ref: mpi4py MPI Pickle-Footnote-10475140
Ref: mpi4py MPI Pickle-Footnote-11475206
Ref: mpi4py MPI Pickle-Footnote-12475277
Node: mpi4py MPI Prequest475343
Ref: reference/mpi4py MPI Prequest doc475465
Ref: 44d475465
Ref: reference/mpi4py MPI Prequest mpi4py-mpi-prequest475465
Ref: 44e475465
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest475522
Ref: 4a475522
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest __new__475620
Ref: 44f475620
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest Parrived476569
Ref: 450476569
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest Pready476761
Ref: 451476761
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest Pready_list476924
Ref: 452476924
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest Pready_range477126
Ref: 453477126
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest Start477388
Ref: 4b477388
Ref: reference/mpi4py MPI Prequest mpi4py MPI Prequest Startall477512
Ref: 454477512
Ref: mpi4py MPI Prequest-Footnote-1477769
Ref: mpi4py MPI Prequest-Footnote-2477831
Ref: mpi4py MPI Prequest-Footnote-3477897
Ref: mpi4py MPI Prequest-Footnote-4477958
Ref: mpi4py MPI Prequest-Footnote-5478020
Ref: mpi4py MPI Prequest-Footnote-6478081
Ref: mpi4py MPI Prequest-Footnote-7478143
Ref: mpi4py MPI Prequest-Footnote-8478213
Ref: mpi4py MPI Prequest-Footnote-9478274
Ref: mpi4py MPI Prequest-Footnote-10478336
Ref: mpi4py MPI Prequest-Footnote-11478398
Ref: mpi4py MPI Prequest-Footnote-12478460
Ref: mpi4py MPI Prequest-Footnote-13478523
Ref: mpi4py MPI Prequest-Footnote-14478586
Ref: mpi4py MPI Prequest-Footnote-15478648
Node: mpi4py MPI Request478711
Ref: reference/mpi4py MPI Request doc478834
Ref: 455478834
Ref: reference/mpi4py MPI Request mpi4py-mpi-request478834
Ref: 456478834
Ref: reference/mpi4py MPI Request mpi4py MPI Request478889
Ref: 43478889
Ref: reference/mpi4py MPI Request mpi4py MPI Request __new__478966
Ref: 457478966
Ref: reference/mpi4py MPI Request mpi4py MPI Request Cancel482704
Ref: 46482704
Ref: reference/mpi4py MPI Request mpi4py MPI Request Free482794
Ref: 458482794
Ref: reference/mpi4py MPI Request mpi4py MPI Request Get_status482894
Ref: 459482894
Ref: reference/mpi4py MPI Request mpi4py MPI Request Get_status_all483108
Ref: 45a483108
Ref: reference/mpi4py MPI Request mpi4py MPI Request Get_status_any483471
Ref: 45b483471
Ref: reference/mpi4py MPI Request mpi4py MPI Request Get_status_some483830
Ref: 45c483830
Ref: reference/mpi4py MPI Request mpi4py MPI Request Test484213
Ref: 44484213
Ref: reference/mpi4py MPI Request mpi4py MPI Request Testall484422
Ref: 45d484422
Ref: reference/mpi4py MPI Request mpi4py MPI Request Testany484781
Ref: 45e484781
Ref: reference/mpi4py MPI Request mpi4py MPI Request Testsome485133
Ref: 45f485133
Ref: reference/mpi4py MPI Request mpi4py MPI Request Wait485514
Ref: 45485514
Ref: reference/mpi4py MPI Request mpi4py MPI Request Waitall485726
Ref: 460485726
Ref: reference/mpi4py MPI Request mpi4py MPI Request Waitany486092
Ref: 461486092
Ref: reference/mpi4py MPI Request mpi4py MPI Request Waitsome486421
Ref: 462486421
Ref: reference/mpi4py MPI Request mpi4py MPI Request cancel486800
Ref: 463486800
Ref: reference/mpi4py MPI Request mpi4py MPI Request f2py486891
Ref: 464486891
Ref: reference/mpi4py MPI Request mpi4py MPI Request free487020
Ref: 465487020
Ref: reference/mpi4py MPI Request mpi4py MPI Request fromhandle487126
Ref: 466487126
Ref: reference/mpi4py MPI Request mpi4py MPI Request get_status487309
Ref: 467487309
Ref: reference/mpi4py MPI Request mpi4py MPI Request get_status_all487525
Ref: 468487525
Ref: reference/mpi4py MPI Request mpi4py MPI Request get_status_any487890
Ref: 469487890
Ref: reference/mpi4py MPI Request mpi4py MPI Request get_status_some488249
Ref: 46a488249
Ref: reference/mpi4py MPI Request mpi4py MPI Request py2f488632
Ref: 46b488632
Ref: reference/mpi4py MPI Request mpi4py MPI Request test488691
Ref: a3488691
Ref: reference/mpi4py MPI Request mpi4py MPI Request testall488931
Ref: 46c488931
Ref: reference/mpi4py MPI Request mpi4py MPI Request testany489331
Ref: 46d489331
Ref: reference/mpi4py MPI Request mpi4py MPI Request testsome489703
Ref: 46e489703
Ref: reference/mpi4py MPI Request mpi4py MPI Request wait490142
Ref: a4490142
Ref: reference/mpi4py MPI Request mpi4py MPI Request waitall490346
Ref: 46f490346
Ref: reference/mpi4py MPI Request mpi4py MPI Request waitany490732
Ref: 470490732
Ref: reference/mpi4py MPI Request mpi4py MPI Request waitsome491086
Ref: 471491086
Ref: reference/mpi4py MPI Request mpi4py MPI Request handle491602
Ref: 472491602
Ref: mpi4py MPI Request-Footnote-1491689
Ref: mpi4py MPI Request-Footnote-2491753
Ref: mpi4py MPI Request-Footnote-3491815
Ref: mpi4py MPI Request-Footnote-4491881
Ref: mpi4py MPI Request-Footnote-5491943
Ref: mpi4py MPI Request-Footnote-6492005
Ref: mpi4py MPI Request-Footnote-7492067
Ref: mpi4py MPI Request-Footnote-8492129
Ref: mpi4py MPI Request-Footnote-9492199
Ref: mpi4py MPI Request-Footnote-10492260
Ref: mpi4py MPI Request-Footnote-11492323
Ref: mpi4py MPI Request-Footnote-12492386
Ref: mpi4py MPI Request-Footnote-13492457
Ref: mpi4py MPI Request-Footnote-14492520
Ref: mpi4py MPI Request-Footnote-15492583
Ref: mpi4py MPI Request-Footnote-16492645
Ref: mpi4py MPI Request-Footnote-17492708
Ref: mpi4py MPI Request-Footnote-18492779
Ref: mpi4py MPI Request-Footnote-19492841
Ref: mpi4py MPI Request-Footnote-20492904
Ref: mpi4py MPI Request-Footnote-21492966
Ref: mpi4py MPI Request-Footnote-22493028
Ref: mpi4py MPI Request-Footnote-23493091
Ref: mpi4py MPI Request-Footnote-24493154
Ref: mpi4py MPI Request-Footnote-25493217
Ref: mpi4py MPI Request-Footnote-26493288
Ref: mpi4py MPI Request-Footnote-27493350
Ref: mpi4py MPI Request-Footnote-28493413
Ref: mpi4py MPI Request-Footnote-29493476
Ref: mpi4py MPI Request-Footnote-30493547
Ref: mpi4py MPI Request-Footnote-31493610
Ref: mpi4py MPI Request-Footnote-32493673
Ref: mpi4py MPI Request-Footnote-33493735
Ref: mpi4py MPI Request-Footnote-34493798
Ref: mpi4py MPI Request-Footnote-35493869
Ref: mpi4py MPI Request-Footnote-36493931
Ref: mpi4py MPI Request-Footnote-37493994
Ref: mpi4py MPI Request-Footnote-38494056
Ref: mpi4py MPI Request-Footnote-39494118
Ref: mpi4py MPI Request-Footnote-40494181
Ref: mpi4py MPI Request-Footnote-41494244
Ref: mpi4py MPI Request-Footnote-42494314
Ref: mpi4py MPI Request-Footnote-43494385
Ref: mpi4py MPI Request-Footnote-44494447
Ref: mpi4py MPI Request-Footnote-45494510
Ref: mpi4py MPI Request-Footnote-46494580
Ref: mpi4py MPI Request-Footnote-47494651
Ref: mpi4py MPI Request-Footnote-48494714
Ref: mpi4py MPI Request-Footnote-49494776
Ref: mpi4py MPI Request-Footnote-50494847
Ref: mpi4py MPI Request-Footnote-51494909
Ref: mpi4py MPI Request-Footnote-52494972
Ref: mpi4py MPI Request-Footnote-53495034
Ref: mpi4py MPI Request-Footnote-54495096
Ref: mpi4py MPI Request-Footnote-55495159
Ref: mpi4py MPI Request-Footnote-56495222
Ref: mpi4py MPI Request-Footnote-57495284
Ref: mpi4py MPI Request-Footnote-58495347
Ref: mpi4py MPI Request-Footnote-59495409
Ref: mpi4py MPI Request-Footnote-60495472
Ref: mpi4py MPI Request-Footnote-61495535
Ref: mpi4py MPI Request-Footnote-62495606
Ref: mpi4py MPI Request-Footnote-63495668
Ref: mpi4py MPI Request-Footnote-64495731
Ref: mpi4py MPI Request-Footnote-65495794
Ref: mpi4py MPI Request-Footnote-66495865
Ref: mpi4py MPI Request-Footnote-67495928
Ref: mpi4py MPI Request-Footnote-68495991
Ref: mpi4py MPI Request-Footnote-69496053
Ref: mpi4py MPI Request-Footnote-70496116
Ref: mpi4py MPI Request-Footnote-71496187
Ref: mpi4py MPI Request-Footnote-72496249
Ref: mpi4py MPI Request-Footnote-73496312
Ref: mpi4py MPI Request-Footnote-74496374
Ref: mpi4py MPI Request-Footnote-75496436
Ref: mpi4py MPI Request-Footnote-76496499
Ref: mpi4py MPI Request-Footnote-77496561
Ref: mpi4py MPI Request-Footnote-78496624
Ref: mpi4py MPI Request-Footnote-79496687
Ref: mpi4py MPI Request-Footnote-80496750
Ref: mpi4py MPI Request-Footnote-81496816
Ref: mpi4py MPI Request-Footnote-82496879
Ref: mpi4py MPI Request-Footnote-83496950
Ref: mpi4py MPI Request-Footnote-84497012
Ref: mpi4py MPI Request-Footnote-85497075
Ref: mpi4py MPI Request-Footnote-86497138
Ref: mpi4py MPI Request-Footnote-87497201
Ref: mpi4py MPI Request-Footnote-88497263
Ref: mpi4py MPI Request-Footnote-89497329
Ref: mpi4py MPI Request-Footnote-90497392
Ref: mpi4py MPI Request-Footnote-91497463
Ref: mpi4py MPI Request-Footnote-92497526
Ref: mpi4py MPI Request-Footnote-93497589
Ref: mpi4py MPI Request-Footnote-94497651
Ref: mpi4py MPI Request-Footnote-95497714
Ref: mpi4py MPI Request-Footnote-96497780
Ref: mpi4py MPI Request-Footnote-97497843
Ref: mpi4py MPI Request-Footnote-98497914
Ref: mpi4py MPI Request-Footnote-99497976
Ref: mpi4py MPI Request-Footnote-100498039
Ref: mpi4py MPI Request-Footnote-101498103
Ref: mpi4py MPI Request-Footnote-102498166
Ref: mpi4py MPI Request-Footnote-103498229
Ref: mpi4py MPI Request-Footnote-104498293
Ref: mpi4py MPI Request-Footnote-105498356
Ref: mpi4py MPI Request-Footnote-106498423
Ref: mpi4py MPI Request-Footnote-107498487
Ref: mpi4py MPI Request-Footnote-108498551
Ref: mpi4py MPI Request-Footnote-109498618
Ref: mpi4py MPI Request-Footnote-110498690
Ref: mpi4py MPI Request-Footnote-111498753
Ref: mpi4py MPI Request-Footnote-112498817
Ref: mpi4py MPI Request-Footnote-113498880
Ref: mpi4py MPI Request-Footnote-114498947
Ref: mpi4py MPI Request-Footnote-115499019
Ref: mpi4py MPI Request-Footnote-116499083
Ref: mpi4py MPI Request-Footnote-117499147
Ref: mpi4py MPI Request-Footnote-118499210
Ref: mpi4py MPI Request-Footnote-119499277
Ref: mpi4py MPI Request-Footnote-120499349
Ref: mpi4py MPI Request-Footnote-121499412
Ref: mpi4py MPI Request-Footnote-122499476
Ref: mpi4py MPI Request-Footnote-123499540
Ref: mpi4py MPI Request-Footnote-124499603
Ref: mpi4py MPI Request-Footnote-125499666
Ref: mpi4py MPI Request-Footnote-126499730
Ref: mpi4py MPI Request-Footnote-127499793
Ref: mpi4py MPI Request-Footnote-128499860
Node: mpi4py MPI Session499924
Ref: reference/mpi4py MPI Session doc500045
Ref: 473500045
Ref: reference/mpi4py MPI Session mpi4py-mpi-session500045
Ref: 474500045
Ref: reference/mpi4py MPI Session mpi4py MPI Session500100
Ref: d5500100
Ref: reference/mpi4py MPI Session mpi4py MPI Session __new__500177
Ref: 475500177
Ref: reference/mpi4py MPI Session mpi4py MPI Session Attach_buffer502538
Ref: 476502538
Ref: reference/mpi4py MPI Session mpi4py MPI Session Call_errhandler502751
Ref: 477502751
Ref: reference/mpi4py MPI Session mpi4py MPI Session Create_errhandler502937
Ref: 478502937
Ref: reference/mpi4py MPI Session mpi4py MPI Session Create_group503244
Ref: 479503244
Ref: reference/mpi4py MPI Session mpi4py MPI Session Detach_buffer503439
Ref: 47a503439
Ref: reference/mpi4py MPI Session mpi4py MPI Session Finalize503576
Ref: 47b503576
Ref: reference/mpi4py MPI Session mpi4py MPI Session Flush_buffer503671
Ref: 47c503671
Ref: reference/mpi4py MPI Session mpi4py MPI Session Get_errhandler503807
Ref: 47d503807
Ref: reference/mpi4py MPI Session mpi4py MPI Session Get_info503938
Ref: 47e503938
Ref: reference/mpi4py MPI Session mpi4py MPI Session Get_nth_pset504060
Ref: 47f504060
Ref: reference/mpi4py MPI Session mpi4py MPI Session Get_num_psets504290
Ref: 480504290
Ref: reference/mpi4py MPI Session mpi4py MPI Session Get_pset_info504470
Ref: 481504470
Ref: reference/mpi4py MPI Session mpi4py MPI Session Iflush_buffer504672
Ref: 482504672
Ref: reference/mpi4py MPI Session mpi4py MPI Session Init504803
Ref: 483504803
Ref: reference/mpi4py MPI Session mpi4py MPI Session Set_errhandler505082
Ref: 484505082
Ref: reference/mpi4py MPI Session mpi4py MPI Session f2py505275
Ref: 485505275
Ref: reference/mpi4py MPI Session mpi4py MPI Session free505404
Ref: 486505404
Ref: reference/mpi4py MPI Session mpi4py MPI Session fromhandle505514
Ref: 487505514
Ref: reference/mpi4py MPI Session mpi4py MPI Session py2f505697
Ref: 488505697
Ref: reference/mpi4py MPI Session mpi4py MPI Session handle505817
Ref: 489505817
Ref: mpi4py MPI Session-Footnote-1505904
Ref: mpi4py MPI Session-Footnote-2505968
Ref: mpi4py MPI Session-Footnote-3506030
Ref: mpi4py MPI Session-Footnote-4506096
Ref: mpi4py MPI Session-Footnote-5506158
Ref: mpi4py MPI Session-Footnote-6506220
Ref: mpi4py MPI Session-Footnote-7506281
Ref: mpi4py MPI Session-Footnote-8506343
Ref: mpi4py MPI Session-Footnote-9506413
Ref: mpi4py MPI Session-Footnote-10506474
Ref: mpi4py MPI Session-Footnote-11506537
Ref: mpi4py MPI Session-Footnote-12506598
Ref: mpi4py MPI Session-Footnote-13506661
Ref: mpi4py MPI Session-Footnote-14506724
Ref: mpi4py MPI Session-Footnote-15506787
Ref: mpi4py MPI Session-Footnote-16506849
Ref: mpi4py MPI Session-Footnote-17506910
Ref: mpi4py MPI Session-Footnote-18506972
Ref: mpi4py MPI Session-Footnote-19507033
Ref: mpi4py MPI Session-Footnote-20507096
Ref: mpi4py MPI Session-Footnote-21507163
Ref: mpi4py MPI Session-Footnote-22507226
Ref: mpi4py MPI Session-Footnote-23507288
Ref: mpi4py MPI Session-Footnote-24507351
Ref: mpi4py MPI Session-Footnote-25507413
Node: mpi4py MPI Status507475
Ref: reference/mpi4py MPI Status doc507597
Ref: 48a507597
Ref: reference/mpi4py MPI Status mpi4py-mpi-status507597
Ref: 48b507597
Ref: reference/mpi4py MPI Status mpi4py MPI Status507650
Ref: d1507650
Ref: reference/mpi4py MPI Status mpi4py MPI Status __new__507724
Ref: 48c507724
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_count509593
Ref: 48d509593
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_elements509781
Ref: 48e509781
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_error509975
Ref: 48f509975
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_source510068
Ref: 490510068
Ref: reference/mpi4py MPI Status mpi4py MPI Status Get_tag510163
Ref: 491510163
Ref: reference/mpi4py MPI Status mpi4py MPI Status Is_cancelled510252
Ref: 492510252
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_cancelled510370
Ref: 493510370
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_elements510688
Ref: 494510688
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_error511075
Ref: 495511075
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_source511221
Ref: 496511221
Ref: reference/mpi4py MPI Status mpi4py MPI Status Set_tag511371
Ref: 497511371
Ref: reference/mpi4py MPI Status mpi4py MPI Status f2py511509
Ref: 498511509
Ref: reference/mpi4py MPI Status mpi4py MPI Status py2f511650
Ref: 499511650
Ref: reference/mpi4py MPI Status mpi4py MPI Status cancelled511780
Ref: 49a511780
Ref: reference/mpi4py MPI Status mpi4py MPI Status count511839
Ref: 49b511839
Ref: reference/mpi4py MPI Status mpi4py MPI Status error511889
Ref: 49c511889
Ref: reference/mpi4py MPI Status mpi4py MPI Status source511942
Ref: 49d511942
Ref: reference/mpi4py MPI Status mpi4py MPI Status tag511997
Ref: 49e511997
Ref: mpi4py MPI Status-Footnote-1512082
Ref: mpi4py MPI Status-Footnote-2512146
Ref: mpi4py MPI Status-Footnote-3512208
Ref: mpi4py MPI Status-Footnote-4512274
Ref: mpi4py MPI Status-Footnote-5512335
Ref: mpi4py MPI Status-Footnote-6512396
Ref: mpi4py MPI Status-Footnote-7512457
Ref: mpi4py MPI Status-Footnote-8512518
Ref: mpi4py MPI Status-Footnote-9512579
Ref: mpi4py MPI Status-Footnote-10512641
Ref: mpi4py MPI Status-Footnote-11512704
Ref: mpi4py MPI Status-Footnote-12512767
Ref: mpi4py MPI Status-Footnote-13512829
Ref: mpi4py MPI Status-Footnote-14512892
Ref: mpi4py MPI Status-Footnote-15512954
Ref: mpi4py MPI Status-Footnote-16513017
Ref: mpi4py MPI Status-Footnote-17513079
Ref: mpi4py MPI Status-Footnote-18513142
Ref: mpi4py MPI Status-Footnote-19513204
Ref: mpi4py MPI Status-Footnote-20513267
Ref: mpi4py MPI Status-Footnote-21513329
Ref: mpi4py MPI Status-Footnote-22513391
Ref: mpi4py MPI Status-Footnote-23513458
Ref: mpi4py MPI Status-Footnote-24513520
Node: mpi4py MPI Topocomm513582
Ref: reference/mpi4py MPI Topocomm doc513700
Ref: 49f513700
Ref: reference/mpi4py MPI Topocomm mpi4py-mpi-topocomm513700
Ref: 4a0513700
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm513757
Ref: d6513757
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm __new__513857
Ref: 4a1513857
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_allgather516508
Ref: 4a2516508
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_allgatherv516785
Ref: 4a3516785
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_alltoall517070
Ref: 4a4517070
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_alltoallv517344
Ref: 4a5517344
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Ineighbor_alltoallw517626
Ref: 4a6517626
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_allgather517909
Ref: 4a7517909
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_allgather_init518162
Ref: 4a8518162
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_allgatherv518519
Ref: 4a9518519
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_allgatherv_init518780
Ref: 4aa518780
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoall519145
Ref: 4ab519145
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoall_init519395
Ref: 4ac519395
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoallv519749
Ref: 4ad519749
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoallv_init520007
Ref: 4ae520007
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoallw520369
Ref: 4af520369
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm Neighbor_alltoallw_init520628
Ref: 4b0520628
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm neighbor_allgather520991
Ref: 4b1520991
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm neighbor_alltoall521162
Ref: 4b2521162
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm degrees521414
Ref: 4b3521414
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm indegree521497
Ref: 4b4521497
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm inedges521568
Ref: 4b5521568
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm inoutedges521628
Ref: 4b6521628
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm outdegree521704
Ref: 4b7521704
Ref: reference/mpi4py MPI Topocomm mpi4py MPI Topocomm outedges521776
Ref: 4b8521776
Ref: mpi4py MPI Topocomm-Footnote-1521873
Ref: mpi4py MPI Topocomm-Footnote-2521935
Ref: mpi4py MPI Topocomm-Footnote-3522001
Ref: mpi4py MPI Topocomm-Footnote-4522063
Ref: mpi4py MPI Topocomm-Footnote-5522125
Ref: mpi4py MPI Topocomm-Footnote-6522187
Ref: mpi4py MPI Topocomm-Footnote-7522249
Ref: mpi4py MPI Topocomm-Footnote-8522311
Ref: mpi4py MPI Topocomm-Footnote-9522376
Ref: mpi4py MPI Topocomm-Footnote-10522437
Ref: mpi4py MPI Topocomm-Footnote-11522503
Ref: mpi4py MPI Topocomm-Footnote-12522565
Ref: mpi4py MPI Topocomm-Footnote-13522631
Ref: mpi4py MPI Topocomm-Footnote-14522693
Node: mpi4py MPI Win522759
Ref: reference/mpi4py MPI Win doc522877
Ref: 4b9522877
Ref: reference/mpi4py MPI Win mpi4py-mpi-win522877
Ref: 4ba522877
Ref: reference/mpi4py MPI Win mpi4py MPI Win522924
Ref: 76522924
Ref: reference/mpi4py MPI Win mpi4py MPI Win __new__523010
Ref: 4bb523010
Ref: reference/mpi4py MPI Win mpi4py MPI Win Accumulate529873
Ref: 7b529873
Ref: reference/mpi4py MPI Win mpi4py MPI Win Allocate530259
Ref: 4bc530259
Ref: reference/mpi4py MPI Win mpi4py MPI Win Allocate_shared530658
Ref: 4bd530658
Ref: reference/mpi4py MPI Win mpi4py MPI Win Attach531067
Ref: 4be531067
Ref: reference/mpi4py MPI Win mpi4py MPI Win Call_errhandler531234
Ref: 4bf531234
Ref: reference/mpi4py MPI Win mpi4py MPI Win Compare_and_swap531421
Ref: 4c0531421
Ref: reference/mpi4py MPI Win mpi4py MPI Win Complete531879
Ref: 7d531879
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create532012
Ref: 77532012
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create_dynamic532450
Ref: 4c1532450
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create_errhandler532760
Ref: 4c2532760
Ref: reference/mpi4py MPI Win mpi4py MPI Win Create_keyval533064
Ref: 4c3533064
Ref: reference/mpi4py MPI Win mpi4py MPI Win Delete_attr533651
Ref: 4c4533651
Ref: reference/mpi4py MPI Win mpi4py MPI Win Detach533828
Ref: 4c5533828
Ref: reference/mpi4py MPI Win mpi4py MPI Win Fence533995
Ref: 80533995
Ref: reference/mpi4py MPI Win mpi4py MPI Win Fetch_and_op534178
Ref: 4c6534178
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush534614
Ref: 4c7534614
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush_all534788
Ref: 4c8534788
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush_local534920
Ref: 4c9534920
Ref: reference/mpi4py MPI Win mpi4py MPI Win Flush_local_all535108
Ref: 4ca535108
Ref: reference/mpi4py MPI Win mpi4py MPI Win Free535264
Ref: 78535264
Ref: reference/mpi4py MPI Win mpi4py MPI Win Free_keyval535350
Ref: 4cb535350
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get535527
Ref: 7a535527
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_accumulate535870
Ref: 4cc535870
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_attr536347
Ref: 4cd536347
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_errhandler536528
Ref: 4ce536528
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_group536658
Ref: 4cf536658
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_info536797
Ref: 4d0536797
Ref: reference/mpi4py MPI Win mpi4py MPI Win Get_name536918
Ref: 4d1536918
Ref: reference/mpi4py MPI Win mpi4py MPI Win Lock537028
Ref: 81537028
Ref: reference/mpi4py MPI Win mpi4py MPI Win Lock_all537336
Ref: 4d2537336
Ref: reference/mpi4py MPI Win mpi4py MPI Win Post537516
Ref: 7e537516
Ref: reference/mpi4py MPI Win mpi4py MPI Win Put537747
Ref: 79537747
Ref: reference/mpi4py MPI Win mpi4py MPI Win Raccumulate538090
Ref: 4d3538090
Ref: reference/mpi4py MPI Win mpi4py MPI Win Rget538500
Ref: 4d4538500
Ref: reference/mpi4py MPI Win mpi4py MPI Win Rget_accumulate538854
Ref: 4d5538854
Ref: reference/mpi4py MPI Win mpi4py MPI Win Rput539369
Ref: 4d6539369
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_attr539723
Ref: 4d7539723
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_errhandler539961
Ref: 4d8539961
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_info540153
Ref: 4d9540153
Ref: reference/mpi4py MPI Win mpi4py MPI Win Set_name540340
Ref: 4da540340
Ref: reference/mpi4py MPI Win mpi4py MPI Win Shared_query540500
Ref: 4db540500
Ref: reference/mpi4py MPI Win mpi4py MPI Win Start540716
Ref: 7c540716
Ref: reference/mpi4py MPI Win mpi4py MPI Win Sync540954
Ref: 4dc540954
Ref: reference/mpi4py MPI Win mpi4py MPI Win Test541078
Ref: 4dd541078
Ref: reference/mpi4py MPI Win mpi4py MPI Win Unlock541199
Ref: 82541199
Ref: reference/mpi4py MPI Win mpi4py MPI Win Unlock_all541373
Ref: 4de541373
Ref: reference/mpi4py MPI Win mpi4py MPI Win Wait541498
Ref: 7f541498
Ref: reference/mpi4py MPI Win mpi4py MPI Win f2py541637
Ref: 4df541637
Ref: reference/mpi4py MPI Win mpi4py MPI Win free541763
Ref: 4e0541763
Ref: reference/mpi4py MPI Win mpi4py MPI Win fromhandle541869
Ref: 4e1541869
Ref: reference/mpi4py MPI Win mpi4py MPI Win py2f542049
Ref: 4e2542049
Ref: reference/mpi4py MPI Win mpi4py MPI Win tomemory542109
Ref: 4e3542109
Ref: reference/mpi4py MPI Win mpi4py MPI Win attrs542283
Ref: 4e4542283
Ref: reference/mpi4py MPI Win mpi4py MPI Win flavor542333
Ref: 4e5542333
Ref: reference/mpi4py MPI Win mpi4py MPI Win group542387
Ref: 4e6542387
Ref: reference/mpi4py MPI Win mpi4py MPI Win group_rank542432
Ref: 4e7542432
Ref: reference/mpi4py MPI Win mpi4py MPI Win group_size542487
Ref: 4e8542487
Ref: reference/mpi4py MPI Win mpi4py MPI Win handle542542
Ref: 4e9542542
Ref: reference/mpi4py MPI Win mpi4py MPI Win info542593
Ref: 4ea542593
Ref: reference/mpi4py MPI Win mpi4py MPI Win model542642
Ref: 4eb542642
Ref: reference/mpi4py MPI Win mpi4py MPI Win name542694
Ref: 4ec542694
Ref: mpi4py MPI Win-Footnote-1542779
Ref: mpi4py MPI Win-Footnote-2542843
Ref: mpi4py MPI Win-Footnote-3542905
Ref: mpi4py MPI Win-Footnote-4542971
Ref: mpi4py MPI Win-Footnote-5543032
Ref: mpi4py MPI Win-Footnote-6543094
Ref: mpi4py MPI Win-Footnote-7543156
Ref: mpi4py MPI Win-Footnote-8543217
Ref: mpi4py MPI Win-Footnote-9543278
Ref: mpi4py MPI Win-Footnote-10543344
Ref: mpi4py MPI Win-Footnote-11543406
Ref: mpi4py MPI Win-Footnote-12543468
Ref: mpi4py MPI Win-Footnote-13543535
Ref: mpi4py MPI Win-Footnote-14543598
Ref: mpi4py MPI Win-Footnote-15543660
Ref: mpi4py MPI Win-Footnote-16543723
Ref: mpi4py MPI Win-Footnote-17543785
Ref: mpi4py MPI Win-Footnote-18543847
Ref: mpi4py MPI Win-Footnote-19543910
Ref: mpi4py MPI Win-Footnote-20543973
Ref: mpi4py MPI Win-Footnote-21544035
Ref: mpi4py MPI Win-Footnote-22544102
Ref: mpi4py MPI Win-Footnote-23544173
Ref: mpi4py MPI Win-Footnote-24544235
Ref: mpi4py MPI Win-Footnote-25544298
Ref: mpi4py MPI Win-Footnote-26544369
Ref: mpi4py MPI Win-Footnote-27544431
Ref: mpi4py MPI Win-Footnote-28544497
Ref: mpi4py MPI Win-Footnote-29544563
Ref: mpi4py MPI Win-Footnote-30544626
Ref: mpi4py MPI Win-Footnote-31544697
Ref: mpi4py MPI Win-Footnote-32544759
Ref: mpi4py MPI Win-Footnote-33544825
Ref: mpi4py MPI Win-Footnote-34544888
Ref: mpi4py MPI Win-Footnote-35544951
Ref: mpi4py MPI Win-Footnote-36545014
Ref: mpi4py MPI Win-Footnote-37545076
Ref: mpi4py MPI Win-Footnote-38545138
Ref: mpi4py MPI Win-Footnote-39545201
Ref: mpi4py MPI Win-Footnote-40545264
Ref: mpi4py MPI Win-Footnote-41545326
Ref: mpi4py MPI Win-Footnote-42545389
Ref: mpi4py MPI Win-Footnote-43545451
Ref: mpi4py MPI Win-Footnote-44545513
Ref: mpi4py MPI Win-Footnote-45545576
Ref: mpi4py MPI Win-Footnote-46545638
Ref: mpi4py MPI Win-Footnote-47545701
Ref: mpi4py MPI Win-Footnote-48545764
Ref: mpi4py MPI Win-Footnote-49545826
Ref: mpi4py MPI Win-Footnote-50545889
Ref: mpi4py MPI Win-Footnote-51545952
Ref: mpi4py MPI Win-Footnote-52546015
Ref: mpi4py MPI Win-Footnote-53546077
Ref: mpi4py MPI Win-Footnote-54546139
Ref: mpi4py MPI Win-Footnote-55546201
Ref: mpi4py MPI Win-Footnote-56546264
Ref: mpi4py MPI Win-Footnote-57546327
Ref: mpi4py MPI Win-Footnote-58546389
Ref: mpi4py MPI Win-Footnote-59546452
Ref: mpi4py MPI Win-Footnote-60546515
Ref: mpi4py MPI Win-Footnote-61546577
Ref: mpi4py MPI Win-Footnote-62546639
Ref: mpi4py MPI Win-Footnote-63546705
Ref: mpi4py MPI Win-Footnote-64546768
Ref: mpi4py MPI Win-Footnote-65546829
Ref: mpi4py MPI Win-Footnote-66546891
Ref: mpi4py MPI Win-Footnote-67546953
Ref: mpi4py MPI Win-Footnote-68547015
Ref: mpi4py MPI Win-Footnote-69547078
Ref: mpi4py MPI Win-Footnote-70547140
Ref: mpi4py MPI Win-Footnote-71547203
Ref: mpi4py MPI Win-Footnote-72547265
Ref: mpi4py MPI Win-Footnote-73547328
Ref: mpi4py MPI Win-Footnote-74547390
Ref: mpi4py MPI Win-Footnote-75547453
Ref: mpi4py MPI Win-Footnote-76547516
Ref: mpi4py MPI Win-Footnote-77547578
Ref: mpi4py MPI Win-Footnote-78547641
Ref: mpi4py MPI Win-Footnote-79547703
Ref: mpi4py MPI Win-Footnote-80547766
Ref: mpi4py MPI Win-Footnote-81547828
Ref: mpi4py MPI Win-Footnote-82547891
Ref: mpi4py MPI Win-Footnote-83547953
Ref: mpi4py MPI Win-Footnote-84548016
Ref: mpi4py MPI Win-Footnote-85548078
Ref: mpi4py MPI Win-Footnote-86548144
Ref: mpi4py MPI Win-Footnote-87548207
Ref: mpi4py MPI Win-Footnote-88548270
Ref: mpi4py MPI Win-Footnote-89548333
Ref: mpi4py MPI Win-Footnote-90548394
Ref: mpi4py MPI Win-Footnote-91548457
Ref: mpi4py MPI Win-Footnote-92548519
Ref: mpi4py MPI Win-Footnote-93548582
Ref: mpi4py MPI Win-Footnote-94548644
Ref: mpi4py MPI Win-Footnote-95548706
Ref: mpi4py MPI Win-Footnote-96548769
Ref: mpi4py MPI Win-Footnote-97548832
Ref: mpi4py MPI Win-Footnote-98548895
Ref: mpi4py MPI Win-Footnote-99548957
Ref: mpi4py MPI Win-Footnote-100549020
Ref: mpi4py MPI Win-Footnote-101549084
Ref: mpi4py MPI Win-Footnote-102549155
Ref: mpi4py MPI Win-Footnote-103549218
Ref: mpi4py MPI Win-Footnote-104549282
Ref: mpi4py MPI Win-Footnote-105549345
Node: mpi4py MPI buffer549408
Ref: reference/mpi4py MPI buffer doc549524
Ref: 4ed549524
Ref: reference/mpi4py MPI buffer mpi4py-mpi-buffer549524
Ref: 4ee549524
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer549577
Ref: da549577
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer __new__549644
Ref: 4ef549644
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer allocate551165
Ref: 4f0551165
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer cast551394
Ref: 4f1551394
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer fromaddress551734
Ref: 4f2551734
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer frombuffer552043
Ref: 4f3552043
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer release552300
Ref: 4f4552300
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer tobytes552434
Ref: 4f5552434
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer toreadonly552630
Ref: 4f6552630
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer address552825
Ref: 4f7552825
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer format552881
Ref: 4f8552881
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer itemsize552944
Ref: 4f9552944
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer nbytes553018
Ref: 4fa553018
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer obj553081
Ref: 4fb553081
Ref: reference/mpi4py MPI buffer mpi4py MPI buffer readonly553141
Ref: 4fc553141
Ref: mpi4py MPI buffer-Footnote-1553239
Ref: mpi4py MPI buffer-Footnote-2553303
Ref: mpi4py MPI buffer-Footnote-3553369
Ref: mpi4py MPI buffer-Footnote-4553436
Ref: mpi4py MPI buffer-Footnote-5553497
Ref: mpi4py MPI buffer-Footnote-6553559
Ref: mpi4py MPI buffer-Footnote-7553626
Ref: mpi4py MPI buffer-Footnote-8553686
Ref: mpi4py MPI buffer-Footnote-9553747
Ref: mpi4py MPI buffer-Footnote-10553808
Ref: mpi4py MPI buffer-Footnote-11553871
Ref: mpi4py MPI buffer-Footnote-12553933
Ref: mpi4py MPI buffer-Footnote-13554001
Ref: mpi4py MPI buffer-Footnote-14554063
Ref: mpi4py MPI buffer-Footnote-15554125
Ref: mpi4py MPI buffer-Footnote-16554188
Ref: mpi4py MPI buffer-Footnote-17554251
Ref: mpi4py MPI buffer-Footnote-18554314
Ref: mpi4py MPI buffer-Footnote-19554375
Ref: mpi4py MPI buffer-Footnote-20554438
Node: mpi4py MPI memory554501
Ref: reference/mpi4py MPI memory doc554623
Ref: 4fd554623
Ref: reference/mpi4py MPI memory mpi4py-mpi-memory554623
Ref: 4fe554623
Ref: reference/mpi4py MPI memory mpi4py MPI memory554676
Ref: 2bc554676
Node: mpi4py MPI Exception554820
Ref: reference/mpi4py MPI Exception doc554951
Ref: 4ff554951
Ref: reference/mpi4py MPI Exception mpi4py-mpi-exception554951
Ref: 500554951
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception555010
Ref: 9e555010
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception __new__555099
Ref: 501555099
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception Get_error_class555852
Ref: 502555852
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception Get_error_code555945
Ref: 503555945
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception Get_error_string556036
Ref: 504556036
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception error_class556192
Ref: 505556192
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception error_code556249
Ref: 506556249
Ref: reference/mpi4py MPI Exception mpi4py MPI Exception error_string556304
Ref: 507556304
Ref: mpi4py MPI Exception-Footnote-1560614
Ref: mpi4py MPI Exception-Footnote-2560685
Ref: mpi4py MPI Exception-Footnote-3560746
Ref: mpi4py MPI Exception-Footnote-4560812
Ref: mpi4py MPI Exception-Footnote-5560873
Ref: mpi4py MPI Exception-Footnote-6560934
Node: mpi4py MPI Add_error_class560994
Ref: reference/mpi4py MPI Add_error_class doc561133
Ref: 509561133
Ref: reference/mpi4py MPI Add_error_class mpi4py-mpi-add-error-class561133
Ref: 50a561133
Ref: reference/mpi4py MPI Add_error_class mpi4py MPI Add_error_class561204
Ref: e6561204
Ref: mpi4py MPI Add_error_class-Footnote-1561367
Node: mpi4py MPI Add_error_code561428
Ref: reference/mpi4py MPI Add_error_code doc561574
Ref: 50b561574
Ref: reference/mpi4py MPI Add_error_code mpi4py-mpi-add-error-code561574
Ref: 50c561574
Ref: reference/mpi4py MPI Add_error_code mpi4py MPI Add_error_code561643
Ref: e7561643
Ref: mpi4py MPI Add_error_code-Footnote-1561852
Ref: mpi4py MPI Add_error_code-Footnote-2561913
Node: mpi4py MPI Add_error_string561974
Ref: reference/mpi4py MPI Add_error_string doc562113
Ref: 50d562113
Ref: reference/mpi4py MPI Add_error_string mpi4py-mpi-add-error-string562113
Ref: 50e562113
Ref: reference/mpi4py MPI Add_error_string mpi4py MPI Add_error_string562186
Ref: e8562186
Ref: mpi4py MPI Add_error_string-Footnote-1562474
Ref: mpi4py MPI Add_error_string-Footnote-2562535
Ref: mpi4py MPI Add_error_string-Footnote-3562595
Node: mpi4py MPI Aint_add562657
Ref: reference/mpi4py MPI Aint_add doc562791
Ref: 50f562791
Ref: reference/mpi4py MPI Aint_add mpi4py-mpi-aint-add562791
Ref: 510562791
Ref: reference/mpi4py MPI Aint_add mpi4py MPI Aint_add562848
Ref: e2562848
Ref: mpi4py MPI Aint_add-Footnote-1563095
Ref: mpi4py MPI Aint_add-Footnote-2563156
Ref: mpi4py MPI Aint_add-Footnote-3563217
Node: mpi4py MPI Aint_diff563278
Ref: reference/mpi4py MPI Aint_diff doc563405
Ref: 511563405
Ref: reference/mpi4py MPI Aint_diff mpi4py-mpi-aint-diff563405
Ref: 512563405
Ref: reference/mpi4py MPI Aint_diff mpi4py MPI Aint_diff563464
Ref: e3563464
Ref: mpi4py MPI Aint_diff-Footnote-1563717
Ref: mpi4py MPI Aint_diff-Footnote-2563778
Ref: mpi4py MPI Aint_diff-Footnote-3563839
Node: mpi4py MPI Alloc_mem563900
Ref: reference/mpi4py MPI Alloc_mem doc564032
Ref: 513564032
Ref: reference/mpi4py MPI Alloc_mem mpi4py-mpi-alloc-mem564032
Ref: 514564032
Ref: reference/mpi4py MPI Alloc_mem mpi4py MPI Alloc_mem564091
Ref: df564091
Ref: mpi4py MPI Alloc_mem-Footnote-1564382
Node: mpi4py MPI Attach_buffer564443
Ref: reference/mpi4py MPI Attach_buffer doc564576
Ref: 515564576
Ref: reference/mpi4py MPI Attach_buffer mpi4py-mpi-attach-buffer564576
Ref: 516564576
Ref: reference/mpi4py MPI Attach_buffer mpi4py MPI Attach_buffer564643
Ref: ec564643
Ref: mpi4py MPI Attach_buffer-Footnote-1564885
Ref: mpi4py MPI Attach_buffer-Footnote-2564947
Node: mpi4py MPI Close_port565009
Ref: reference/mpi4py MPI Close_port doc565145
Ref: 517565145
Ref: reference/mpi4py MPI Close_port mpi4py-mpi-close-port565145
Ref: 518565145
Ref: reference/mpi4py MPI Close_port mpi4py MPI Close_port565206
Ref: 74565206
Ref: mpi4py MPI Close_port-Footnote-1565383
Ref: mpi4py MPI Close_port-Footnote-2565443
Node: mpi4py MPI Compute_dims565505
Ref: reference/mpi4py MPI Compute_dims doc565641
Ref: 519565641
Ref: reference/mpi4py MPI Compute_dims mpi4py-mpi-compute-dims565641
Ref: 51a565641
Ref: reference/mpi4py MPI Compute_dims mpi4py MPI Compute_dims565706
Ref: f0565706
Ref: mpi4py MPI Compute_dims-Footnote-1566036
Ref: mpi4py MPI Compute_dims-Footnote-2566097
Ref: mpi4py MPI Compute_dims-Footnote-3566158
Ref: mpi4py MPI Compute_dims-Footnote-4566228
Ref: mpi4py MPI Compute_dims-Footnote-5566289
Ref: mpi4py MPI Compute_dims-Footnote-6566350
Node: mpi4py MPI Detach_buffer566411
Ref: reference/mpi4py MPI Detach_buffer doc566545
Ref: 51b566545
Ref: reference/mpi4py MPI Detach_buffer mpi4py-mpi-detach-buffer566545
Ref: 51c566545
Ref: reference/mpi4py MPI Detach_buffer mpi4py MPI Detach_buffer566612
Ref: ed566612
Ref: mpi4py MPI Detach_buffer-Footnote-1566782
Node: mpi4py MPI Finalize566844
Ref: reference/mpi4py MPI Finalize doc566978
Ref: 51d566978
Ref: reference/mpi4py MPI Finalize mpi4py-mpi-finalize566978
Ref: 51e566978
Ref: reference/mpi4py MPI Finalize mpi4py MPI Finalize567035
Ref: 8e567035
Ref: mpi4py MPI Finalize-Footnote-1567184
Node: mpi4py MPI Flush_buffer567246
Ref: reference/mpi4py MPI Flush_buffer doc567375
Ref: 51f567375
Ref: reference/mpi4py MPI Flush_buffer mpi4py-mpi-flush-buffer567375
Ref: 520567375
Ref: reference/mpi4py MPI Flush_buffer mpi4py MPI Flush_buffer567440
Ref: ee567440
Ref: mpi4py MPI Flush_buffer-Footnote-1567609
Node: mpi4py MPI Free_mem567671
Ref: reference/mpi4py MPI Free_mem doc567803
Ref: 521567803
Ref: reference/mpi4py MPI Free_mem mpi4py-mpi-free-mem567803
Ref: 522567803
Ref: reference/mpi4py MPI Free_mem mpi4py MPI Free_mem567860
Ref: e0567860
Ref: mpi4py MPI Free_mem-Footnote-1568068
Node: mpi4py MPI Get_address568130
Ref: reference/mpi4py MPI Get_address doc568265
Ref: 523568265
Ref: reference/mpi4py MPI Get_address mpi4py-mpi-get-address568265
Ref: 524568265
Ref: reference/mpi4py MPI Get_address mpi4py MPI Get_address568328
Ref: e1568328
Ref: mpi4py MPI Get_address-Footnote-1568569
Node: mpi4py MPI Get_error_class568630
Ref: reference/mpi4py MPI Get_error_class doc568773
Ref: 525568773
Ref: reference/mpi4py MPI Get_error_class mpi4py-mpi-get-error-class568773
Ref: 526568773
Ref: reference/mpi4py MPI Get_error_class mpi4py MPI Get_error_class568844
Ref: e4568844
Ref: mpi4py MPI Get_error_class-Footnote-1569058
Ref: mpi4py MPI Get_error_class-Footnote-2569119
Node: mpi4py MPI Get_error_string569180
Ref: reference/mpi4py MPI Get_error_string doc569332
Ref: 527569332
Ref: reference/mpi4py MPI Get_error_string mpi4py-mpi-get-error-string569332
Ref: 528569332
Ref: reference/mpi4py MPI Get_error_string mpi4py MPI Get_error_string569405
Ref: e5569405
Ref: mpi4py MPI Get_error_string-Footnote-1569647
Ref: mpi4py MPI Get_error_string-Footnote-2569708
Node: mpi4py MPI Get_hw_resource_info569768
Ref: reference/mpi4py MPI Get_hw_resource_info doc569924
Ref: 529569924
Ref: reference/mpi4py MPI Get_hw_resource_info mpi4py-mpi-get-hw-resource-info569924
Ref: 52a569924
Ref: reference/mpi4py MPI Get_hw_resource_info mpi4py MPI Get_hw_resource_info570005
Ref: 508570005
Node: mpi4py MPI Get_library_version570175
Ref: reference/mpi4py MPI Get_library_version doc570333
Ref: 52b570333
Ref: reference/mpi4py MPI Get_library_version mpi4py-mpi-get-library-version570333
Ref: 52c570333
Ref: reference/mpi4py MPI Get_library_version mpi4py MPI Get_library_version570412
Ref: dc570412
Ref: mpi4py MPI Get_library_version-Footnote-1570576
Node: mpi4py MPI Get_processor_name570636
Ref: reference/mpi4py MPI Get_processor_name doc570785
Ref: 52d570785
Ref: reference/mpi4py MPI Get_processor_name mpi4py-mpi-get-processor-name570785
Ref: 52e570785
Ref: reference/mpi4py MPI Get_processor_name mpi4py MPI Get_processor_name570862
Ref: 93570862
Ref: mpi4py MPI Get_processor_name-Footnote-1571021
Node: mpi4py MPI Get_version571081
Ref: reference/mpi4py MPI Get_version doc571224
Ref: 52f571224
Ref: reference/mpi4py MPI Get_version mpi4py-mpi-get-version571224
Ref: 530571224
Ref: reference/mpi4py MPI Get_version mpi4py MPI Get_version571287
Ref: 92571287
Ref: mpi4py MPI Get_version-Footnote-1571462
Ref: mpi4py MPI Get_version-Footnote-2571524
Ref: mpi4py MPI Get_version-Footnote-3571585
Node: mpi4py MPI Iflush_buffer571646
Ref: reference/mpi4py MPI Iflush_buffer doc571775
Ref: 531571775
Ref: reference/mpi4py MPI Iflush_buffer mpi4py-mpi-iflush-buffer571775
Ref: 532571775
Ref: reference/mpi4py MPI Iflush_buffer mpi4py MPI Iflush_buffer571842
Ref: ef571842
Node: mpi4py MPI Init571971
Ref: reference/mpi4py MPI Init doc572100
Ref: 533572100
Ref: reference/mpi4py MPI Init mpi4py-mpi-init572100
Ref: 534572100
Ref: reference/mpi4py MPI Init mpi4py MPI Init572149
Ref: 8c572149
Ref: mpi4py MPI Init-Footnote-1572295
Node: mpi4py MPI Init_thread572357
Ref: reference/mpi4py MPI Init_thread doc572485
Ref: 535572485
Ref: reference/mpi4py MPI Init_thread mpi4py-mpi-init-thread572485
Ref: 536572485
Ref: reference/mpi4py MPI Init_thread mpi4py MPI Init_thread572548
Ref: 8d572548
Ref: mpi4py MPI Init_thread-Footnote-1572767
Ref: mpi4py MPI Init_thread-Footnote-2572828
Node: mpi4py MPI Is_finalized572889
Ref: reference/mpi4py MPI Is_finalized doc573027
Ref: 537573027
Ref: reference/mpi4py MPI Is_finalized mpi4py-mpi-is-finalized573027
Ref: 538573027
Ref: reference/mpi4py MPI Is_finalized mpi4py MPI Is_finalized573092
Ref: 90573092
Ref: mpi4py MPI Is_finalized-Footnote-1573256
Node: mpi4py MPI Is_initialized573318
Ref: reference/mpi4py MPI Is_initialized doc573459
Ref: 539573459
Ref: reference/mpi4py MPI Is_initialized mpi4py-mpi-is-initialized573459
Ref: 53a573459
Ref: reference/mpi4py MPI Is_initialized mpi4py MPI Is_initialized573528
Ref: 8f573528
Ref: mpi4py MPI Is_initialized-Footnote-1573692
Node: mpi4py MPI Is_thread_main573754
Ref: reference/mpi4py MPI Is_thread_main doc573894
Ref: 53b573894
Ref: reference/mpi4py MPI Is_thread_main mpi4py-mpi-is-thread-main573894
Ref: 53c573894
Ref: reference/mpi4py MPI Is_thread_main mpi4py MPI Is_thread_main573963
Ref: de573963
Ref: mpi4py MPI Is_thread_main-Footnote-1574160
Node: mpi4py MPI Lookup_name574222
Ref: reference/mpi4py MPI Lookup_name doc574357
Ref: 53d574357
Ref: reference/mpi4py MPI Lookup_name mpi4py-mpi-lookup-name574357
Ref: 53e574357
Ref: reference/mpi4py MPI Lookup_name mpi4py MPI Lookup_name574420
Ref: 70574420
Ref: mpi4py MPI Lookup_name-Footnote-1574697
Ref: mpi4py MPI Lookup_name-Footnote-2574757
Node: mpi4py MPI Open_port574817
Ref: reference/mpi4py MPI Open_port doc574946
Ref: 53f574946
Ref: reference/mpi4py MPI Open_port mpi4py-mpi-open-port574946
Ref: 540574946
Ref: reference/mpi4py MPI Open_port mpi4py MPI Open_port575005
Ref: 6d575005
Ref: mpi4py MPI Open_port-Footnote-1575229
Node: mpi4py MPI Pcontrol575289
Ref: reference/mpi4py MPI Pcontrol doc575419
Ref: 541575419
Ref: reference/mpi4py MPI Pcontrol mpi4py-mpi-pcontrol575419
Ref: 542575419
Ref: reference/mpi4py MPI Pcontrol mpi4py MPI Pcontrol575476
Ref: f2575476
Ref: mpi4py MPI Pcontrol-Footnote-1575648
Ref: mpi4py MPI Pcontrol-Footnote-2575709
Node: mpi4py MPI Publish_name575771
Ref: reference/mpi4py MPI Publish_name doc575904
Ref: 543575904
Ref: reference/mpi4py MPI Publish_name mpi4py-mpi-publish-name575904
Ref: 544575904
Ref: reference/mpi4py MPI Publish_name mpi4py MPI Publish_name575969
Ref: 6e575969
Ref: mpi4py MPI Publish_name-Footnote-1576288
Ref: mpi4py MPI Publish_name-Footnote-2576348
Ref: mpi4py MPI Publish_name-Footnote-3576408
Node: mpi4py MPI Query_thread576470
Ref: reference/mpi4py MPI Query_thread doc576611
Ref: 545576611
Ref: reference/mpi4py MPI Query_thread mpi4py-mpi-query-thread576611
Ref: 546576611
Ref: reference/mpi4py MPI Query_thread mpi4py MPI Query_thread576676
Ref: dd576676
Ref: mpi4py MPI Query_thread-Footnote-1576851
Node: mpi4py MPI Register_datarep576912
Ref: reference/mpi4py MPI Register_datarep doc577059
Ref: 547577059
Ref: reference/mpi4py MPI Register_datarep mpi4py-mpi-register-datarep577059
Ref: 548577059
Ref: reference/mpi4py MPI Register_datarep mpi4py MPI Register_datarep577132
Ref: f1577132
Ref: mpi4py MPI Register_datarep-Footnote-1577910
Ref: mpi4py MPI Register_datarep-Footnote-2577970
Ref: mpi4py MPI Register_datarep-Footnote-3578040
Ref: mpi4py MPI Register_datarep-Footnote-4578101
Ref: mpi4py MPI Register_datarep-Footnote-5578162
Ref: mpi4py MPI Register_datarep-Footnote-6578224
Ref: mpi4py MPI Register_datarep-Footnote-7578294
Ref: mpi4py MPI Register_datarep-Footnote-8578355
Ref: mpi4py MPI Register_datarep-Footnote-9578416
Ref: mpi4py MPI Register_datarep-Footnote-10578478
Ref: mpi4py MPI Register_datarep-Footnote-11578549
Ref: mpi4py MPI Register_datarep-Footnote-12578611
Node: mpi4py MPI Remove_error_class578674
Ref: reference/mpi4py MPI Remove_error_class doc578826
Ref: 549578826
Ref: reference/mpi4py MPI Remove_error_class mpi4py-mpi-remove-error-class578826
Ref: 54a578826
Ref: reference/mpi4py MPI Remove_error_class mpi4py MPI Remove_error_class578903
Ref: e9578903
Ref: mpi4py MPI Remove_error_class-Footnote-1579130
Ref: mpi4py MPI Remove_error_class-Footnote-2579191
Node: mpi4py MPI Remove_error_code579253
Ref: reference/mpi4py MPI Remove_error_code doc579408
Ref: 54b579408
Ref: reference/mpi4py MPI Remove_error_code mpi4py-mpi-remove-error-code579408
Ref: 54c579408
Ref: reference/mpi4py MPI Remove_error_code mpi4py MPI Remove_error_code579483
Ref: ea579483
Ref: mpi4py MPI Remove_error_code-Footnote-1579704
Ref: mpi4py MPI Remove_error_code-Footnote-2579765
Node: mpi4py MPI Remove_error_string579827
Ref: reference/mpi4py MPI Remove_error_string doc579978
Ref: 54d579978
Ref: reference/mpi4py MPI Remove_error_string mpi4py-mpi-remove-error-string579978
Ref: 54e579978
Ref: reference/mpi4py MPI Remove_error_string mpi4py MPI Remove_error_string580057
Ref: eb580057
Ref: mpi4py MPI Remove_error_string-Footnote-1580304
Ref: mpi4py MPI Remove_error_string-Footnote-2580365
Node: mpi4py MPI Unpublish_name580427
Ref: reference/mpi4py MPI Unpublish_name doc580566
Ref: 54f580566
Ref: reference/mpi4py MPI Unpublish_name mpi4py-mpi-unpublish-name580566
Ref: 550580566
Ref: reference/mpi4py MPI Unpublish_name mpi4py MPI Unpublish_name580635
Ref: 73580635
Ref: mpi4py MPI Unpublish_name-Footnote-1580958
Ref: mpi4py MPI Unpublish_name-Footnote-2581018
Ref: mpi4py MPI Unpublish_name-Footnote-3581078
Node: mpi4py MPI Wtick581140
Ref: reference/mpi4py MPI Wtick doc581265
Ref: 551581265
Ref: reference/mpi4py MPI Wtick mpi4py-mpi-wtick581265
Ref: 552581265
Ref: reference/mpi4py MPI Wtick mpi4py MPI Wtick581316
Ref: 97581316
Ref: mpi4py MPI Wtick-Footnote-1581464
Node: mpi4py MPI Wtime581527
Ref: reference/mpi4py MPI Wtime doc581648
Ref: 553581648
Ref: reference/mpi4py MPI Wtime mpi4py-mpi-wtime581648
Ref: 554581648
Ref: reference/mpi4py MPI Wtime mpi4py MPI Wtime581699
Ref: 96581699
Ref: mpi4py MPI Wtime-Footnote-1581854
Node: mpi4py MPI get_vendor581917
Ref: reference/mpi4py MPI get_vendor doc582042
Ref: 555582042
Ref: reference/mpi4py MPI get_vendor mpi4py-mpi-get-vendor582042
Ref: 556582042
Ref: reference/mpi4py MPI get_vendor mpi4py MPI get_vendor582103
Ref: f3582103
Ref: mpi4py MPI get_vendor-Footnote-1612441
Ref: mpi4py MPI get_vendor-Footnote-2612503
Ref: mpi4py MPI get_vendor-Footnote-3612563
Ref: mpi4py MPI get_vendor-Footnote-4612625
Ref: mpi4py MPI get_vendor-Footnote-5612686
Ref: mpi4py MPI get_vendor-Footnote-6612747
Ref: mpi4py MPI get_vendor-Footnote-7612808
Ref: mpi4py MPI get_vendor-Footnote-8612869
Ref: mpi4py MPI get_vendor-Footnote-9612930
Ref: mpi4py MPI get_vendor-Footnote-10612991
Ref: mpi4py MPI get_vendor-Footnote-11613053
Ref: mpi4py MPI get_vendor-Footnote-12613115
Ref: mpi4py MPI get_vendor-Footnote-13613177
Ref: mpi4py MPI get_vendor-Footnote-14613239
Ref: mpi4py MPI get_vendor-Footnote-15613301
Ref: mpi4py MPI get_vendor-Footnote-16613363
Ref: mpi4py MPI get_vendor-Footnote-17613425
Ref: mpi4py MPI get_vendor-Footnote-18613487
Ref: mpi4py MPI get_vendor-Footnote-19613549
Ref: mpi4py MPI get_vendor-Footnote-20613611
Ref: mpi4py MPI get_vendor-Footnote-21613673
Ref: mpi4py MPI get_vendor-Footnote-22613735
Ref: mpi4py MPI get_vendor-Footnote-23613797
Ref: mpi4py MPI get_vendor-Footnote-24613859
Ref: mpi4py MPI get_vendor-Footnote-25613921
Ref: mpi4py MPI get_vendor-Footnote-26613983
Ref: mpi4py MPI get_vendor-Footnote-27614045
Ref: mpi4py MPI get_vendor-Footnote-28614107
Ref: mpi4py MPI get_vendor-Footnote-29614169
Ref: mpi4py MPI get_vendor-Footnote-30614231
Ref: mpi4py MPI get_vendor-Footnote-31614293
Ref: mpi4py MPI get_vendor-Footnote-32614355
Ref: mpi4py MPI get_vendor-Footnote-33614417
Ref: mpi4py MPI get_vendor-Footnote-34614479
Ref: mpi4py MPI get_vendor-Footnote-35614541
Ref: mpi4py MPI get_vendor-Footnote-36614603
Ref: mpi4py MPI get_vendor-Footnote-37614665
Ref: mpi4py MPI get_vendor-Footnote-38614727
Ref: mpi4py MPI get_vendor-Footnote-39614789
Ref: mpi4py MPI get_vendor-Footnote-40614851
Ref: mpi4py MPI get_vendor-Footnote-41614913
Ref: mpi4py MPI get_vendor-Footnote-42614975
Ref: mpi4py MPI get_vendor-Footnote-43615037
Ref: mpi4py MPI get_vendor-Footnote-44615099
Ref: mpi4py MPI get_vendor-Footnote-45615161
Ref: mpi4py MPI get_vendor-Footnote-46615223
Ref: mpi4py MPI get_vendor-Footnote-47615285
Ref: mpi4py MPI get_vendor-Footnote-48615347
Ref: mpi4py MPI get_vendor-Footnote-49615409
Ref: mpi4py MPI get_vendor-Footnote-50615471
Ref: mpi4py MPI get_vendor-Footnote-51615533
Ref: mpi4py MPI get_vendor-Footnote-52615595
Ref: mpi4py MPI get_vendor-Footnote-53615657
Ref: mpi4py MPI get_vendor-Footnote-54615719
Ref: mpi4py MPI get_vendor-Footnote-55615781
Ref: mpi4py MPI get_vendor-Footnote-56615843
Ref: mpi4py MPI get_vendor-Footnote-57615905
Ref: mpi4py MPI get_vendor-Footnote-58615967
Ref: mpi4py MPI get_vendor-Footnote-59616029
Ref: mpi4py MPI get_vendor-Footnote-60616091
Ref: mpi4py MPI get_vendor-Footnote-61616153
Ref: mpi4py MPI get_vendor-Footnote-62616215
Ref: mpi4py MPI get_vendor-Footnote-63616277
Ref: mpi4py MPI get_vendor-Footnote-64616339
Ref: mpi4py MPI get_vendor-Footnote-65616401
Ref: mpi4py MPI get_vendor-Footnote-66616463
Ref: mpi4py MPI get_vendor-Footnote-67616525
Ref: mpi4py MPI get_vendor-Footnote-68616587
Ref: mpi4py MPI get_vendor-Footnote-69616649
Ref: mpi4py MPI get_vendor-Footnote-70616711
Ref: mpi4py MPI get_vendor-Footnote-71616773
Ref: mpi4py MPI get_vendor-Footnote-72616835
Ref: mpi4py MPI get_vendor-Footnote-73616897
Ref: mpi4py MPI get_vendor-Footnote-74616959
Ref: mpi4py MPI get_vendor-Footnote-75617021
Ref: mpi4py MPI get_vendor-Footnote-76617083
Ref: mpi4py MPI get_vendor-Footnote-77617145
Ref: mpi4py MPI get_vendor-Footnote-78617207
Ref: mpi4py MPI get_vendor-Footnote-79617269
Ref: mpi4py MPI get_vendor-Footnote-80617331
Ref: mpi4py MPI get_vendor-Footnote-81617393
Ref: mpi4py MPI get_vendor-Footnote-82617455
Ref: mpi4py MPI get_vendor-Footnote-83617517
Ref: mpi4py MPI get_vendor-Footnote-84617579
Ref: mpi4py MPI get_vendor-Footnote-85617641
Ref: mpi4py MPI get_vendor-Footnote-86617703
Ref: mpi4py MPI get_vendor-Footnote-87617765
Ref: mpi4py MPI get_vendor-Footnote-88617827
Ref: mpi4py MPI get_vendor-Footnote-89617889
Ref: mpi4py MPI get_vendor-Footnote-90617951
Ref: mpi4py MPI get_vendor-Footnote-91618013
Ref: mpi4py MPI get_vendor-Footnote-92618075
Ref: mpi4py MPI get_vendor-Footnote-93618137
Ref: mpi4py MPI get_vendor-Footnote-94618199
Ref: mpi4py MPI get_vendor-Footnote-95618261
Ref: mpi4py MPI get_vendor-Footnote-96618323
Ref: mpi4py MPI get_vendor-Footnote-97618385
Ref: mpi4py MPI get_vendor-Footnote-98618447
Ref: mpi4py MPI get_vendor-Footnote-99618509
Ref: mpi4py MPI get_vendor-Footnote-100618571
Ref: mpi4py MPI get_vendor-Footnote-101618634
Ref: mpi4py MPI get_vendor-Footnote-102618697
Ref: mpi4py MPI get_vendor-Footnote-103618760
Ref: mpi4py MPI get_vendor-Footnote-104618823
Ref: mpi4py MPI get_vendor-Footnote-105618886
Ref: mpi4py MPI get_vendor-Footnote-106618949
Ref: mpi4py MPI get_vendor-Footnote-107619012
Ref: mpi4py MPI get_vendor-Footnote-108619075
Ref: mpi4py MPI get_vendor-Footnote-109619138
Ref: mpi4py MPI get_vendor-Footnote-110619201
Ref: mpi4py MPI get_vendor-Footnote-111619264
Ref: mpi4py MPI get_vendor-Footnote-112619327
Ref: mpi4py MPI get_vendor-Footnote-113619390
Ref: mpi4py MPI get_vendor-Footnote-114619453
Ref: mpi4py MPI get_vendor-Footnote-115619516
Ref: mpi4py MPI get_vendor-Footnote-116619579
Ref: mpi4py MPI get_vendor-Footnote-117619642
Ref: mpi4py MPI get_vendor-Footnote-118619705
Ref: mpi4py MPI get_vendor-Footnote-119619768
Ref: mpi4py MPI get_vendor-Footnote-120619831
Ref: mpi4py MPI get_vendor-Footnote-121619894
Ref: mpi4py MPI get_vendor-Footnote-122619957
Ref: mpi4py MPI get_vendor-Footnote-123620020
Ref: mpi4py MPI get_vendor-Footnote-124620083
Ref: mpi4py MPI get_vendor-Footnote-125620146
Ref: mpi4py MPI get_vendor-Footnote-126620209
Ref: mpi4py MPI get_vendor-Footnote-127620272
Ref: mpi4py MPI get_vendor-Footnote-128620335
Ref: mpi4py MPI get_vendor-Footnote-129620398
Ref: mpi4py MPI get_vendor-Footnote-130620461
Ref: mpi4py MPI get_vendor-Footnote-131620524
Ref: mpi4py MPI get_vendor-Footnote-132620587
Ref: mpi4py MPI get_vendor-Footnote-133620650
Ref: mpi4py MPI get_vendor-Footnote-134620713
Ref: mpi4py MPI get_vendor-Footnote-135620776
Ref: mpi4py MPI get_vendor-Footnote-136620839
Ref: mpi4py MPI get_vendor-Footnote-137620902
Ref: mpi4py MPI get_vendor-Footnote-138620965
Ref: mpi4py MPI get_vendor-Footnote-139621028
Ref: mpi4py MPI get_vendor-Footnote-140621091
Ref: mpi4py MPI get_vendor-Footnote-141621154
Ref: mpi4py MPI get_vendor-Footnote-142621217
Ref: mpi4py MPI get_vendor-Footnote-143621280
Ref: mpi4py MPI get_vendor-Footnote-144621343
Ref: mpi4py MPI get_vendor-Footnote-145621406
Ref: mpi4py MPI get_vendor-Footnote-146621469
Ref: mpi4py MPI get_vendor-Footnote-147621532
Ref: mpi4py MPI get_vendor-Footnote-148621595
Ref: mpi4py MPI get_vendor-Footnote-149621658
Ref: mpi4py MPI get_vendor-Footnote-150621721
Ref: mpi4py MPI get_vendor-Footnote-151621784
Ref: mpi4py MPI get_vendor-Footnote-152621847
Ref: mpi4py MPI get_vendor-Footnote-153621910
Ref: mpi4py MPI get_vendor-Footnote-154621973
Ref: mpi4py MPI get_vendor-Footnote-155622036
Ref: mpi4py MPI get_vendor-Footnote-156622099
Ref: mpi4py MPI get_vendor-Footnote-157622162
Ref: mpi4py MPI get_vendor-Footnote-158622225
Ref: mpi4py MPI get_vendor-Footnote-159622288
Ref: mpi4py MPI get_vendor-Footnote-160622351
Ref: mpi4py MPI get_vendor-Footnote-161622414
Ref: mpi4py MPI get_vendor-Footnote-162622477
Ref: mpi4py MPI get_vendor-Footnote-163622540
Ref: mpi4py MPI get_vendor-Footnote-164622603
Ref: mpi4py MPI get_vendor-Footnote-165622666
Ref: mpi4py MPI get_vendor-Footnote-166622729
Ref: mpi4py MPI get_vendor-Footnote-167622792
Ref: mpi4py MPI get_vendor-Footnote-168622855
Ref: mpi4py MPI get_vendor-Footnote-169622918
Ref: mpi4py MPI get_vendor-Footnote-170622981
Ref: mpi4py MPI get_vendor-Footnote-171623044
Ref: mpi4py MPI get_vendor-Footnote-172623107
Ref: mpi4py MPI get_vendor-Footnote-173623170
Ref: mpi4py MPI get_vendor-Footnote-174623233
Ref: mpi4py MPI get_vendor-Footnote-175623296
Ref: mpi4py MPI get_vendor-Footnote-176623359
Ref: mpi4py MPI get_vendor-Footnote-177623422
Ref: mpi4py MPI get_vendor-Footnote-178623485
Node: mpi4py MPI UNDEFINED623548
Ref: reference/mpi4py MPI UNDEFINED doc623678
Ref: 568623678
Ref: reference/mpi4py MPI UNDEFINED mpi4py-mpi-undefined623678
Ref: 569623678
Ref: reference/mpi4py MPI UNDEFINED mpi4py MPI UNDEFINED623737
Ref: f5623737
Ref: mpi4py MPI UNDEFINED-Footnote-1623871
Ref: mpi4py MPI UNDEFINED-Footnote-2623932
Node: mpi4py MPI ANY_SOURCE623993
Ref: reference/mpi4py MPI ANY_SOURCE doc624120
Ref: 56a624120
Ref: reference/mpi4py MPI ANY_SOURCE mpi4py-mpi-any-source624120
Ref: 56b624120
Ref: reference/mpi4py MPI ANY_SOURCE mpi4py MPI ANY_SOURCE624181
Ref: f6624181
Ref: mpi4py MPI ANY_SOURCE-Footnote-1624318
Ref: mpi4py MPI ANY_SOURCE-Footnote-2624379
Node: mpi4py MPI ANY_TAG624440
Ref: reference/mpi4py MPI ANY_TAG doc624567
Ref: 56c624567
Ref: reference/mpi4py MPI ANY_TAG mpi4py-mpi-any-tag624567
Ref: 56d624567
Ref: reference/mpi4py MPI ANY_TAG mpi4py MPI ANY_TAG624622
Ref: f7624622
Ref: mpi4py MPI ANY_TAG-Footnote-1624750
Ref: mpi4py MPI ANY_TAG-Footnote-2624811
Node: mpi4py MPI PROC_NULL624872
Ref: reference/mpi4py MPI PROC_NULL doc624993
Ref: 56e624993
Ref: reference/mpi4py MPI PROC_NULL mpi4py-mpi-proc-null624993
Ref: 56f624993
Ref: reference/mpi4py MPI PROC_NULL mpi4py MPI PROC_NULL625052
Ref: f8625052
Ref: mpi4py MPI PROC_NULL-Footnote-1625186
Ref: mpi4py MPI PROC_NULL-Footnote-2625247
Node: mpi4py MPI ROOT625308
Ref: reference/mpi4py MPI ROOT doc625428
Ref: 570625428
Ref: reference/mpi4py MPI ROOT mpi4py-mpi-root625428
Ref: 571625428
Ref: reference/mpi4py MPI ROOT mpi4py MPI ROOT625477
Ref: f9625477
Ref: mpi4py MPI ROOT-Footnote-1625596
Ref: mpi4py MPI ROOT-Footnote-2625657
Node: mpi4py MPI BOTTOM625718
Ref: reference/mpi4py MPI BOTTOM doc625837
Ref: 572625837
Ref: reference/mpi4py MPI BOTTOM mpi4py-mpi-bottom625837
Ref: 573625837
Ref: reference/mpi4py MPI BOTTOM mpi4py MPI BOTTOM625890
Ref: fa625890
Node: mpi4py MPI IN_PLACE626009
Ref: reference/mpi4py MPI IN_PLACE doc626138
Ref: 574626138
Ref: reference/mpi4py MPI IN_PLACE mpi4py-mpi-in-place626138
Ref: 575626138
Ref: reference/mpi4py MPI IN_PLACE mpi4py MPI IN_PLACE626195
Ref: fc626195
Node: mpi4py MPI KEYVAL_INVALID626322
Ref: reference/mpi4py MPI KEYVAL_INVALID doc626451
Ref: 576626451
Ref: reference/mpi4py MPI KEYVAL_INVALID mpi4py-mpi-keyval-invalid626451
Ref: 577626451
Ref: reference/mpi4py MPI KEYVAL_INVALID mpi4py MPI KEYVAL_INVALID626520
Ref: 100626520
Ref: mpi4py MPI KEYVAL_INVALID-Footnote-1626669
Ref: mpi4py MPI KEYVAL_INVALID-Footnote-2626730
Node: mpi4py MPI TAG_UB626791
Ref: reference/mpi4py MPI TAG_UB doc626914
Ref: 578626914
Ref: reference/mpi4py MPI TAG_UB mpi4py-mpi-tag-ub626914
Ref: 579626914
Ref: reference/mpi4py MPI TAG_UB mpi4py MPI TAG_UB626967
Ref: 101626967
Ref: mpi4py MPI TAG_UB-Footnote-1627092
Ref: mpi4py MPI TAG_UB-Footnote-2627153
Node: mpi4py MPI IO627214
Ref: reference/mpi4py MPI IO doc627338
Ref: 57a627338
Ref: reference/mpi4py MPI IO mpi4py-mpi-io627338
Ref: 57b627338
Ref: reference/mpi4py MPI IO mpi4py MPI IO627383
Ref: 102627383
Ref: mpi4py MPI IO-Footnote-1627496
Ref: mpi4py MPI IO-Footnote-2627557
Node: mpi4py MPI WTIME_IS_GLOBAL627618
Ref: reference/mpi4py MPI WTIME_IS_GLOBAL doc627749
Ref: 57c627749
Ref: reference/mpi4py MPI WTIME_IS_GLOBAL mpi4py-mpi-wtime-is-global627749
Ref: 57d627749
Ref: reference/mpi4py MPI WTIME_IS_GLOBAL mpi4py MPI WTIME_IS_GLOBAL627820
Ref: 103627820
Ref: mpi4py MPI WTIME_IS_GLOBAL-Footnote-1627972
Ref: mpi4py MPI WTIME_IS_GLOBAL-Footnote-2628033
Node: mpi4py MPI UNIVERSE_SIZE628094
Ref: reference/mpi4py MPI UNIVERSE_SIZE doc628229
Ref: 57e628229
Ref: reference/mpi4py MPI UNIVERSE_SIZE mpi4py-mpi-universe-size628229
Ref: 57f628229
Ref: reference/mpi4py MPI UNIVERSE_SIZE mpi4py MPI UNIVERSE_SIZE628296
Ref: 104628296
Ref: mpi4py MPI UNIVERSE_SIZE-Footnote-1628442
Ref: mpi4py MPI UNIVERSE_SIZE-Footnote-2628503
Node: mpi4py MPI APPNUM628564
Ref: reference/mpi4py MPI APPNUM doc628696
Ref: 580628696
Ref: reference/mpi4py MPI APPNUM mpi4py-mpi-appnum628696
Ref: 581628696
Ref: reference/mpi4py MPI APPNUM mpi4py MPI APPNUM628749
Ref: 105628749
Ref: mpi4py MPI APPNUM-Footnote-1628874
Ref: mpi4py MPI APPNUM-Footnote-2628935
Node: mpi4py MPI LASTUSEDCODE628996
Ref: reference/mpi4py MPI LASTUSEDCODE doc629123
Ref: 582629123
Ref: reference/mpi4py MPI LASTUSEDCODE mpi4py-mpi-lastusedcode629123
Ref: 583629123
Ref: reference/mpi4py MPI LASTUSEDCODE mpi4py MPI LASTUSEDCODE629188
Ref: 106629188
Ref: mpi4py MPI LASTUSEDCODE-Footnote-1629331
Ref: mpi4py MPI LASTUSEDCODE-Footnote-2629392
Node: mpi4py MPI WIN_BASE629453
Ref: reference/mpi4py MPI WIN_BASE doc629582
Ref: 584629582
Ref: reference/mpi4py MPI WIN_BASE mpi4py-mpi-win-base629582
Ref: 585629582
Ref: reference/mpi4py MPI WIN_BASE mpi4py MPI WIN_BASE629639
Ref: 107629639
Ref: mpi4py MPI WIN_BASE-Footnote-1629770
Ref: mpi4py MPI WIN_BASE-Footnote-2629831
Node: mpi4py MPI WIN_SIZE629892
Ref: reference/mpi4py MPI WIN_SIZE doc630022
Ref: 586630022
Ref: reference/mpi4py MPI WIN_SIZE mpi4py-mpi-win-size630022
Ref: 587630022
Ref: reference/mpi4py MPI WIN_SIZE mpi4py MPI WIN_SIZE630079
Ref: 108630079
Ref: mpi4py MPI WIN_SIZE-Footnote-1630210
Ref: mpi4py MPI WIN_SIZE-Footnote-2630271
Node: mpi4py MPI WIN_DISP_UNIT630332
Ref: reference/mpi4py MPI WIN_DISP_UNIT doc630471
Ref: 588630471
Ref: reference/mpi4py MPI WIN_DISP_UNIT mpi4py-mpi-win-disp-unit630471
Ref: 589630471
Ref: reference/mpi4py MPI WIN_DISP_UNIT mpi4py MPI WIN_DISP_UNIT630538
Ref: 109630538
Ref: mpi4py MPI WIN_DISP_UNIT-Footnote-1630684
Ref: mpi4py MPI WIN_DISP_UNIT-Footnote-2630745
Node: mpi4py MPI WIN_CREATE_FLAVOR630806
Ref: reference/mpi4py MPI WIN_CREATE_FLAVOR doc630947
Ref: 58a630947
Ref: reference/mpi4py MPI WIN_CREATE_FLAVOR mpi4py-mpi-win-create-flavor630947
Ref: 58b630947
Ref: reference/mpi4py MPI WIN_CREATE_FLAVOR mpi4py MPI WIN_CREATE_FLAVOR631022
Ref: 10a631022
Ref: mpi4py MPI WIN_CREATE_FLAVOR-Footnote-1631180
Ref: mpi4py MPI WIN_CREATE_FLAVOR-Footnote-2631241
Node: mpi4py MPI WIN_FLAVOR631302
Ref: reference/mpi4py MPI WIN_FLAVOR doc631439
Ref: 58c631439
Ref: reference/mpi4py MPI WIN_FLAVOR mpi4py-mpi-win-flavor631439
Ref: 58d631439
Ref: reference/mpi4py MPI WIN_FLAVOR mpi4py MPI WIN_FLAVOR631500
Ref: 10b631500
Ref: mpi4py MPI WIN_FLAVOR-Footnote-1631637
Ref: mpi4py MPI WIN_FLAVOR-Footnote-2631698
Node: mpi4py MPI WIN_MODEL631759
Ref: reference/mpi4py MPI WIN_MODEL doc631886
Ref: 58e631886
Ref: reference/mpi4py MPI WIN_MODEL mpi4py-mpi-win-model631886
Ref: 58f631886
Ref: reference/mpi4py MPI WIN_MODEL mpi4py MPI WIN_MODEL631945
Ref: 10c631945
Ref: mpi4py MPI WIN_MODEL-Footnote-1632079
Ref: mpi4py MPI WIN_MODEL-Footnote-2632140
Node: mpi4py MPI SUCCESS632201
Ref: reference/mpi4py MPI SUCCESS doc632330
Ref: 590632330
Ref: reference/mpi4py MPI SUCCESS mpi4py-mpi-success632330
Ref: 591632330
Ref: reference/mpi4py MPI SUCCESS mpi4py MPI SUCCESS632385
Ref: 10d632385
Ref: mpi4py MPI SUCCESS-Footnote-1632513
Ref: mpi4py MPI SUCCESS-Footnote-2632574
Node: mpi4py MPI ERR_LASTCODE632635
Ref: reference/mpi4py MPI ERR_LASTCODE doc632763
Ref: 592632763
Ref: reference/mpi4py MPI ERR_LASTCODE mpi4py-mpi-err-lastcode632763
Ref: 593632763
Ref: reference/mpi4py MPI ERR_LASTCODE mpi4py MPI ERR_LASTCODE632828
Ref: 10e632828
Ref: mpi4py MPI ERR_LASTCODE-Footnote-1632971
Ref: mpi4py MPI ERR_LASTCODE-Footnote-2633032
Node: mpi4py MPI ERR_TYPE633093
Ref: reference/mpi4py MPI ERR_TYPE doc633225
Ref: 594633225
Ref: reference/mpi4py MPI ERR_TYPE mpi4py-mpi-err-type633225
Ref: 595633225
Ref: reference/mpi4py MPI ERR_TYPE mpi4py MPI ERR_TYPE633282
Ref: 111633282
Ref: mpi4py MPI ERR_TYPE-Footnote-1633413
Ref: mpi4py MPI ERR_TYPE-Footnote-2633474
Node: mpi4py MPI ERR_REQUEST633535
Ref: reference/mpi4py MPI ERR_REQUEST doc633661
Ref: 596633661
Ref: reference/mpi4py MPI ERR_REQUEST mpi4py-mpi-err-request633661
Ref: 597633661
Ref: reference/mpi4py MPI ERR_REQUEST mpi4py MPI ERR_REQUEST633724
Ref: 112633724
Ref: mpi4py MPI ERR_REQUEST-Footnote-1633864
Ref: mpi4py MPI ERR_REQUEST-Footnote-2633925
Node: mpi4py MPI ERR_OP633986
Ref: reference/mpi4py MPI ERR_OP doc634113
Ref: 598634113
Ref: reference/mpi4py MPI ERR_OP mpi4py-mpi-err-op634113
Ref: 599634113
Ref: reference/mpi4py MPI ERR_OP mpi4py MPI ERR_OP634166
Ref: 113634166
Ref: mpi4py MPI ERR_OP-Footnote-1634291
Ref: mpi4py MPI ERR_OP-Footnote-2634352
Node: mpi4py MPI ERR_GROUP634413
Ref: reference/mpi4py MPI ERR_GROUP doc634537
Ref: 59a634537
Ref: reference/mpi4py MPI ERR_GROUP mpi4py-mpi-err-group634537
Ref: 59b634537
Ref: reference/mpi4py MPI ERR_GROUP mpi4py MPI ERR_GROUP634596
Ref: 110634596
Ref: mpi4py MPI ERR_GROUP-Footnote-1634730
Ref: mpi4py MPI ERR_GROUP-Footnote-2634791
Node: mpi4py MPI ERR_INFO634852
Ref: reference/mpi4py MPI ERR_INFO doc634984
Ref: 59c634984
Ref: reference/mpi4py MPI ERR_INFO mpi4py-mpi-err-info634984
Ref: 59d634984
Ref: reference/mpi4py MPI ERR_INFO mpi4py MPI ERR_INFO635041
Ref: 123635041
Ref: mpi4py MPI ERR_INFO-Footnote-1635172
Ref: mpi4py MPI ERR_INFO-Footnote-2635233
Node: mpi4py MPI ERR_ERRHANDLER635294
Ref: reference/mpi4py MPI ERR_ERRHANDLER doc635428
Ref: 59e635428
Ref: reference/mpi4py MPI ERR_ERRHANDLER mpi4py-mpi-err-errhandler635428
Ref: 59f635428
Ref: reference/mpi4py MPI ERR_ERRHANDLER mpi4py MPI ERR_ERRHANDLER635497
Ref: 114635497
Ref: mpi4py MPI ERR_ERRHANDLER-Footnote-1635646
Ref: mpi4py MPI ERR_ERRHANDLER-Footnote-2635707
Node: mpi4py MPI ERR_SESSION635768
Ref: reference/mpi4py MPI ERR_SESSION doc635902
Ref: 5a0635902
Ref: reference/mpi4py MPI ERR_SESSION mpi4py-mpi-err-session635902
Ref: 5a1635902
Ref: reference/mpi4py MPI ERR_SESSION mpi4py MPI ERR_SESSION635965
Ref: 557635965
Ref: mpi4py MPI ERR_SESSION-Footnote-1636105
Ref: mpi4py MPI ERR_SESSION-Footnote-2636166
Node: mpi4py MPI ERR_COMM636227
Ref: reference/mpi4py MPI ERR_COMM doc636354
Ref: 5a2636354
Ref: reference/mpi4py MPI ERR_COMM mpi4py-mpi-err-comm636354
Ref: 5a3636354
Ref: reference/mpi4py MPI ERR_COMM mpi4py MPI ERR_COMM636411
Ref: 10f636411
Ref: mpi4py MPI ERR_COMM-Footnote-1636542
Ref: mpi4py MPI ERR_COMM-Footnote-2636603
Node: mpi4py MPI ERR_WIN636664
Ref: reference/mpi4py MPI ERR_WIN doc636788
Ref: 5a4636788
Ref: reference/mpi4py MPI ERR_WIN mpi4py-mpi-err-win636788
Ref: 5a5636788
Ref: reference/mpi4py MPI ERR_WIN mpi4py MPI ERR_WIN636843
Ref: 125636843
Ref: mpi4py MPI ERR_WIN-Footnote-1636971
Ref: mpi4py MPI ERR_WIN-Footnote-2637032
Node: mpi4py MPI ERR_FILE637093
Ref: reference/mpi4py MPI ERR_FILE doc637219
Ref: 5a6637219
Ref: reference/mpi4py MPI ERR_FILE mpi4py-mpi-err-file637219
Ref: 5a7637219
Ref: reference/mpi4py MPI ERR_FILE mpi4py MPI ERR_FILE637276
Ref: 124637276
Ref: mpi4py MPI ERR_FILE-Footnote-1637407
Ref: mpi4py MPI ERR_FILE-Footnote-2637468
Node: mpi4py MPI ERR_BUFFER637529
Ref: reference/mpi4py MPI ERR_BUFFER doc637657
Ref: 5a8637657
Ref: reference/mpi4py MPI ERR_BUFFER mpi4py-mpi-err-buffer637657
Ref: 5a9637657
Ref: reference/mpi4py MPI ERR_BUFFER mpi4py MPI ERR_BUFFER637718
Ref: 115637718
Ref: mpi4py MPI ERR_BUFFER-Footnote-1637855
Ref: mpi4py MPI ERR_BUFFER-Footnote-2637916
Node: mpi4py MPI ERR_COUNT637977
Ref: reference/mpi4py MPI ERR_COUNT doc638104
Ref: 5aa638104
Ref: reference/mpi4py MPI ERR_COUNT mpi4py-mpi-err-count638104
Ref: 5ab638104
Ref: reference/mpi4py MPI ERR_COUNT mpi4py MPI ERR_COUNT638165
Ref: 116638165
Ref: mpi4py MPI ERR_COUNT-Footnote-1638299
Ref: mpi4py MPI ERR_COUNT-Footnote-2638360
Node: mpi4py MPI ERR_TAG638421
Ref: reference/mpi4py MPI ERR_TAG doc638546
Ref: 5ac638546
Ref: reference/mpi4py MPI ERR_TAG mpi4py-mpi-err-tag638546
Ref: 5ad638546
Ref: reference/mpi4py MPI ERR_TAG mpi4py MPI ERR_TAG638603
Ref: 117638603
Ref: mpi4py MPI ERR_TAG-Footnote-1638731
Ref: mpi4py MPI ERR_TAG-Footnote-2638792
Node: mpi4py MPI ERR_RANK638853
Ref: reference/mpi4py MPI ERR_RANK doc638977
Ref: 5ae638977
Ref: reference/mpi4py MPI ERR_RANK mpi4py-mpi-err-rank638977
Ref: 5af638977
Ref: reference/mpi4py MPI ERR_RANK mpi4py MPI ERR_RANK639036
Ref: 118639036
Ref: mpi4py MPI ERR_RANK-Footnote-1639167
Ref: mpi4py MPI ERR_RANK-Footnote-2639228
Node: mpi4py MPI ERR_ROOT639289
Ref: reference/mpi4py MPI ERR_ROOT doc639418
Ref: 5b0639418
Ref: reference/mpi4py MPI ERR_ROOT mpi4py-mpi-err-root639418
Ref: 5b1639418
Ref: reference/mpi4py MPI ERR_ROOT mpi4py MPI ERR_ROOT639477
Ref: 119639477
Ref: mpi4py MPI ERR_ROOT-Footnote-1639608
Ref: mpi4py MPI ERR_ROOT-Footnote-2639669
Node: mpi4py MPI ERR_TRUNCATE639730
Ref: reference/mpi4py MPI ERR_TRUNCATE doc639864
Ref: 5b2639864
Ref: reference/mpi4py MPI ERR_TRUNCATE mpi4py-mpi-err-truncate639864
Ref: 5b3639864
Ref: reference/mpi4py MPI ERR_TRUNCATE mpi4py MPI ERR_TRUNCATE639931
Ref: 11a639931
Ref: mpi4py MPI ERR_TRUNCATE-Footnote-1640074
Ref: mpi4py MPI ERR_TRUNCATE-Footnote-2640135
Node: mpi4py MPI ERR_IN_STATUS640196
Ref: reference/mpi4py MPI ERR_IN_STATUS doc640333
Ref: 5b4640333
Ref: reference/mpi4py MPI ERR_IN_STATUS mpi4py-mpi-err-in-status640333
Ref: 5b5640333
Ref: reference/mpi4py MPI ERR_IN_STATUS mpi4py MPI ERR_IN_STATUS640402
Ref: 11b640402
Ref: mpi4py MPI ERR_IN_STATUS-Footnote-1640548
Ref: mpi4py MPI ERR_IN_STATUS-Footnote-2640609
Node: mpi4py MPI ERR_PENDING640670
Ref: reference/mpi4py MPI ERR_PENDING doc640807
Ref: 5b6640807
Ref: reference/mpi4py MPI ERR_PENDING mpi4py-mpi-err-pending640807
Ref: 5b7640807
Ref: reference/mpi4py MPI ERR_PENDING mpi4py MPI ERR_PENDING640872
Ref: 11c640872
Ref: mpi4py MPI ERR_PENDING-Footnote-1641012
Ref: mpi4py MPI ERR_PENDING-Footnote-2641073
Node: mpi4py MPI ERR_TOPOLOGY641134
Ref: reference/mpi4py MPI ERR_TOPOLOGY doc641266
Ref: 5b8641266
Ref: reference/mpi4py MPI ERR_TOPOLOGY mpi4py-mpi-err-topology641266
Ref: 5b9641266
Ref: reference/mpi4py MPI ERR_TOPOLOGY mpi4py MPI ERR_TOPOLOGY641333
Ref: 11d641333
Ref: mpi4py MPI ERR_TOPOLOGY-Footnote-1641476
Ref: mpi4py MPI ERR_TOPOLOGY-Footnote-2641537
Node: mpi4py MPI ERR_DIMS641598
Ref: reference/mpi4py MPI ERR_DIMS doc641726
Ref: 5ba641726
Ref: reference/mpi4py MPI ERR_DIMS mpi4py-mpi-err-dims641726
Ref: 5bb641726
Ref: reference/mpi4py MPI ERR_DIMS mpi4py MPI ERR_DIMS641785
Ref: 11e641785
Ref: mpi4py MPI ERR_DIMS-Footnote-1641916
Ref: mpi4py MPI ERR_DIMS-Footnote-2641977
Node: mpi4py MPI ERR_ARG642038
Ref: reference/mpi4py MPI ERR_ARG doc642163
Ref: 5bc642163
Ref: reference/mpi4py MPI ERR_ARG mpi4py-mpi-err-arg642163
Ref: 5bd642163
Ref: reference/mpi4py MPI ERR_ARG mpi4py MPI ERR_ARG642220
Ref: 11f642220
Ref: mpi4py MPI ERR_ARG-Footnote-1642348
Ref: mpi4py MPI ERR_ARG-Footnote-2642409
Node: mpi4py MPI ERR_OTHER642470
Ref: reference/mpi4py MPI ERR_OTHER doc642598
Ref: 5be642598
Ref: reference/mpi4py MPI ERR_OTHER mpi4py-mpi-err-other642598
Ref: 5bf642598
Ref: reference/mpi4py MPI ERR_OTHER mpi4py MPI ERR_OTHER642659
Ref: 120642659
Ref: mpi4py MPI ERR_OTHER-Footnote-1642793
Ref: mpi4py MPI ERR_OTHER-Footnote-2642854
Node: mpi4py MPI ERR_UNKNOWN642915
Ref: reference/mpi4py MPI ERR_UNKNOWN doc643046
Ref: 5c0643046
Ref: reference/mpi4py MPI ERR_UNKNOWN mpi4py-mpi-err-unknown643046
Ref: 5c1643046
Ref: reference/mpi4py MPI ERR_UNKNOWN mpi4py MPI ERR_UNKNOWN643111
Ref: 121643111
Ref: mpi4py MPI ERR_UNKNOWN-Footnote-1643251
Ref: mpi4py MPI ERR_UNKNOWN-Footnote-2643312
Node: mpi4py MPI ERR_INTERN643373
Ref: reference/mpi4py MPI ERR_INTERN doc643505
Ref: 5c2643505
Ref: reference/mpi4py MPI ERR_INTERN mpi4py-mpi-err-intern643505
Ref: 5c3643505
Ref: reference/mpi4py MPI ERR_INTERN mpi4py MPI ERR_INTERN643568
Ref: 122643568
Ref: mpi4py MPI ERR_INTERN-Footnote-1643705
Ref: mpi4py MPI ERR_INTERN-Footnote-2643766
Node: mpi4py MPI ERR_KEYVAL643827
Ref: reference/mpi4py MPI ERR_KEYVAL doc643958
Ref: 5c4643958
Ref: reference/mpi4py MPI ERR_KEYVAL mpi4py-mpi-err-keyval643958
Ref: 5c5643958
Ref: reference/mpi4py MPI ERR_KEYVAL mpi4py MPI ERR_KEYVAL644021
Ref: 126644021
Ref: mpi4py MPI ERR_KEYVAL-Footnote-1644158
Ref: mpi4py MPI ERR_KEYVAL-Footnote-2644219
Node: mpi4py MPI ERR_NO_MEM644280
Ref: reference/mpi4py MPI ERR_NO_MEM doc644413
Ref: 5c6644413
Ref: reference/mpi4py MPI ERR_NO_MEM mpi4py-mpi-err-no-mem644413
Ref: 5c7644413
Ref: reference/mpi4py MPI ERR_NO_MEM mpi4py MPI ERR_NO_MEM644476
Ref: 138644476
Ref: mpi4py MPI ERR_NO_MEM-Footnote-1644613
Ref: mpi4py MPI ERR_NO_MEM-Footnote-2644674
Node: mpi4py MPI ERR_INFO_KEY644735
Ref: reference/mpi4py MPI ERR_INFO_KEY doc644872
Ref: 5c8644872
Ref: reference/mpi4py MPI ERR_INFO_KEY mpi4py-mpi-err-info-key644872
Ref: 5c9644872
Ref: reference/mpi4py MPI ERR_INFO_KEY mpi4py MPI ERR_INFO_KEY644939
Ref: 127644939
Ref: mpi4py MPI ERR_INFO_KEY-Footnote-1645082
Ref: mpi4py MPI ERR_INFO_KEY-Footnote-2645143
Node: mpi4py MPI ERR_INFO_VALUE645204
Ref: reference/mpi4py MPI ERR_INFO_VALUE doc645345
Ref: 5ca645345
Ref: reference/mpi4py MPI ERR_INFO_VALUE mpi4py-mpi-err-info-value645345
Ref: 5cb645345
Ref: reference/mpi4py MPI ERR_INFO_VALUE mpi4py MPI ERR_INFO_VALUE645416
Ref: 128645416
Ref: mpi4py MPI ERR_INFO_VALUE-Footnote-1645565
Ref: mpi4py MPI ERR_INFO_VALUE-Footnote-2645626
Node: mpi4py MPI ERR_INFO_NOKEY645687
Ref: reference/mpi4py MPI ERR_INFO_NOKEY doc645825
Ref: 5cc645825
Ref: reference/mpi4py MPI ERR_INFO_NOKEY mpi4py-mpi-err-info-nokey645825
Ref: 5cd645825
Ref: reference/mpi4py MPI ERR_INFO_NOKEY mpi4py MPI ERR_INFO_NOKEY645896
Ref: 129645896
Ref: mpi4py MPI ERR_INFO_NOKEY-Footnote-1646045
Ref: mpi4py MPI ERR_INFO_NOKEY-Footnote-2646106
Node: mpi4py MPI ERR_SPAWN646167
Ref: reference/mpi4py MPI ERR_SPAWN doc646299
Ref: 5ce646299
Ref: reference/mpi4py MPI ERR_SPAWN mpi4py-mpi-err-spawn646299
Ref: 5cf646299
Ref: reference/mpi4py MPI ERR_SPAWN mpi4py MPI ERR_SPAWN646360
Ref: 13d646360
Ref: mpi4py MPI ERR_SPAWN-Footnote-1646494
Ref: mpi4py MPI ERR_SPAWN-Footnote-2646555
Node: mpi4py MPI ERR_PORT646616
Ref: reference/mpi4py MPI ERR_PORT doc646745
Ref: 5d0646745
Ref: reference/mpi4py MPI ERR_PORT mpi4py-mpi-err-port646745
Ref: 5d1646745
Ref: reference/mpi4py MPI ERR_PORT mpi4py MPI ERR_PORT646804
Ref: 13a646804
Ref: mpi4py MPI ERR_PORT-Footnote-1646935
Ref: mpi4py MPI ERR_PORT-Footnote-2646996
Node: mpi4py MPI ERR_SERVICE647057
Ref: reference/mpi4py MPI ERR_SERVICE doc647185
Ref: 5d2647185
Ref: reference/mpi4py MPI ERR_SERVICE mpi4py-mpi-err-service647185
Ref: 5d3647185
Ref: reference/mpi4py MPI ERR_SERVICE mpi4py MPI ERR_SERVICE647250
Ref: 13c647250
Ref: mpi4py MPI ERR_SERVICE-Footnote-1647390
Ref: mpi4py MPI ERR_SERVICE-Footnote-2647451
Node: mpi4py MPI ERR_NAME647512
Ref: reference/mpi4py MPI ERR_NAME doc647648
Ref: 5d4647648
Ref: reference/mpi4py MPI ERR_NAME mpi4py-mpi-err-name647648
Ref: 5d5647648
Ref: reference/mpi4py MPI ERR_NAME mpi4py MPI ERR_NAME647707
Ref: 137647707
Ref: mpi4py MPI ERR_NAME-Footnote-1647838
Ref: mpi4py MPI ERR_NAME-Footnote-2647899
Node: mpi4py MPI ERR_PROC_ABORTED647960
Ref: reference/mpi4py MPI ERR_PROC_ABORTED doc648093
Ref: 5d6648093
Ref: reference/mpi4py MPI ERR_PROC_ABORTED mpi4py-mpi-err-proc-aborted648093
Ref: 5d7648093
Ref: reference/mpi4py MPI ERR_PROC_ABORTED mpi4py MPI ERR_PROC_ABORTED648168
Ref: 558648168
Ref: mpi4py MPI ERR_PROC_ABORTED-Footnote-1648323
Ref: mpi4py MPI ERR_PROC_ABORTED-Footnote-2648384
Node: mpi4py MPI ERR_BASE648445
Ref: reference/mpi4py MPI ERR_BASE doc648578
Ref: 5d8648578
Ref: reference/mpi4py MPI ERR_BASE mpi4py-mpi-err-base648578
Ref: 5d9648578
Ref: reference/mpi4py MPI ERR_BASE mpi4py MPI ERR_BASE648637
Ref: 13e648637
Ref: mpi4py MPI ERR_BASE-Footnote-1648768
Ref: mpi4py MPI ERR_BASE-Footnote-2648829
Node: mpi4py MPI ERR_SIZE648890
Ref: reference/mpi4py MPI ERR_SIZE doc649015
Ref: 5da649015
Ref: reference/mpi4py MPI ERR_SIZE mpi4py-mpi-err-size649015
Ref: 5db649015
Ref: reference/mpi4py MPI ERR_SIZE mpi4py MPI ERR_SIZE649074
Ref: 13f649074
Ref: mpi4py MPI ERR_SIZE-Footnote-1649205
Ref: mpi4py MPI ERR_SIZE-Footnote-2649266
Node: mpi4py MPI ERR_DISP649327
Ref: reference/mpi4py MPI ERR_DISP doc649454
Ref: 5dc649454
Ref: reference/mpi4py MPI ERR_DISP mpi4py-mpi-err-disp649454
Ref: 5dd649454
Ref: reference/mpi4py MPI ERR_DISP mpi4py MPI ERR_DISP649513
Ref: 140649513
Ref: mpi4py MPI ERR_DISP-Footnote-1649644
Ref: mpi4py MPI ERR_DISP-Footnote-2649705
Node: mpi4py MPI ERR_ASSERT649766
Ref: reference/mpi4py MPI ERR_ASSERT doc649897
Ref: 5de649897
Ref: reference/mpi4py MPI ERR_ASSERT mpi4py-mpi-err-assert649897
Ref: 5df649897
Ref: reference/mpi4py MPI ERR_ASSERT mpi4py MPI ERR_ASSERT649960
Ref: 141649960
Ref: mpi4py MPI ERR_ASSERT-Footnote-1650097
Ref: mpi4py MPI ERR_ASSERT-Footnote-2650158
Node: mpi4py MPI ERR_LOCKTYPE650219
Ref: reference/mpi4py MPI ERR_LOCKTYPE doc650358
Ref: 5e0650358
Ref: reference/mpi4py MPI ERR_LOCKTYPE mpi4py-mpi-err-locktype650358
Ref: 5e1650358
Ref: reference/mpi4py MPI ERR_LOCKTYPE mpi4py MPI ERR_LOCKTYPE650425
Ref: 142650425
Ref: mpi4py MPI ERR_LOCKTYPE-Footnote-1650568
Ref: mpi4py MPI ERR_LOCKTYPE-Footnote-2650629
Node: mpi4py MPI ERR_RMA_CONFLICT650690
Ref: reference/mpi4py MPI ERR_RMA_CONFLICT doc650831
Ref: 5e2650831
Ref: reference/mpi4py MPI ERR_RMA_CONFLICT mpi4py-mpi-err-rma-conflict650831
Ref: 5e3650831
Ref: reference/mpi4py MPI ERR_RMA_CONFLICT mpi4py MPI ERR_RMA_CONFLICT650906
Ref: 143650906
Ref: mpi4py MPI ERR_RMA_CONFLICT-Footnote-1651061
Ref: mpi4py MPI ERR_RMA_CONFLICT-Footnote-2651122
Node: mpi4py MPI ERR_RMA_SYNC651183
Ref: reference/mpi4py MPI ERR_RMA_SYNC doc651325
Ref: 5e4651325
Ref: reference/mpi4py MPI ERR_RMA_SYNC mpi4py-mpi-err-rma-sync651325
Ref: 5e5651325
Ref: reference/mpi4py MPI ERR_RMA_SYNC mpi4py MPI ERR_RMA_SYNC651392
Ref: 144651392
Ref: mpi4py MPI ERR_RMA_SYNC-Footnote-1651535
Ref: mpi4py MPI ERR_RMA_SYNC-Footnote-2651596
Node: mpi4py MPI ERR_RMA_RANGE651657
Ref: reference/mpi4py MPI ERR_RMA_RANGE doc651797
Ref: 5e6651797
Ref: reference/mpi4py MPI ERR_RMA_RANGE mpi4py-mpi-err-rma-range651797
Ref: 5e7651797
Ref: reference/mpi4py MPI ERR_RMA_RANGE mpi4py MPI ERR_RMA_RANGE651866
Ref: 145651866
Ref: mpi4py MPI ERR_RMA_RANGE-Footnote-1652012
Ref: mpi4py MPI ERR_RMA_RANGE-Footnote-2652073
Node: mpi4py MPI ERR_RMA_ATTACH652134
Ref: reference/mpi4py MPI ERR_RMA_ATTACH doc652276
Ref: 5e8652276
Ref: reference/mpi4py MPI ERR_RMA_ATTACH mpi4py-mpi-err-rma-attach652276
Ref: 5e9652276
Ref: reference/mpi4py MPI ERR_RMA_ATTACH mpi4py MPI ERR_RMA_ATTACH652347
Ref: 146652347
Ref: mpi4py MPI ERR_RMA_ATTACH-Footnote-1652496
Ref: mpi4py MPI ERR_RMA_ATTACH-Footnote-2652557
Node: mpi4py MPI ERR_RMA_SHARED652618
Ref: reference/mpi4py MPI ERR_RMA_SHARED doc652761
Ref: 5ea652761
Ref: reference/mpi4py MPI ERR_RMA_SHARED mpi4py-mpi-err-rma-shared652761
Ref: 5eb652761
Ref: reference/mpi4py MPI ERR_RMA_SHARED mpi4py MPI ERR_RMA_SHARED652832
Ref: 147652832
Ref: mpi4py MPI ERR_RMA_SHARED-Footnote-1652981
Ref: mpi4py MPI ERR_RMA_SHARED-Footnote-2653042
Node: mpi4py MPI ERR_RMA_FLAVOR653103
Ref: reference/mpi4py MPI ERR_RMA_FLAVOR doc653244
Ref: 5ec653244
Ref: reference/mpi4py MPI ERR_RMA_FLAVOR mpi4py-mpi-err-rma-flavor653244
Ref: 5ed653244
Ref: reference/mpi4py MPI ERR_RMA_FLAVOR mpi4py MPI ERR_RMA_FLAVOR653315
Ref: 148653315
Ref: mpi4py MPI ERR_RMA_FLAVOR-Footnote-1653464
Ref: mpi4py MPI ERR_RMA_FLAVOR-Footnote-2653525
Node: mpi4py MPI ERR_BAD_FILE653586
Ref: reference/mpi4py MPI ERR_BAD_FILE doc653729
Ref: 5ee653729
Ref: reference/mpi4py MPI ERR_BAD_FILE mpi4py-mpi-err-bad-file653729
Ref: 5ef653729
Ref: reference/mpi4py MPI ERR_BAD_FILE mpi4py MPI ERR_BAD_FILE653796
Ref: 12c653796
Ref: mpi4py MPI ERR_BAD_FILE-Footnote-1653939
Ref: mpi4py MPI ERR_BAD_FILE-Footnote-2654000
Node: mpi4py MPI ERR_NO_SUCH_FILE654061
Ref: reference/mpi4py MPI ERR_NO_SUCH_FILE doc654205
Ref: 5f0654205
Ref: reference/mpi4py MPI ERR_NO_SUCH_FILE mpi4py-mpi-err-no-such-file654205
Ref: 5f1654205
Ref: reference/mpi4py MPI ERR_NO_SUCH_FILE mpi4py MPI ERR_NO_SUCH_FILE654280
Ref: 130654280
Ref: mpi4py MPI ERR_NO_SUCH_FILE-Footnote-1654435
Ref: mpi4py MPI ERR_NO_SUCH_FILE-Footnote-2654496
Node: mpi4py MPI ERR_FILE_EXISTS654557
Ref: reference/mpi4py MPI ERR_FILE_EXISTS doc654704
Ref: 5f2654704
Ref: reference/mpi4py MPI ERR_FILE_EXISTS mpi4py-mpi-err-file-exists654704
Ref: 5f3654704
Ref: reference/mpi4py MPI ERR_FILE_EXISTS mpi4py MPI ERR_FILE_EXISTS654777
Ref: 12d654777
Ref: mpi4py MPI ERR_FILE_EXISTS-Footnote-1654929
Ref: mpi4py MPI ERR_FILE_EXISTS-Footnote-2654990
Node: mpi4py MPI ERR_FILE_IN_USE655051
Ref: reference/mpi4py MPI ERR_FILE_IN_USE doc655191
Ref: 5f4655191
Ref: reference/mpi4py MPI ERR_FILE_IN_USE mpi4py-mpi-err-file-in-use655191
Ref: 5f5655191
Ref: reference/mpi4py MPI ERR_FILE_IN_USE mpi4py MPI ERR_FILE_IN_USE655264
Ref: 12e655264
Ref: mpi4py MPI ERR_FILE_IN_USE-Footnote-1655416
Ref: mpi4py MPI ERR_FILE_IN_USE-Footnote-2655477
Node: mpi4py MPI ERR_AMODE655538
Ref: reference/mpi4py MPI ERR_AMODE doc655673
Ref: 5f6655673
Ref: reference/mpi4py MPI ERR_AMODE mpi4py-mpi-err-amode655673
Ref: 5f7655673
Ref: reference/mpi4py MPI ERR_AMODE mpi4py MPI ERR_AMODE655734
Ref: 12b655734
Ref: mpi4py MPI ERR_AMODE-Footnote-1655868
Ref: mpi4py MPI ERR_AMODE-Footnote-2655929
Node: mpi4py MPI ERR_ACCESS655990
Ref: reference/mpi4py MPI ERR_ACCESS doc656123
Ref: 5f8656123
Ref: reference/mpi4py MPI ERR_ACCESS mpi4py-mpi-err-access656123
Ref: 5f9656123
Ref: reference/mpi4py MPI ERR_ACCESS mpi4py MPI ERR_ACCESS656186
Ref: 12a656186
Ref: mpi4py MPI ERR_ACCESS-Footnote-1656323
Ref: mpi4py MPI ERR_ACCESS-Footnote-2656384
Node: mpi4py MPI ERR_READ_ONLY656445
Ref: reference/mpi4py MPI ERR_READ_ONLY doc656581
Ref: 5fa656581
Ref: reference/mpi4py MPI ERR_READ_ONLY mpi4py-mpi-err-read-only656581
Ref: 5fb656581
Ref: reference/mpi4py MPI ERR_READ_ONLY mpi4py MPI ERR_READ_ONLY656650
Ref: 132656650
Ref: mpi4py MPI ERR_READ_ONLY-Footnote-1656796
Ref: mpi4py MPI ERR_READ_ONLY-Footnote-2656857
Node: mpi4py MPI ERR_NO_SPACE656918
Ref: reference/mpi4py MPI ERR_NO_SPACE doc657053
Ref: 5fc657053
Ref: reference/mpi4py MPI ERR_NO_SPACE mpi4py-mpi-err-no-space657053
Ref: 5fd657053
Ref: reference/mpi4py MPI ERR_NO_SPACE mpi4py MPI ERR_NO_SPACE657120
Ref: 12f657120
Ref: mpi4py MPI ERR_NO_SPACE-Footnote-1657263
Ref: mpi4py MPI ERR_NO_SPACE-Footnote-2657324
Node: mpi4py MPI ERR_QUOTA657385
Ref: reference/mpi4py MPI ERR_QUOTA doc657519
Ref: 5fe657519
Ref: reference/mpi4py MPI ERR_QUOTA mpi4py-mpi-err-quota657519
Ref: 5ff657519
Ref: reference/mpi4py MPI ERR_QUOTA mpi4py MPI ERR_QUOTA657580
Ref: 13b657580
Ref: mpi4py MPI ERR_QUOTA-Footnote-1657714
Ref: mpi4py MPI ERR_QUOTA-Footnote-2657775
Node: mpi4py MPI ERR_NOT_SAME657836
Ref: reference/mpi4py MPI ERR_NOT_SAME doc657964
Ref: 600657964
Ref: reference/mpi4py MPI ERR_NOT_SAME mpi4py-mpi-err-not-same657964
Ref: 601657964
Ref: reference/mpi4py MPI ERR_NOT_SAME mpi4py MPI ERR_NOT_SAME658031
Ref: 139658031
Ref: mpi4py MPI ERR_NOT_SAME-Footnote-1658174
Ref: mpi4py MPI ERR_NOT_SAME-Footnote-2658235
Node: mpi4py MPI ERR_IO658296
Ref: reference/mpi4py MPI ERR_IO doc658440
Ref: 602658440
Ref: reference/mpi4py MPI ERR_IO mpi4py-mpi-err-io658440
Ref: 603658440
Ref: reference/mpi4py MPI ERR_IO mpi4py MPI ERR_IO658495
Ref: 131658495
Ref: mpi4py MPI ERR_IO-Footnote-1658620
Ref: mpi4py MPI ERR_IO-Footnote-2658681
Node: mpi4py MPI ERR_UNSUPPORTED_OPERATION658742
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_OPERATION doc658897
Ref: 604658897
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_OPERATION mpi4py-mpi-err-unsupported-operation658897
Ref: 605658897
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_OPERATION mpi4py MPI ERR_UNSUPPORTED_OPERATION658990
Ref: 136658990
Ref: mpi4py MPI ERR_UNSUPPORTED_OPERATION-Footnote-1659182
Ref: mpi4py MPI ERR_UNSUPPORTED_OPERATION-Footnote-2659243
Node: mpi4py MPI ERR_UNSUPPORTED_DATAREP659304
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_DATAREP doc659467
Ref: 606659467
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_DATAREP mpi4py-mpi-err-unsupported-datarep659467
Ref: 607659467
Ref: reference/mpi4py MPI ERR_UNSUPPORTED_DATAREP mpi4py MPI ERR_UNSUPPORTED_DATAREP659556
Ref: 135659556
Ref: mpi4py MPI ERR_UNSUPPORTED_DATAREP-Footnote-1659742
Ref: mpi4py MPI ERR_UNSUPPORTED_DATAREP-Footnote-2659803
Node: mpi4py MPI ERR_CONVERSION659864
Ref: reference/mpi4py MPI ERR_CONVERSION doc660017
Ref: 608660017
Ref: reference/mpi4py MPI ERR_CONVERSION mpi4py-mpi-err-conversion660017
Ref: 609660017
Ref: reference/mpi4py MPI ERR_CONVERSION mpi4py MPI ERR_CONVERSION660088
Ref: 133660088
Ref: mpi4py MPI ERR_CONVERSION-Footnote-1660237
Ref: mpi4py MPI ERR_CONVERSION-Footnote-2660298
Node: mpi4py MPI ERR_DUP_DATAREP660359
Ref: reference/mpi4py MPI ERR_DUP_DATAREP doc660508
Ref: 60a660508
Ref: reference/mpi4py MPI ERR_DUP_DATAREP mpi4py-mpi-err-dup-datarep660508
Ref: 60b660508
Ref: reference/mpi4py MPI ERR_DUP_DATAREP mpi4py MPI ERR_DUP_DATAREP660581
Ref: 134660581
Ref: mpi4py MPI ERR_DUP_DATAREP-Footnote-1660733
Ref: mpi4py MPI ERR_DUP_DATAREP-Footnote-2660794
Node: mpi4py MPI ERR_VALUE_TOO_LARGE660855
Ref: reference/mpi4py MPI ERR_VALUE_TOO_LARGE doc661001
Ref: 60c661001
Ref: reference/mpi4py MPI ERR_VALUE_TOO_LARGE mpi4py-mpi-err-value-too-large661001
Ref: 60d661001
Ref: reference/mpi4py MPI ERR_VALUE_TOO_LARGE mpi4py MPI ERR_VALUE_TOO_LARGE661082
Ref: 559661082
Ref: mpi4py MPI ERR_VALUE_TOO_LARGE-Footnote-1661246
Ref: mpi4py MPI ERR_VALUE_TOO_LARGE-Footnote-2661307
Node: mpi4py MPI ERR_REVOKED661368
Ref: reference/mpi4py MPI ERR_REVOKED doc661514
Ref: 60e661514
Ref: reference/mpi4py MPI ERR_REVOKED mpi4py-mpi-err-revoked661514
Ref: 60f661514
Ref: reference/mpi4py MPI ERR_REVOKED mpi4py MPI ERR_REVOKED661579
Ref: 55a661579
Ref: mpi4py MPI ERR_REVOKED-Footnote-1661719
Ref: mpi4py MPI ERR_REVOKED-Footnote-2661780
Node: mpi4py MPI ERR_PROC_FAILED661841
Ref: reference/mpi4py MPI ERR_PROC_FAILED doc661991
Ref: 610661991
Ref: reference/mpi4py MPI ERR_PROC_FAILED mpi4py-mpi-err-proc-failed661991
Ref: 611661991
Ref: reference/mpi4py MPI ERR_PROC_FAILED mpi4py MPI ERR_PROC_FAILED662064
Ref: 55b662064
Ref: mpi4py MPI ERR_PROC_FAILED-Footnote-1662216
Ref: mpi4py MPI ERR_PROC_FAILED-Footnote-2662277
Node: mpi4py MPI ERR_PROC_FAILED_PENDING662338
Ref: reference/mpi4py MPI ERR_PROC_FAILED_PENDING doc662484
Ref: 612662484
Ref: reference/mpi4py MPI ERR_PROC_FAILED_PENDING mpi4py-mpi-err-proc-failed-pending662484
Ref: 613662484
Ref: reference/mpi4py MPI ERR_PROC_FAILED_PENDING mpi4py MPI ERR_PROC_FAILED_PENDING662573
Ref: 55c662573
Ref: mpi4py MPI ERR_PROC_FAILED_PENDING-Footnote-1662759
Ref: mpi4py MPI ERR_PROC_FAILED_PENDING-Footnote-2662820
Node: mpi4py MPI ORDER_C662881
Ref: reference/mpi4py MPI ORDER_C doc663025
Ref: 614663025
Ref: reference/mpi4py MPI ORDER_C mpi4py-mpi-order-c663025
Ref: 615663025
Ref: reference/mpi4py MPI ORDER_C mpi4py MPI ORDER_C663082
Ref: 149663082
Ref: mpi4py MPI ORDER_C-Footnote-1663210
Ref: mpi4py MPI ORDER_C-Footnote-2663271
Node: mpi4py MPI ORDER_FORTRAN663332
Ref: reference/mpi4py MPI ORDER_FORTRAN doc663460
Ref: 616663460
Ref: reference/mpi4py MPI ORDER_FORTRAN mpi4py-mpi-order-fortran663460
Ref: 617663460
Ref: reference/mpi4py MPI ORDER_FORTRAN mpi4py MPI ORDER_FORTRAN663529
Ref: 14b663529
Ref: mpi4py MPI ORDER_FORTRAN-Footnote-1663675
Ref: mpi4py MPI ORDER_FORTRAN-Footnote-2663736
Node: mpi4py MPI ORDER_F663797
Ref: reference/mpi4py MPI ORDER_F doc663935
Ref: 618663935
Ref: reference/mpi4py MPI ORDER_F mpi4py-mpi-order-f663935
Ref: 619663935
Ref: reference/mpi4py MPI ORDER_F mpi4py MPI ORDER_F663992
Ref: 14a663992
Ref: mpi4py MPI ORDER_F-Footnote-1664120
Ref: mpi4py MPI ORDER_F-Footnote-2664181
Node: mpi4py MPI TYPECLASS_INTEGER664242
Ref: reference/mpi4py MPI TYPECLASS_INTEGER doc664381
Ref: 61a664381
Ref: reference/mpi4py MPI TYPECLASS_INTEGER mpi4py-mpi-typeclass-integer664381
Ref: 61b664381
Ref: reference/mpi4py MPI TYPECLASS_INTEGER mpi4py MPI TYPECLASS_INTEGER664458
Ref: 14c664458
Ref: mpi4py MPI TYPECLASS_INTEGER-Footnote-1664616
Ref: mpi4py MPI TYPECLASS_INTEGER-Footnote-2664677
Node: mpi4py MPI TYPECLASS_REAL664738
Ref: reference/mpi4py MPI TYPECLASS_REAL doc664887
Ref: 61c664887
Ref: reference/mpi4py MPI TYPECLASS_REAL mpi4py-mpi-typeclass-real664887
Ref: 61d664887
Ref: reference/mpi4py MPI TYPECLASS_REAL mpi4py MPI TYPECLASS_REAL664958
Ref: 14d664958
Ref: mpi4py MPI TYPECLASS_REAL-Footnote-1665107
Ref: mpi4py MPI TYPECLASS_REAL-Footnote-2665168
Node: mpi4py MPI TYPECLASS_COMPLEX665229
Ref: reference/mpi4py MPI TYPECLASS_COMPLEX doc665376
Ref: 61e665376
Ref: reference/mpi4py MPI TYPECLASS_COMPLEX mpi4py-mpi-typeclass-complex665376
Ref: 61f665376
Ref: reference/mpi4py MPI TYPECLASS_COMPLEX mpi4py MPI TYPECLASS_COMPLEX665453
Ref: 14e665453
Ref: mpi4py MPI TYPECLASS_COMPLEX-Footnote-1665611
Ref: mpi4py MPI TYPECLASS_COMPLEX-Footnote-2665672
Node: mpi4py MPI DISTRIBUTE_NONE665733
Ref: reference/mpi4py MPI DISTRIBUTE_NONE doc665882
Ref: 620665882
Ref: reference/mpi4py MPI DISTRIBUTE_NONE mpi4py-mpi-distribute-none665882
Ref: 621665882
Ref: reference/mpi4py MPI DISTRIBUTE_NONE mpi4py MPI DISTRIBUTE_NONE665955
Ref: 14f665955
Ref: mpi4py MPI DISTRIBUTE_NONE-Footnote-1666107
Ref: mpi4py MPI DISTRIBUTE_NONE-Footnote-2666168
Node: mpi4py MPI DISTRIBUTE_BLOCK666229
Ref: reference/mpi4py MPI DISTRIBUTE_BLOCK doc666378
Ref: 622666378
Ref: reference/mpi4py MPI DISTRIBUTE_BLOCK mpi4py-mpi-distribute-block666378
Ref: 623666378
Ref: reference/mpi4py MPI DISTRIBUTE_BLOCK mpi4py MPI DISTRIBUTE_BLOCK666453
Ref: 150666453
Ref: mpi4py MPI DISTRIBUTE_BLOCK-Footnote-1666608
Ref: mpi4py MPI DISTRIBUTE_BLOCK-Footnote-2666669
Node: mpi4py MPI DISTRIBUTE_CYCLIC666730
Ref: reference/mpi4py MPI DISTRIBUTE_CYCLIC doc666884
Ref: 624666884
Ref: reference/mpi4py MPI DISTRIBUTE_CYCLIC mpi4py-mpi-distribute-cyclic666884
Ref: 625666884
Ref: reference/mpi4py MPI DISTRIBUTE_CYCLIC mpi4py MPI DISTRIBUTE_CYCLIC666961
Ref: 151666961
Ref: mpi4py MPI DISTRIBUTE_CYCLIC-Footnote-1667119
Ref: mpi4py MPI DISTRIBUTE_CYCLIC-Footnote-2667180
Node: mpi4py MPI DISTRIBUTE_DFLT_DARG667241
Ref: reference/mpi4py MPI DISTRIBUTE_DFLT_DARG doc667393
Ref: 626667393
Ref: reference/mpi4py MPI DISTRIBUTE_DFLT_DARG mpi4py-mpi-distribute-dflt-darg667393
Ref: 627667393
Ref: reference/mpi4py MPI DISTRIBUTE_DFLT_DARG mpi4py MPI DISTRIBUTE_DFLT_DARG667476
Ref: 152667476
Ref: mpi4py MPI DISTRIBUTE_DFLT_DARG-Footnote-1667643
Ref: mpi4py MPI DISTRIBUTE_DFLT_DARG-Footnote-2667704
Node: mpi4py MPI COMBINER_NAMED667765
Ref: reference/mpi4py MPI COMBINER_NAMED doc667912
Ref: 628667912
Ref: reference/mpi4py MPI COMBINER_NAMED mpi4py-mpi-combiner-named667912
Ref: 629667912
Ref: reference/mpi4py MPI COMBINER_NAMED mpi4py MPI COMBINER_NAMED667983
Ref: 153667983
Ref: mpi4py MPI COMBINER_NAMED-Footnote-1668132
Ref: mpi4py MPI COMBINER_NAMED-Footnote-2668193
Node: mpi4py MPI COMBINER_DUP668254
Ref: reference/mpi4py MPI COMBINER_DUP doc668400
Ref: 62a668400
Ref: reference/mpi4py MPI COMBINER_DUP mpi4py-mpi-combiner-dup668400
Ref: 62b668400
Ref: reference/mpi4py MPI COMBINER_DUP mpi4py MPI COMBINER_DUP668467
Ref: 154668467
Ref: mpi4py MPI COMBINER_DUP-Footnote-1668610
Ref: mpi4py MPI COMBINER_DUP-Footnote-2668671
Node: mpi4py MPI COMBINER_CONTIGUOUS668732
Ref: reference/mpi4py MPI COMBINER_CONTIGUOUS doc668879
Ref: 62c668879
Ref: reference/mpi4py MPI COMBINER_CONTIGUOUS mpi4py-mpi-combiner-contiguous668879
Ref: 62d668879
Ref: reference/mpi4py MPI COMBINER_CONTIGUOUS mpi4py MPI COMBINER_CONTIGUOUS668960
Ref: 155668960
Ref: mpi4py MPI COMBINER_CONTIGUOUS-Footnote-1669124
Ref: mpi4py MPI COMBINER_CONTIGUOUS-Footnote-2669185
Node: mpi4py MPI COMBINER_VECTOR669246
Ref: reference/mpi4py MPI COMBINER_VECTOR doc669397
Ref: 62e669397
Ref: reference/mpi4py MPI COMBINER_VECTOR mpi4py-mpi-combiner-vector669397
Ref: 62f669397
Ref: reference/mpi4py MPI COMBINER_VECTOR mpi4py MPI COMBINER_VECTOR669470
Ref: 156669470
Ref: mpi4py MPI COMBINER_VECTOR-Footnote-1669622
Ref: mpi4py MPI COMBINER_VECTOR-Footnote-2669683
Node: mpi4py MPI COMBINER_HVECTOR669744
Ref: reference/mpi4py MPI COMBINER_HVECTOR doc669892
Ref: 630669892
Ref: reference/mpi4py MPI COMBINER_HVECTOR mpi4py-mpi-combiner-hvector669892
Ref: 631669892
Ref: reference/mpi4py MPI COMBINER_HVECTOR mpi4py MPI COMBINER_HVECTOR669967
Ref: 157669967
Ref: mpi4py MPI COMBINER_HVECTOR-Footnote-1670122
Ref: mpi4py MPI COMBINER_HVECTOR-Footnote-2670183
Node: mpi4py MPI COMBINER_INDEXED670244
Ref: reference/mpi4py MPI COMBINER_INDEXED doc670394
Ref: 632670394
Ref: reference/mpi4py MPI COMBINER_INDEXED mpi4py-mpi-combiner-indexed670394
Ref: 633670394
Ref: reference/mpi4py MPI COMBINER_INDEXED mpi4py MPI COMBINER_INDEXED670469
Ref: 158670469
Ref: mpi4py MPI COMBINER_INDEXED-Footnote-1670624
Ref: mpi4py MPI COMBINER_INDEXED-Footnote-2670685
Node: mpi4py MPI COMBINER_HINDEXED670746
Ref: reference/mpi4py MPI COMBINER_HINDEXED doc670902
Ref: 634670902
Ref: reference/mpi4py MPI COMBINER_HINDEXED mpi4py-mpi-combiner-hindexed670902
Ref: 635670902
Ref: reference/mpi4py MPI COMBINER_HINDEXED mpi4py MPI COMBINER_HINDEXED670979
Ref: 159670979
Ref: mpi4py MPI COMBINER_HINDEXED-Footnote-1671137
Ref: mpi4py MPI COMBINER_HINDEXED-Footnote-2671198
Node: mpi4py MPI COMBINER_INDEXED_BLOCK671259
Ref: reference/mpi4py MPI COMBINER_INDEXED_BLOCK doc671422
Ref: 636671422
Ref: reference/mpi4py MPI COMBINER_INDEXED_BLOCK mpi4py-mpi-combiner-indexed-block671422
Ref: 637671422
Ref: reference/mpi4py MPI COMBINER_INDEXED_BLOCK mpi4py MPI COMBINER_INDEXED_BLOCK671509
Ref: 15a671509
Ref: mpi4py MPI COMBINER_INDEXED_BLOCK-Footnote-1671692
Ref: mpi4py MPI COMBINER_INDEXED_BLOCK-Footnote-2671753
Node: mpi4py MPI COMBINER_HINDEXED_BLOCK671814
Ref: reference/mpi4py MPI COMBINER_HINDEXED_BLOCK doc671975
Ref: 638671975
Ref: reference/mpi4py MPI COMBINER_HINDEXED_BLOCK mpi4py-mpi-combiner-hindexed-block671975
Ref: 639671975
Ref: reference/mpi4py MPI COMBINER_HINDEXED_BLOCK mpi4py MPI COMBINER_HINDEXED_BLOCK672064
Ref: 15b672064
Ref: mpi4py MPI COMBINER_HINDEXED_BLOCK-Footnote-1672250
Ref: mpi4py MPI COMBINER_HINDEXED_BLOCK-Footnote-2672311
Node: mpi4py MPI COMBINER_STRUCT672372
Ref: reference/mpi4py MPI COMBINER_STRUCT doc672528
Ref: 63a672528
Ref: reference/mpi4py MPI COMBINER_STRUCT mpi4py-mpi-combiner-struct672528
Ref: 63b672528
Ref: reference/mpi4py MPI COMBINER_STRUCT mpi4py MPI COMBINER_STRUCT672601
Ref: 15c672601
Ref: mpi4py MPI COMBINER_STRUCT-Footnote-1672753
Ref: mpi4py MPI COMBINER_STRUCT-Footnote-2672814
Node: mpi4py MPI COMBINER_SUBARRAY672875
Ref: reference/mpi4py MPI COMBINER_SUBARRAY doc673023
Ref: 63c673023
Ref: reference/mpi4py MPI COMBINER_SUBARRAY mpi4py-mpi-combiner-subarray673023
Ref: 63d673023
Ref: reference/mpi4py MPI COMBINER_SUBARRAY mpi4py MPI COMBINER_SUBARRAY673100
Ref: 15d673100
Ref: mpi4py MPI COMBINER_SUBARRAY-Footnote-1673258
Ref: mpi4py MPI COMBINER_SUBARRAY-Footnote-2673319
Node: mpi4py MPI COMBINER_DARRAY673380
Ref: reference/mpi4py MPI COMBINER_DARRAY doc673529
Ref: 63e673529
Ref: reference/mpi4py MPI COMBINER_DARRAY mpi4py-mpi-combiner-darray673529
Ref: 63f673529
Ref: reference/mpi4py MPI COMBINER_DARRAY mpi4py MPI COMBINER_DARRAY673602
Ref: 15e673602
Ref: mpi4py MPI COMBINER_DARRAY-Footnote-1673754
Ref: mpi4py MPI COMBINER_DARRAY-Footnote-2673815
Node: mpi4py MPI COMBINER_RESIZED673876
Ref: reference/mpi4py MPI COMBINER_RESIZED doc674028
Ref: 640674028
Ref: reference/mpi4py MPI COMBINER_RESIZED mpi4py-mpi-combiner-resized674028
Ref: 641674028
Ref: reference/mpi4py MPI COMBINER_RESIZED mpi4py MPI COMBINER_RESIZED674103
Ref: 15f674103
Ref: mpi4py MPI COMBINER_RESIZED-Footnote-1674258
Ref: mpi4py MPI COMBINER_RESIZED-Footnote-2674319
Node: mpi4py MPI COMBINER_VALUE_INDEX674380
Ref: reference/mpi4py MPI COMBINER_VALUE_INDEX doc674537
Ref: 642674537
Ref: reference/mpi4py MPI COMBINER_VALUE_INDEX mpi4py-mpi-combiner-value-index674537
Ref: 643674537
Ref: reference/mpi4py MPI COMBINER_VALUE_INDEX mpi4py MPI COMBINER_VALUE_INDEX674620
Ref: 160674620
Ref: mpi4py MPI COMBINER_VALUE_INDEX-Footnote-1674787
Ref: mpi4py MPI COMBINER_VALUE_INDEX-Footnote-2674848
Node: mpi4py MPI COMBINER_F90_INTEGER674909
Ref: reference/mpi4py MPI COMBINER_F90_INTEGER doc675067
Ref: 644675067
Ref: reference/mpi4py MPI COMBINER_F90_INTEGER mpi4py-mpi-combiner-f90-integer675067
Ref: 645675067
Ref: reference/mpi4py MPI COMBINER_F90_INTEGER mpi4py MPI COMBINER_F90_INTEGER675150
Ref: 163675150
Ref: mpi4py MPI COMBINER_F90_INTEGER-Footnote-1675317
Ref: mpi4py MPI COMBINER_F90_INTEGER-Footnote-2675378
Node: mpi4py MPI COMBINER_F90_REAL675439
Ref: reference/mpi4py MPI COMBINER_F90_REAL doc675597
Ref: 646675597
Ref: reference/mpi4py MPI COMBINER_F90_REAL mpi4py-mpi-combiner-f90-real675597
Ref: 647675597
Ref: reference/mpi4py MPI COMBINER_F90_REAL mpi4py MPI COMBINER_F90_REAL675674
Ref: 161675674
Ref: mpi4py MPI COMBINER_F90_REAL-Footnote-1675832
Ref: mpi4py MPI COMBINER_F90_REAL-Footnote-2675893
Node: mpi4py MPI COMBINER_F90_COMPLEX675954
Ref: reference/mpi4py MPI COMBINER_F90_COMPLEX doc676100
Ref: 648676100
Ref: reference/mpi4py MPI COMBINER_F90_COMPLEX mpi4py-mpi-combiner-f90-complex676100
Ref: 649676100
Ref: reference/mpi4py MPI COMBINER_F90_COMPLEX mpi4py MPI COMBINER_F90_COMPLEX676183
Ref: 162676183
Ref: mpi4py MPI COMBINER_F90_COMPLEX-Footnote-1676350
Ref: mpi4py MPI COMBINER_F90_COMPLEX-Footnote-2676411
Node: mpi4py MPI F_SOURCE676472
Ref: reference/mpi4py MPI F_SOURCE doc676606
Ref: 64a676606
Ref: reference/mpi4py MPI F_SOURCE mpi4py-mpi-f-source676606
Ref: 64b676606
Ref: reference/mpi4py MPI F_SOURCE mpi4py MPI F_SOURCE676665
Ref: 55d676665
Ref: mpi4py MPI F_SOURCE-Footnote-1676796
Ref: mpi4py MPI F_SOURCE-Footnote-2676857
Node: mpi4py MPI F_TAG676918
Ref: reference/mpi4py MPI F_TAG doc677039
Ref: 64c677039
Ref: reference/mpi4py MPI F_TAG mpi4py-mpi-f-tag677039
Ref: 64d677039
Ref: reference/mpi4py MPI F_TAG mpi4py MPI F_TAG677092
Ref: 55e677092
Ref: mpi4py MPI F_TAG-Footnote-1677214
Ref: mpi4py MPI F_TAG-Footnote-2677275
Node: mpi4py MPI F_ERROR677336
Ref: reference/mpi4py MPI F_ERROR doc677462
Ref: 64e677462
Ref: reference/mpi4py MPI F_ERROR mpi4py-mpi-f-error677462
Ref: 64f677462
Ref: reference/mpi4py MPI F_ERROR mpi4py MPI F_ERROR677519
Ref: 55f677519
Ref: mpi4py MPI F_ERROR-Footnote-1677647
Ref: mpi4py MPI F_ERROR-Footnote-2677708
Node: mpi4py MPI F_STATUS_SIZE677769
Ref: reference/mpi4py MPI F_STATUS_SIZE doc677895
Ref: 650677895
Ref: reference/mpi4py MPI F_STATUS_SIZE mpi4py-mpi-f-status-size677895
Ref: 651677895
Ref: reference/mpi4py MPI F_STATUS_SIZE mpi4py MPI F_STATUS_SIZE677964
Ref: 560677964
Ref: mpi4py MPI F_STATUS_SIZE-Footnote-1678110
Ref: mpi4py MPI F_STATUS_SIZE-Footnote-2678171
Node: mpi4py MPI IDENT678232
Ref: reference/mpi4py MPI IDENT doc678360
Ref: 652678360
Ref: reference/mpi4py MPI IDENT mpi4py-mpi-ident678360
Ref: 653678360
Ref: reference/mpi4py MPI IDENT mpi4py MPI IDENT678413
Ref: 164678413
Ref: mpi4py MPI IDENT-Footnote-1678535
Ref: mpi4py MPI IDENT-Footnote-2678596
Node: mpi4py MPI CONGRUENT678657
Ref: reference/mpi4py MPI CONGRUENT doc678779
Ref: 654678779
Ref: reference/mpi4py MPI CONGRUENT mpi4py-mpi-congruent678779
Ref: 655678779
Ref: reference/mpi4py MPI CONGRUENT mpi4py MPI CONGRUENT678840
Ref: 165678840
Ref: mpi4py MPI CONGRUENT-Footnote-1678974
Ref: mpi4py MPI CONGRUENT-Footnote-2679035
Node: mpi4py MPI SIMILAR679096
Ref: reference/mpi4py MPI SIMILAR doc679220
Ref: 656679220
Ref: reference/mpi4py MPI SIMILAR mpi4py-mpi-similar679220
Ref: 657679220
Ref: reference/mpi4py MPI SIMILAR mpi4py MPI SIMILAR679277
Ref: 166679277
Ref: mpi4py MPI SIMILAR-Footnote-1679405
Ref: mpi4py MPI SIMILAR-Footnote-2679466
Node: mpi4py MPI UNEQUAL679527
Ref: reference/mpi4py MPI UNEQUAL doc679646
Ref: 658679646
Ref: reference/mpi4py MPI UNEQUAL mpi4py-mpi-unequal679646
Ref: 659679646
Ref: reference/mpi4py MPI UNEQUAL mpi4py MPI UNEQUAL679703
Ref: 167679703
Ref: mpi4py MPI UNEQUAL-Footnote-1679831
Ref: mpi4py MPI UNEQUAL-Footnote-2679892
Node: mpi4py MPI CART679953
Ref: reference/mpi4py MPI CART doc680070
Ref: 65a680070
Ref: reference/mpi4py MPI CART mpi4py-mpi-cart680070
Ref: 65b680070
Ref: reference/mpi4py MPI CART mpi4py MPI CART680121
Ref: 168680121
Ref: mpi4py MPI CART-Footnote-1680240
Ref: mpi4py MPI CART-Footnote-2680301
Node: mpi4py MPI GRAPH680362
Ref: reference/mpi4py MPI GRAPH doc680482
Ref: 65c680482
Ref: reference/mpi4py MPI GRAPH mpi4py-mpi-graph680482
Ref: 65d680482
Ref: reference/mpi4py MPI GRAPH mpi4py MPI GRAPH680535
Ref: 169680535
Ref: mpi4py MPI GRAPH-Footnote-1680657
Ref: mpi4py MPI GRAPH-Footnote-2680718
Node: mpi4py MPI DIST_GRAPH680779
Ref: reference/mpi4py MPI DIST_GRAPH doc680905
Ref: 65e680905
Ref: reference/mpi4py MPI DIST_GRAPH mpi4py-mpi-dist-graph680905
Ref: 65f680905
Ref: reference/mpi4py MPI DIST_GRAPH mpi4py MPI DIST_GRAPH680968
Ref: 16a680968
Ref: mpi4py MPI DIST_GRAPH-Footnote-1681105
Ref: mpi4py MPI DIST_GRAPH-Footnote-2681166
Node: mpi4py MPI UNWEIGHTED681227
Ref: reference/mpi4py MPI UNWEIGHTED doc681361
Ref: 660681361
Ref: reference/mpi4py MPI UNWEIGHTED mpi4py-mpi-unweighted681361
Ref: 661681361
Ref: reference/mpi4py MPI UNWEIGHTED mpi4py MPI UNWEIGHTED681424
Ref: 16b681424
Ref: mpi4py MPI UNWEIGHTED-Footnote-1681561
Ref: mpi4py MPI UNWEIGHTED-Footnote-2681622
Node: mpi4py MPI WEIGHTS_EMPTY681683
Ref: reference/mpi4py MPI WEIGHTS_EMPTY doc681823
Ref: 662681823
Ref: reference/mpi4py MPI WEIGHTS_EMPTY mpi4py-mpi-weights-empty681823
Ref: 663681823
Ref: reference/mpi4py MPI WEIGHTS_EMPTY mpi4py MPI WEIGHTS_EMPTY681892
Ref: 16c681892
Ref: mpi4py MPI WEIGHTS_EMPTY-Footnote-1682038
Ref: mpi4py MPI WEIGHTS_EMPTY-Footnote-2682099
Node: mpi4py MPI COMM_TYPE_SHARED682160
Ref: reference/mpi4py MPI COMM_TYPE_SHARED doc682309
Ref: 664682309
Ref: reference/mpi4py MPI COMM_TYPE_SHARED mpi4py-mpi-comm-type-shared682309
Ref: 665682309
Ref: reference/mpi4py MPI COMM_TYPE_SHARED mpi4py MPI COMM_TYPE_SHARED682384
Ref: 16d682384
Ref: mpi4py MPI COMM_TYPE_SHARED-Footnote-1682539
Ref: mpi4py MPI COMM_TYPE_SHARED-Footnote-2682600
Node: mpi4py MPI COMM_TYPE_HW_GUIDED682661
Ref: reference/mpi4py MPI COMM_TYPE_HW_GUIDED doc682818
Ref: 666682818
Ref: reference/mpi4py MPI COMM_TYPE_HW_GUIDED mpi4py-mpi-comm-type-hw-guided682818
Ref: 667682818
Ref: reference/mpi4py MPI COMM_TYPE_HW_GUIDED mpi4py MPI COMM_TYPE_HW_GUIDED682899
Ref: 561682899
Ref: mpi4py MPI COMM_TYPE_HW_GUIDED-Footnote-1683063
Ref: mpi4py MPI COMM_TYPE_HW_GUIDED-Footnote-2683124
Node: mpi4py MPI COMM_TYPE_HW_UNGUIDED683185
Ref: reference/mpi4py MPI COMM_TYPE_HW_UNGUIDED doc683351
Ref: 668683351
Ref: reference/mpi4py MPI COMM_TYPE_HW_UNGUIDED mpi4py-mpi-comm-type-hw-unguided683351
Ref: 669683351
Ref: reference/mpi4py MPI COMM_TYPE_HW_UNGUIDED mpi4py MPI COMM_TYPE_HW_UNGUIDED683436
Ref: 562683436
Ref: mpi4py MPI COMM_TYPE_HW_UNGUIDED-Footnote-1683616
Ref: mpi4py MPI COMM_TYPE_HW_UNGUIDED-Footnote-2683677
Node: mpi4py MPI COMM_TYPE_RESOURCE_GUIDED683738
Ref: reference/mpi4py MPI COMM_TYPE_RESOURCE_GUIDED doc683899
Ref: 66a683899
Ref: reference/mpi4py MPI COMM_TYPE_RESOURCE_GUIDED mpi4py-mpi-comm-type-resource-guided683899
Ref: 66b683899
Ref: reference/mpi4py MPI COMM_TYPE_RESOURCE_GUIDED mpi4py MPI COMM_TYPE_RESOURCE_GUIDED683992
Ref: 563683992
Ref: mpi4py MPI COMM_TYPE_RESOURCE_GUIDED-Footnote-1684184
Ref: mpi4py MPI COMM_TYPE_RESOURCE_GUIDED-Footnote-2684245
Node: mpi4py MPI BSEND_OVERHEAD684306
Ref: reference/mpi4py MPI BSEND_OVERHEAD doc684462
Ref: 66c684462
Ref: reference/mpi4py MPI BSEND_OVERHEAD mpi4py-mpi-bsend-overhead684462
Ref: 66d684462
Ref: reference/mpi4py MPI BSEND_OVERHEAD mpi4py MPI BSEND_OVERHEAD684533
Ref: 16e684533
Ref: mpi4py MPI BSEND_OVERHEAD-Footnote-1684682
Ref: mpi4py MPI BSEND_OVERHEAD-Footnote-2684743
Node: mpi4py MPI BUFFER_AUTOMATIC684804
Ref: reference/mpi4py MPI BUFFER_AUTOMATIC doc684952
Ref: 66e684952
Ref: reference/mpi4py MPI BUFFER_AUTOMATIC mpi4py-mpi-buffer-automatic684952
Ref: 66f684952
Ref: reference/mpi4py MPI BUFFER_AUTOMATIC mpi4py MPI BUFFER_AUTOMATIC685027
Ref: fe685027
Node: mpi4py MPI WIN_FLAVOR_CREATE685204
Ref: reference/mpi4py MPI WIN_FLAVOR_CREATE doc685357
Ref: 670685357
Ref: reference/mpi4py MPI WIN_FLAVOR_CREATE mpi4py-mpi-win-flavor-create685357
Ref: 671685357
Ref: reference/mpi4py MPI WIN_FLAVOR_CREATE mpi4py MPI WIN_FLAVOR_CREATE685434
Ref: 16f685434
Ref: mpi4py MPI WIN_FLAVOR_CREATE-Footnote-1685592
Ref: mpi4py MPI WIN_FLAVOR_CREATE-Footnote-2685653
Node: mpi4py MPI WIN_FLAVOR_ALLOCATE685714
Ref: reference/mpi4py MPI WIN_FLAVOR_ALLOCATE doc685869
Ref: 672685869
Ref: reference/mpi4py MPI WIN_FLAVOR_ALLOCATE mpi4py-mpi-win-flavor-allocate685869
Ref: 673685869
Ref: reference/mpi4py MPI WIN_FLAVOR_ALLOCATE mpi4py MPI WIN_FLAVOR_ALLOCATE685950
Ref: 170685950
Ref: mpi4py MPI WIN_FLAVOR_ALLOCATE-Footnote-1686114
Ref: mpi4py MPI WIN_FLAVOR_ALLOCATE-Footnote-2686175
Node: mpi4py MPI WIN_FLAVOR_DYNAMIC686236
Ref: reference/mpi4py MPI WIN_FLAVOR_DYNAMIC doc686391
Ref: 674686391
Ref: reference/mpi4py MPI WIN_FLAVOR_DYNAMIC mpi4py-mpi-win-flavor-dynamic686391
Ref: 675686391
Ref: reference/mpi4py MPI WIN_FLAVOR_DYNAMIC mpi4py MPI WIN_FLAVOR_DYNAMIC686470
Ref: 171686470
Ref: mpi4py MPI WIN_FLAVOR_DYNAMIC-Footnote-1686631
Ref: mpi4py MPI WIN_FLAVOR_DYNAMIC-Footnote-2686692
Node: mpi4py MPI WIN_FLAVOR_SHARED686753
Ref: reference/mpi4py MPI WIN_FLAVOR_SHARED doc686901
Ref: 676686901
Ref: reference/mpi4py MPI WIN_FLAVOR_SHARED mpi4py-mpi-win-flavor-shared686901
Ref: 677686901
Ref: reference/mpi4py MPI WIN_FLAVOR_SHARED mpi4py MPI WIN_FLAVOR_SHARED686978
Ref: 172686978
Ref: mpi4py MPI WIN_FLAVOR_SHARED-Footnote-1687136
Ref: mpi4py MPI WIN_FLAVOR_SHARED-Footnote-2687197
Node: mpi4py MPI WIN_SEPARATE687258
Ref: reference/mpi4py MPI WIN_SEPARATE doc687399
Ref: 678687399
Ref: reference/mpi4py MPI WIN_SEPARATE mpi4py-mpi-win-separate687399
Ref: 679687399
Ref: reference/mpi4py MPI WIN_SEPARATE mpi4py MPI WIN_SEPARATE687466
Ref: 173687466
Ref: mpi4py MPI WIN_SEPARATE-Footnote-1687609
Ref: mpi4py MPI WIN_SEPARATE-Footnote-2687670
Node: mpi4py MPI WIN_UNIFIED687731
Ref: reference/mpi4py MPI WIN_UNIFIED doc687867
Ref: 67a687867
Ref: reference/mpi4py MPI WIN_UNIFIED mpi4py-mpi-win-unified687867
Ref: 67b687867
Ref: reference/mpi4py MPI WIN_UNIFIED mpi4py MPI WIN_UNIFIED687932
Ref: 174687932
Ref: mpi4py MPI WIN_UNIFIED-Footnote-1688072
Ref: mpi4py MPI WIN_UNIFIED-Footnote-2688133
Node: mpi4py MPI MODE_NOCHECK688194
Ref: reference/mpi4py MPI MODE_NOCHECK doc688330
Ref: 67c688330
Ref: reference/mpi4py MPI MODE_NOCHECK mpi4py-mpi-mode-nocheck688330
Ref: 67d688330
Ref: reference/mpi4py MPI MODE_NOCHECK mpi4py MPI MODE_NOCHECK688397
Ref: 175688397
Ref: mpi4py MPI MODE_NOCHECK-Footnote-1688540
Ref: mpi4py MPI MODE_NOCHECK-Footnote-2688601
Node: mpi4py MPI MODE_NOSTORE688662
Ref: reference/mpi4py MPI MODE_NOSTORE doc688797
Ref: 67e688797
Ref: reference/mpi4py MPI MODE_NOSTORE mpi4py-mpi-mode-nostore688797
Ref: 67f688797
Ref: reference/mpi4py MPI MODE_NOSTORE mpi4py MPI MODE_NOSTORE688864
Ref: 176688864
Ref: mpi4py MPI MODE_NOSTORE-Footnote-1689007
Ref: mpi4py MPI MODE_NOSTORE-Footnote-2689068
Node: mpi4py MPI MODE_NOPUT689129
Ref: reference/mpi4py MPI MODE_NOPUT doc689266
Ref: 680689266
Ref: reference/mpi4py MPI MODE_NOPUT mpi4py-mpi-mode-noput689266
Ref: 681689266
Ref: reference/mpi4py MPI MODE_NOPUT mpi4py MPI MODE_NOPUT689329
Ref: 177689329
Ref: mpi4py MPI MODE_NOPUT-Footnote-1689466
Ref: mpi4py MPI MODE_NOPUT-Footnote-2689527
Node: mpi4py MPI MODE_NOPRECEDE689588
Ref: reference/mpi4py MPI MODE_NOPRECEDE doc689727
Ref: 682689727
Ref: reference/mpi4py MPI MODE_NOPRECEDE mpi4py-mpi-mode-noprecede689727
Ref: 683689727
Ref: reference/mpi4py MPI MODE_NOPRECEDE mpi4py MPI MODE_NOPRECEDE689798
Ref: 178689798
Ref: mpi4py MPI MODE_NOPRECEDE-Footnote-1689947
Ref: mpi4py MPI MODE_NOPRECEDE-Footnote-2690008
Node: mpi4py MPI MODE_NOSUCCEED690069
Ref: reference/mpi4py MPI MODE_NOSUCCEED doc690212
Ref: 684690212
Ref: reference/mpi4py MPI MODE_NOSUCCEED mpi4py-mpi-mode-nosucceed690212
Ref: 685690212
Ref: reference/mpi4py MPI MODE_NOSUCCEED mpi4py MPI MODE_NOSUCCEED690283
Ref: 179690283
Ref: mpi4py MPI MODE_NOSUCCEED-Footnote-1690432
Ref: mpi4py MPI MODE_NOSUCCEED-Footnote-2690493
Node: mpi4py MPI LOCK_EXCLUSIVE690554
Ref: reference/mpi4py MPI LOCK_EXCLUSIVE doc690694
Ref: 686690694
Ref: reference/mpi4py MPI LOCK_EXCLUSIVE mpi4py-mpi-lock-exclusive690694
Ref: 687690694
Ref: reference/mpi4py MPI LOCK_EXCLUSIVE mpi4py MPI LOCK_EXCLUSIVE690765
Ref: 17a690765
Ref: mpi4py MPI LOCK_EXCLUSIVE-Footnote-1690914
Ref: mpi4py MPI LOCK_EXCLUSIVE-Footnote-2690975
Node: mpi4py MPI LOCK_SHARED691036
Ref: reference/mpi4py MPI LOCK_SHARED doc691173
Ref: 688691173
Ref: reference/mpi4py MPI LOCK_SHARED mpi4py-mpi-lock-shared691173
Ref: 689691173
Ref: reference/mpi4py MPI LOCK_SHARED mpi4py MPI LOCK_SHARED691238
Ref: 17b691238
Ref: mpi4py MPI LOCK_SHARED-Footnote-1691378
Ref: mpi4py MPI LOCK_SHARED-Footnote-2691439
Node: mpi4py MPI MODE_RDONLY691500
Ref: reference/mpi4py MPI MODE_RDONLY doc691634
Ref: 68a691634
Ref: reference/mpi4py MPI MODE_RDONLY mpi4py-mpi-mode-rdonly691634
Ref: 68b691634
Ref: reference/mpi4py MPI MODE_RDONLY mpi4py MPI MODE_RDONLY691699
Ref: 17c691699
Ref: mpi4py MPI MODE_RDONLY-Footnote-1691839
Ref: mpi4py MPI MODE_RDONLY-Footnote-2691900
Node: mpi4py MPI MODE_WRONLY691961
Ref: reference/mpi4py MPI MODE_WRONLY doc692093
Ref: 68c692093
Ref: reference/mpi4py MPI MODE_WRONLY mpi4py-mpi-mode-wronly692093
Ref: 68d692093
Ref: reference/mpi4py MPI MODE_WRONLY mpi4py MPI MODE_WRONLY692158
Ref: 17d692158
Ref: mpi4py MPI MODE_WRONLY-Footnote-1692298
Ref: mpi4py MPI MODE_WRONLY-Footnote-2692359
Node: mpi4py MPI MODE_RDWR692420
Ref: reference/mpi4py MPI MODE_RDWR doc692552
Ref: 68e692552
Ref: reference/mpi4py MPI MODE_RDWR mpi4py-mpi-mode-rdwr692552
Ref: 68f692552
Ref: reference/mpi4py MPI MODE_RDWR mpi4py MPI MODE_RDWR692613
Ref: 17e692613
Ref: mpi4py MPI MODE_RDWR-Footnote-1692747
Ref: mpi4py MPI MODE_RDWR-Footnote-2692808
Node: mpi4py MPI MODE_CREATE692869
Ref: reference/mpi4py MPI MODE_CREATE doc692999
Ref: 690692999
Ref: reference/mpi4py MPI MODE_CREATE mpi4py-mpi-mode-create692999
Ref: 691692999
Ref: reference/mpi4py MPI MODE_CREATE mpi4py MPI MODE_CREATE693064
Ref: 17f693064
Ref: mpi4py MPI MODE_CREATE-Footnote-1693204
Ref: mpi4py MPI MODE_CREATE-Footnote-2693265
Node: mpi4py MPI MODE_EXCL693326
Ref: reference/mpi4py MPI MODE_EXCL doc693467
Ref: 692693467
Ref: reference/mpi4py MPI MODE_EXCL mpi4py-mpi-mode-excl693467
Ref: 693693467
Ref: reference/mpi4py MPI MODE_EXCL mpi4py MPI MODE_EXCL693528
Ref: 180693528
Ref: mpi4py MPI MODE_EXCL-Footnote-1693662
Ref: mpi4py MPI MODE_EXCL-Footnote-2693723
Node: mpi4py MPI MODE_DELETE_ON_CLOSE693784
Ref: reference/mpi4py MPI MODE_DELETE_ON_CLOSE doc693930
Ref: 694693930
Ref: reference/mpi4py MPI MODE_DELETE_ON_CLOSE mpi4py-mpi-mode-delete-on-close693930
Ref: 695693930
Ref: reference/mpi4py MPI MODE_DELETE_ON_CLOSE mpi4py MPI MODE_DELETE_ON_CLOSE694013
Ref: 181694013
Ref: mpi4py MPI MODE_DELETE_ON_CLOSE-Footnote-1694180
Ref: mpi4py MPI MODE_DELETE_ON_CLOSE-Footnote-2694241
Node: mpi4py MPI MODE_UNIQUE_OPEN694302
Ref: reference/mpi4py MPI MODE_UNIQUE_OPEN doc694454
Ref: 696694454
Ref: reference/mpi4py MPI MODE_UNIQUE_OPEN mpi4py-mpi-mode-unique-open694454
Ref: 697694454
Ref: reference/mpi4py MPI MODE_UNIQUE_OPEN mpi4py MPI MODE_UNIQUE_OPEN694529
Ref: 182694529
Ref: mpi4py MPI MODE_UNIQUE_OPEN-Footnote-1694684
Ref: mpi4py MPI MODE_UNIQUE_OPEN-Footnote-2694745
Node: mpi4py MPI MODE_SEQUENTIAL694806
Ref: reference/mpi4py MPI MODE_SEQUENTIAL doc694949
Ref: 698694949
Ref: reference/mpi4py MPI MODE_SEQUENTIAL mpi4py-mpi-mode-sequential694949
Ref: 699694949
Ref: reference/mpi4py MPI MODE_SEQUENTIAL mpi4py MPI MODE_SEQUENTIAL695022
Ref: 183695022
Ref: mpi4py MPI MODE_SEQUENTIAL-Footnote-1695174
Ref: mpi4py MPI MODE_SEQUENTIAL-Footnote-2695235
Node: mpi4py MPI MODE_APPEND695296
Ref: reference/mpi4py MPI MODE_APPEND doc695431
Ref: 69a695431
Ref: reference/mpi4py MPI MODE_APPEND mpi4py-mpi-mode-append695431
Ref: 69b695431
Ref: reference/mpi4py MPI MODE_APPEND mpi4py MPI MODE_APPEND695496
Ref: 184695496
Ref: mpi4py MPI MODE_APPEND-Footnote-1695636
Ref: mpi4py MPI MODE_APPEND-Footnote-2695697
Node: mpi4py MPI SEEK_SET695758
Ref: reference/mpi4py MPI SEEK_SET doc695886
Ref: 69c695886
Ref: reference/mpi4py MPI SEEK_SET mpi4py-mpi-seek-set695886
Ref: 69d695886
Ref: reference/mpi4py MPI SEEK_SET mpi4py MPI SEEK_SET695945
Ref: 185695945
Ref: mpi4py MPI SEEK_SET-Footnote-1696076
Ref: mpi4py MPI SEEK_SET-Footnote-2696137
Node: mpi4py MPI SEEK_CUR696198
Ref: reference/mpi4py MPI SEEK_CUR doc696323
Ref: 69e696323
Ref: reference/mpi4py MPI SEEK_CUR mpi4py-mpi-seek-cur696323
Ref: 69f696323
Ref: reference/mpi4py MPI SEEK_CUR mpi4py MPI SEEK_CUR696382
Ref: 186696382
Ref: mpi4py MPI SEEK_CUR-Footnote-1696513
Ref: mpi4py MPI SEEK_CUR-Footnote-2696574
Node: mpi4py MPI SEEK_END696635
Ref: reference/mpi4py MPI SEEK_END doc696772
Ref: 6a0696772
Ref: reference/mpi4py MPI SEEK_END mpi4py-mpi-seek-end696772
Ref: 6a1696772
Ref: reference/mpi4py MPI SEEK_END mpi4py MPI SEEK_END696831
Ref: 187696831
Ref: mpi4py MPI SEEK_END-Footnote-1696962
Ref: mpi4py MPI SEEK_END-Footnote-2697023
Node: mpi4py MPI DISPLACEMENT_CURRENT697084
Ref: reference/mpi4py MPI DISPLACEMENT_CURRENT doc697221
Ref: 6a2697221
Ref: reference/mpi4py MPI DISPLACEMENT_CURRENT mpi4py-mpi-displacement-current697221
Ref: 6a3697221
Ref: reference/mpi4py MPI DISPLACEMENT_CURRENT mpi4py MPI DISPLACEMENT_CURRENT697304
Ref: 188697304
Ref: mpi4py MPI DISPLACEMENT_CURRENT-Footnote-1697471
Ref: mpi4py MPI DISPLACEMENT_CURRENT-Footnote-2697532
Node: mpi4py MPI DISP_CUR697593
Ref: reference/mpi4py MPI DISP_CUR doc697735
Ref: 6a4697735
Ref: reference/mpi4py MPI DISP_CUR mpi4py-mpi-disp-cur697735
Ref: 6a5697735
Ref: reference/mpi4py MPI DISP_CUR mpi4py MPI DISP_CUR697794
Ref: 189697794
Ref: mpi4py MPI DISP_CUR-Footnote-1697925
Ref: mpi4py MPI DISP_CUR-Footnote-2697986
Node: mpi4py MPI THREAD_SINGLE698047
Ref: reference/mpi4py MPI THREAD_SINGLE doc698184
Ref: 6a6698184
Ref: reference/mpi4py MPI THREAD_SINGLE mpi4py-mpi-thread-single698184
Ref: 6a7698184
Ref: reference/mpi4py MPI THREAD_SINGLE mpi4py MPI THREAD_SINGLE698253
Ref: 18a698253
Ref: mpi4py MPI THREAD_SINGLE-Footnote-1698399
Ref: mpi4py MPI THREAD_SINGLE-Footnote-2698460
Node: mpi4py MPI THREAD_FUNNELED698521
Ref: reference/mpi4py MPI THREAD_FUNNELED doc698667
Ref: 6a8698667
Ref: reference/mpi4py MPI THREAD_FUNNELED mpi4py-mpi-thread-funneled698667
Ref: 6a9698667
Ref: reference/mpi4py MPI THREAD_FUNNELED mpi4py MPI THREAD_FUNNELED698740
Ref: 18b698740
Ref: mpi4py MPI THREAD_FUNNELED-Footnote-1698892
Ref: mpi4py MPI THREAD_FUNNELED-Footnote-2698953
Node: mpi4py MPI THREAD_SERIALIZED699014
Ref: reference/mpi4py MPI THREAD_SERIALIZED doc699162
Ref: 6aa699162
Ref: reference/mpi4py MPI THREAD_SERIALIZED mpi4py-mpi-thread-serialized699162
Ref: 6ab699162
Ref: reference/mpi4py MPI THREAD_SERIALIZED mpi4py MPI THREAD_SERIALIZED699239
Ref: 18c699239
Ref: mpi4py MPI THREAD_SERIALIZED-Footnote-1699397
Ref: mpi4py MPI THREAD_SERIALIZED-Footnote-2699458
Node: mpi4py MPI THREAD_MULTIPLE699519
Ref: reference/mpi4py MPI THREAD_MULTIPLE doc699659
Ref: 6ac699659
Ref: reference/mpi4py MPI THREAD_MULTIPLE mpi4py-mpi-thread-multiple699659
Ref: 6ad699659
Ref: reference/mpi4py MPI THREAD_MULTIPLE mpi4py MPI THREAD_MULTIPLE699732
Ref: 18d699732
Ref: mpi4py MPI THREAD_MULTIPLE-Footnote-1699884
Ref: mpi4py MPI THREAD_MULTIPLE-Footnote-2699945
Node: mpi4py MPI VERSION700006
Ref: reference/mpi4py MPI VERSION doc700139
Ref: 6ae700139
Ref: reference/mpi4py MPI VERSION mpi4py-mpi-version700139
Ref: 6af700139
Ref: reference/mpi4py MPI VERSION mpi4py MPI VERSION700196
Ref: 18e700196
Ref: mpi4py MPI VERSION-Footnote-1700324
Ref: mpi4py MPI VERSION-Footnote-2700385
Node: mpi4py MPI SUBVERSION700446
Ref: reference/mpi4py MPI SUBVERSION doc700582
Ref: 6b0700582
Ref: reference/mpi4py MPI SUBVERSION mpi4py-mpi-subversion700582
Ref: 6b1700582
Ref: reference/mpi4py MPI SUBVERSION mpi4py MPI SUBVERSION700645
Ref: 18f700645
Ref: mpi4py MPI SUBVERSION-Footnote-1700782
Ref: mpi4py MPI SUBVERSION-Footnote-2700843
Node: mpi4py MPI MAX_PROCESSOR_NAME700904
Ref: reference/mpi4py MPI MAX_PROCESSOR_NAME doc701049
Ref: 6b2701049
Ref: reference/mpi4py MPI MAX_PROCESSOR_NAME mpi4py-mpi-max-processor-name701049
Ref: 6b3701049
Ref: reference/mpi4py MPI MAX_PROCESSOR_NAME mpi4py MPI MAX_PROCESSOR_NAME701128
Ref: 190701128
Ref: mpi4py MPI MAX_PROCESSOR_NAME-Footnote-1701289
Ref: mpi4py MPI MAX_PROCESSOR_NAME-Footnote-2701350
Node: mpi4py MPI MAX_ERROR_STRING701411
Ref: reference/mpi4py MPI MAX_ERROR_STRING doc701559
Ref: 6b4701559
Ref: reference/mpi4py MPI MAX_ERROR_STRING mpi4py-mpi-max-error-string701559
Ref: 6b5701559
Ref: reference/mpi4py MPI MAX_ERROR_STRING mpi4py MPI MAX_ERROR_STRING701634
Ref: 191701634
Ref: mpi4py MPI MAX_ERROR_STRING-Footnote-1701789
Ref: mpi4py MPI MAX_ERROR_STRING-Footnote-2701850
Node: mpi4py MPI MAX_PORT_NAME701911
Ref: reference/mpi4py MPI MAX_PORT_NAME doc702053
Ref: 6b6702053
Ref: reference/mpi4py MPI MAX_PORT_NAME mpi4py-mpi-max-port-name702053
Ref: 6b7702053
Ref: reference/mpi4py MPI MAX_PORT_NAME mpi4py MPI MAX_PORT_NAME702122
Ref: 192702122
Ref: mpi4py MPI MAX_PORT_NAME-Footnote-1702268
Ref: mpi4py MPI MAX_PORT_NAME-Footnote-2702329
Node: mpi4py MPI MAX_INFO_KEY702390
Ref: reference/mpi4py MPI MAX_INFO_KEY doc702528
Ref: 6b8702528
Ref: reference/mpi4py MPI MAX_INFO_KEY mpi4py-mpi-max-info-key702528
Ref: 6b9702528
Ref: reference/mpi4py MPI MAX_INFO_KEY mpi4py MPI MAX_INFO_KEY702595
Ref: 193702595
Ref: mpi4py MPI MAX_INFO_KEY-Footnote-1702738
Ref: mpi4py MPI MAX_INFO_KEY-Footnote-2702799
Node: mpi4py MPI MAX_INFO_VAL702860
Ref: reference/mpi4py MPI MAX_INFO_VAL doc703000
Ref: 6ba703000
Ref: reference/mpi4py MPI MAX_INFO_VAL mpi4py-mpi-max-info-val703000
Ref: 6bb703000
Ref: reference/mpi4py MPI MAX_INFO_VAL mpi4py MPI MAX_INFO_VAL703067
Ref: 194703067
Ref: mpi4py MPI MAX_INFO_VAL-Footnote-1703210
Ref: mpi4py MPI MAX_INFO_VAL-Footnote-2703271
Node: mpi4py MPI MAX_OBJECT_NAME703332
Ref: reference/mpi4py MPI MAX_OBJECT_NAME doc703478
Ref: 6bc703478
Ref: reference/mpi4py MPI MAX_OBJECT_NAME mpi4py-mpi-max-object-name703478
Ref: 6bd703478
Ref: reference/mpi4py MPI MAX_OBJECT_NAME mpi4py MPI MAX_OBJECT_NAME703551
Ref: 195703551
Ref: mpi4py MPI MAX_OBJECT_NAME-Footnote-1703703
Ref: mpi4py MPI MAX_OBJECT_NAME-Footnote-2703764
Node: mpi4py MPI MAX_DATAREP_STRING703825
Ref: reference/mpi4py MPI MAX_DATAREP_STRING doc703985
Ref: 6be703985
Ref: reference/mpi4py MPI MAX_DATAREP_STRING mpi4py-mpi-max-datarep-string703985
Ref: 6bf703985
Ref: reference/mpi4py MPI MAX_DATAREP_STRING mpi4py MPI MAX_DATAREP_STRING704064
Ref: 196704064
Ref: mpi4py MPI MAX_DATAREP_STRING-Footnote-1704225
Ref: mpi4py MPI MAX_DATAREP_STRING-Footnote-2704286
Node: mpi4py MPI MAX_LIBRARY_VERSION_STRING704347
Ref: reference/mpi4py MPI MAX_LIBRARY_VERSION_STRING doc704509
Ref: 6c0704509
Ref: reference/mpi4py MPI MAX_LIBRARY_VERSION_STRING mpi4py-mpi-max-library-version-string704509
Ref: 6c1704509
Ref: reference/mpi4py MPI MAX_LIBRARY_VERSION_STRING mpi4py MPI MAX_LIBRARY_VERSION_STRING704604
Ref: 197704604
Ref: mpi4py MPI MAX_LIBRARY_VERSION_STRING-Footnote-1704799
Ref: mpi4py MPI MAX_LIBRARY_VERSION_STRING-Footnote-2704860
Node: mpi4py MPI MAX_PSET_NAME_LEN704921
Ref: reference/mpi4py MPI MAX_PSET_NAME_LEN doc705082
Ref: 6c2705082
Ref: reference/mpi4py MPI MAX_PSET_NAME_LEN mpi4py-mpi-max-pset-name-len705082
Ref: 6c3705082
Ref: reference/mpi4py MPI MAX_PSET_NAME_LEN mpi4py MPI MAX_PSET_NAME_LEN705159
Ref: 564705159
Ref: mpi4py MPI MAX_PSET_NAME_LEN-Footnote-1705317
Ref: mpi4py MPI MAX_PSET_NAME_LEN-Footnote-2705378
Node: mpi4py MPI MAX_STRINGTAG_LEN705439
Ref: reference/mpi4py MPI MAX_STRINGTAG_LEN doc705587
Ref: 6c4705587
Ref: reference/mpi4py MPI MAX_STRINGTAG_LEN mpi4py-mpi-max-stringtag-len705587
Ref: 6c5705587
Ref: reference/mpi4py MPI MAX_STRINGTAG_LEN mpi4py MPI MAX_STRINGTAG_LEN705664
Ref: 565705664
Ref: mpi4py MPI MAX_STRINGTAG_LEN-Footnote-1705822
Ref: mpi4py MPI MAX_STRINGTAG_LEN-Footnote-2705883
Node: mpi4py MPI DATATYPE_NULL705944
Ref: reference/mpi4py MPI DATATYPE_NULL doc706081
Ref: 6c6706081
Ref: reference/mpi4py MPI DATATYPE_NULL mpi4py-mpi-datatype-null706081
Ref: 6c7706081
Ref: reference/mpi4py MPI DATATYPE_NULL mpi4py MPI DATATYPE_NULL706150
Ref: 198706150
Node: mpi4py MPI PACKED706284
Ref: reference/mpi4py MPI PACKED doc706408
Ref: 6c8706408
Ref: reference/mpi4py MPI PACKED mpi4py-mpi-packed706408
Ref: 6c9706408
Ref: reference/mpi4py MPI PACKED mpi4py MPI PACKED706463
Ref: 199706463
Node: mpi4py MPI BYTE706576
Ref: reference/mpi4py MPI BYTE doc706691
Ref: 6ca706691
Ref: reference/mpi4py MPI BYTE mpi4py-mpi-byte706691
Ref: 6cb706691
Ref: reference/mpi4py MPI BYTE mpi4py MPI BYTE706742
Ref: 19a706742
Node: mpi4py MPI AINT706849
Ref: reference/mpi4py MPI AINT doc706964
Ref: 6cc706964
Ref: reference/mpi4py MPI AINT mpi4py-mpi-aint706964
Ref: 6cd706964
Ref: reference/mpi4py MPI AINT mpi4py MPI AINT707015
Ref: 19b707015
Node: mpi4py MPI OFFSET707122
Ref: reference/mpi4py MPI OFFSET doc707238
Ref: 6ce707238
Ref: reference/mpi4py MPI OFFSET mpi4py-mpi-offset707238
Ref: 6cf707238
Ref: reference/mpi4py MPI OFFSET mpi4py MPI OFFSET707293
Ref: 19c707293
Node: mpi4py MPI COUNT707406
Ref: reference/mpi4py MPI COUNT doc707522
Ref: 6d0707522
Ref: reference/mpi4py MPI COUNT mpi4py-mpi-count707522
Ref: 6d1707522
Ref: reference/mpi4py MPI COUNT mpi4py MPI COUNT707575
Ref: 19d707575
Node: mpi4py MPI CHAR707685
Ref: reference/mpi4py MPI CHAR doc707800
Ref: 6d2707800
Ref: reference/mpi4py MPI CHAR mpi4py-mpi-char707800
Ref: 6d3707800
Ref: reference/mpi4py MPI CHAR mpi4py MPI CHAR707851
Ref: 19e707851
Node: mpi4py MPI WCHAR707958
Ref: reference/mpi4py MPI WCHAR doc708079
Ref: 6d4708079
Ref: reference/mpi4py MPI WCHAR mpi4py-mpi-wchar708079
Ref: 6d5708079
Ref: reference/mpi4py MPI WCHAR mpi4py MPI WCHAR708132
Ref: 19f708132
Node: mpi4py MPI SIGNED_CHAR708242
Ref: reference/mpi4py MPI SIGNED_CHAR doc708364
Ref: 6d6708364
Ref: reference/mpi4py MPI SIGNED_CHAR mpi4py-mpi-signed-char708364
Ref: 6d7708364
Ref: reference/mpi4py MPI SIGNED_CHAR mpi4py MPI SIGNED_CHAR708429
Ref: 1a0708429
Node: mpi4py MPI SHORT708557
Ref: reference/mpi4py MPI SHORT doc708677
Ref: 6d8708677
Ref: reference/mpi4py MPI SHORT mpi4py-mpi-short708677
Ref: 6d9708677
Ref: reference/mpi4py MPI SHORT mpi4py MPI SHORT708730
Ref: 1a1708730
Node: mpi4py MPI INT708840
Ref: reference/mpi4py MPI INT doc708953
Ref: 6da708953
Ref: reference/mpi4py MPI INT mpi4py-mpi-int708953
Ref: 6db708953
Ref: reference/mpi4py MPI INT mpi4py MPI INT709002
Ref: 1a2709002
Node: mpi4py MPI LONG709106
Ref: reference/mpi4py MPI LONG doc709223
Ref: 6dc709223
Ref: reference/mpi4py MPI LONG mpi4py-mpi-long709223
Ref: 6dd709223
Ref: reference/mpi4py MPI LONG mpi4py MPI LONG709274
Ref: 1a3709274
Node: mpi4py MPI LONG_LONG709381
Ref: reference/mpi4py MPI LONG_LONG doc709508
Ref: 6de709508
Ref: reference/mpi4py MPI LONG_LONG mpi4py-mpi-long-long709508
Ref: 6df709508
Ref: reference/mpi4py MPI LONG_LONG mpi4py MPI LONG_LONG709569
Ref: 1a4709569
Node: mpi4py MPI UNSIGNED_CHAR709691
Ref: reference/mpi4py MPI UNSIGNED_CHAR doc709828
Ref: 6e0709828
Ref: reference/mpi4py MPI UNSIGNED_CHAR mpi4py-mpi-unsigned-char709828
Ref: 6e1709828
Ref: reference/mpi4py MPI UNSIGNED_CHAR mpi4py MPI UNSIGNED_CHAR709897
Ref: 1a5709897
Node: mpi4py MPI UNSIGNED_SHORT710031
Ref: reference/mpi4py MPI UNSIGNED_SHORT doc710167
Ref: 6e2710167
Ref: reference/mpi4py MPI UNSIGNED_SHORT mpi4py-mpi-unsigned-short710167
Ref: 6e3710167
Ref: reference/mpi4py MPI UNSIGNED_SHORT mpi4py MPI UNSIGNED_SHORT710238
Ref: 1a6710238
Node: mpi4py MPI UNSIGNED710385
Ref: reference/mpi4py MPI UNSIGNED doc710521
Ref: 6e4710521
Ref: reference/mpi4py MPI UNSIGNED mpi4py-mpi-unsigned710521
Ref: 6e5710521
Ref: reference/mpi4py MPI UNSIGNED mpi4py MPI UNSIGNED710580
Ref: 1a7710580
Node: mpi4py MPI UNSIGNED_LONG710699
Ref: reference/mpi4py MPI UNSIGNED_LONG doc710839
Ref: 6e6710839
Ref: reference/mpi4py MPI UNSIGNED_LONG mpi4py-mpi-unsigned-long710839
Ref: 6e7710839
Ref: reference/mpi4py MPI UNSIGNED_LONG mpi4py MPI UNSIGNED_LONG710908
Ref: 1a8710908
Node: mpi4py MPI UNSIGNED_LONG_LONG711042
Ref: reference/mpi4py MPI UNSIGNED_LONG_LONG doc711179
Ref: 6e8711179
Ref: reference/mpi4py MPI UNSIGNED_LONG_LONG mpi4py-mpi-unsigned-long-long711179
Ref: 6e9711179
Ref: reference/mpi4py MPI UNSIGNED_LONG_LONG mpi4py MPI UNSIGNED_LONG_LONG711258
Ref: 1a9711258
Node: mpi4py MPI FLOAT711417
Ref: reference/mpi4py MPI FLOAT doc711547
Ref: 6ea711547
Ref: reference/mpi4py MPI FLOAT mpi4py-mpi-float711547
Ref: 6eb711547
Ref: reference/mpi4py MPI FLOAT mpi4py MPI FLOAT711600
Ref: 1aa711600
Node: mpi4py MPI DOUBLE711710
Ref: reference/mpi4py MPI DOUBLE doc711833
Ref: 6ec711833
Ref: reference/mpi4py MPI DOUBLE mpi4py-mpi-double711833
Ref: 6ed711833
Ref: reference/mpi4py MPI DOUBLE mpi4py MPI DOUBLE711888
Ref: 1ab711888
Node: mpi4py MPI LONG_DOUBLE712001
Ref: reference/mpi4py MPI LONG_DOUBLE doc712125
Ref: 6ee712125
Ref: reference/mpi4py MPI LONG_DOUBLE mpi4py-mpi-long-double712125
Ref: 6ef712125
Ref: reference/mpi4py MPI LONG_DOUBLE mpi4py MPI LONG_DOUBLE712190
Ref: 1ac712190
Node: mpi4py MPI C_BOOL712318
Ref: reference/mpi4py MPI C_BOOL doc712442
Ref: 6f0712442
Ref: reference/mpi4py MPI C_BOOL mpi4py-mpi-c-bool712442
Ref: 6f1712442
Ref: reference/mpi4py MPI C_BOOL mpi4py MPI C_BOOL712497
Ref: 1ad712497
Node: mpi4py MPI INT8_T712610
Ref: reference/mpi4py MPI INT8_T doc712730
Ref: 6f2712730
Ref: reference/mpi4py MPI INT8_T mpi4py-mpi-int8-t712730
Ref: 6f3712730
Ref: reference/mpi4py MPI INT8_T mpi4py MPI INT8_T712785
Ref: 1ae712785
Node: mpi4py MPI INT16_T712898
Ref: reference/mpi4py MPI INT16_T doc713019
Ref: 6f4713019
Ref: reference/mpi4py MPI INT16_T mpi4py-mpi-int16-t713019
Ref: 6f5713019
Ref: reference/mpi4py MPI INT16_T mpi4py MPI INT16_T713076
Ref: 1af713076
Node: mpi4py MPI INT32_T713192
Ref: reference/mpi4py MPI INT32_T doc713314
Ref: 6f6713314
Ref: reference/mpi4py MPI INT32_T mpi4py-mpi-int32-t713314
Ref: 6f7713314
Ref: reference/mpi4py MPI INT32_T mpi4py MPI INT32_T713371
Ref: 1b0713371
Node: mpi4py MPI INT64_T713487
Ref: reference/mpi4py MPI INT64_T doc713609
Ref: 6f8713609
Ref: reference/mpi4py MPI INT64_T mpi4py-mpi-int64-t713609
Ref: 6f9713609
Ref: reference/mpi4py MPI INT64_T mpi4py MPI INT64_T713666
Ref: 1b1713666
Node: mpi4py MPI UINT8_T713782
Ref: reference/mpi4py MPI UINT8_T doc713905
Ref: 6fa713905
Ref: reference/mpi4py MPI UINT8_T mpi4py-mpi-uint8-t713905
Ref: 6fb713905
Ref: reference/mpi4py MPI UINT8_T mpi4py MPI UINT8_T713962
Ref: 1b2713962
Node: mpi4py MPI UINT16_T714078
Ref: reference/mpi4py MPI UINT16_T doc714202
Ref: 6fc714202
Ref: reference/mpi4py MPI UINT16_T mpi4py-mpi-uint16-t714202
Ref: 6fd714202
Ref: reference/mpi4py MPI UINT16_T mpi4py MPI UINT16_T714261
Ref: 1b3714261
Node: mpi4py MPI UINT32_T714380
Ref: reference/mpi4py MPI UINT32_T doc714505
Ref: 6fe714505
Ref: reference/mpi4py MPI UINT32_T mpi4py-mpi-uint32-t714505
Ref: 6ff714505
Ref: reference/mpi4py MPI UINT32_T mpi4py MPI UINT32_T714564
Ref: 1b4714564
Node: mpi4py MPI UINT64_T714683
Ref: reference/mpi4py MPI UINT64_T doc714809
Ref: 700714809
Ref: reference/mpi4py MPI UINT64_T mpi4py-mpi-uint64-t714809
Ref: 701714809
Ref: reference/mpi4py MPI UINT64_T mpi4py MPI UINT64_T714868
Ref: 1b5714868
Node: mpi4py MPI C_COMPLEX714987
Ref: reference/mpi4py MPI C_COMPLEX doc715120
Ref: 702715120
Ref: reference/mpi4py MPI C_COMPLEX mpi4py-mpi-c-complex715120
Ref: 703715120
Ref: reference/mpi4py MPI C_COMPLEX mpi4py MPI C_COMPLEX715181
Ref: 1b6715181
Node: mpi4py MPI C_FLOAT_COMPLEX715303
Ref: reference/mpi4py MPI C_FLOAT_COMPLEX doc715444
Ref: 704715444
Ref: reference/mpi4py MPI C_FLOAT_COMPLEX mpi4py-mpi-c-float-complex715444
Ref: 705715444
Ref: reference/mpi4py MPI C_FLOAT_COMPLEX mpi4py MPI C_FLOAT_COMPLEX715517
Ref: 1b7715517
Node: mpi4py MPI C_DOUBLE_COMPLEX715667
Ref: reference/mpi4py MPI C_DOUBLE_COMPLEX doc715820
Ref: 706715820
Ref: reference/mpi4py MPI C_DOUBLE_COMPLEX mpi4py-mpi-c-double-complex715820
Ref: 707715820
Ref: reference/mpi4py MPI C_DOUBLE_COMPLEX mpi4py MPI C_DOUBLE_COMPLEX715895
Ref: 1b8715895
Node: mpi4py MPI C_LONG_DOUBLE_COMPLEX716048
Ref: reference/mpi4py MPI C_LONG_DOUBLE_COMPLEX doc716194
Ref: 708716194
Ref: reference/mpi4py MPI C_LONG_DOUBLE_COMPLEX mpi4py-mpi-c-long-double-complex716194
Ref: 709716194
Ref: reference/mpi4py MPI C_LONG_DOUBLE_COMPLEX mpi4py MPI C_LONG_DOUBLE_COMPLEX716279
Ref: 1b9716279
Node: mpi4py MPI CXX_BOOL716447
Ref: reference/mpi4py MPI CXX_BOOL doc716594
Ref: 70a716594
Ref: reference/mpi4py MPI CXX_BOOL mpi4py-mpi-cxx-bool716594
Ref: 70b716594
Ref: reference/mpi4py MPI CXX_BOOL mpi4py MPI CXX_BOOL716653
Ref: 1ba716653
Node: mpi4py MPI CXX_FLOAT_COMPLEX716772
Ref: reference/mpi4py MPI CXX_FLOAT_COMPLEX doc716916
Ref: 70c716916
Ref: reference/mpi4py MPI CXX_FLOAT_COMPLEX mpi4py-mpi-cxx-float-complex716916
Ref: 70d716916
Ref: reference/mpi4py MPI CXX_FLOAT_COMPLEX mpi4py MPI CXX_FLOAT_COMPLEX716993
Ref: 1bb716993
Node: mpi4py MPI CXX_DOUBLE_COMPLEX717149
Ref: reference/mpi4py MPI CXX_DOUBLE_COMPLEX doc717308
Ref: 70e717308
Ref: reference/mpi4py MPI CXX_DOUBLE_COMPLEX mpi4py-mpi-cxx-double-complex717308
Ref: 70f717308
Ref: reference/mpi4py MPI CXX_DOUBLE_COMPLEX mpi4py MPI CXX_DOUBLE_COMPLEX717387
Ref: 1bc717387
Node: mpi4py MPI CXX_LONG_DOUBLE_COMPLEX717546
Ref: reference/mpi4py MPI CXX_LONG_DOUBLE_COMPLEX doc717697
Ref: 710717697
Ref: reference/mpi4py MPI CXX_LONG_DOUBLE_COMPLEX mpi4py-mpi-cxx-long-double-complex717697
Ref: 711717697
Ref: reference/mpi4py MPI CXX_LONG_DOUBLE_COMPLEX mpi4py MPI CXX_LONG_DOUBLE_COMPLEX717786
Ref: 1bd717786
Node: mpi4py MPI SHORT_INT717960
Ref: reference/mpi4py MPI SHORT_INT doc718100
Ref: 712718100
Ref: reference/mpi4py MPI SHORT_INT mpi4py-mpi-short-int718100
Ref: 713718100
Ref: reference/mpi4py MPI SHORT_INT mpi4py MPI SHORT_INT718161
Ref: 1be718161
Node: mpi4py MPI INT_INT718283
Ref: reference/mpi4py MPI INT_INT doc718406
Ref: 714718406
Ref: reference/mpi4py MPI INT_INT mpi4py-mpi-int-int718406
Ref: 715718406
Ref: reference/mpi4py MPI INT_INT mpi4py MPI INT_INT718463
Ref: 1bf718463
Node: mpi4py MPI TWOINT718579
Ref: reference/mpi4py MPI TWOINT doc718701
Ref: 716718701
Ref: reference/mpi4py MPI TWOINT mpi4py-mpi-twoint718701
Ref: 717718701
Ref: reference/mpi4py MPI TWOINT mpi4py MPI TWOINT718756
Ref: 1c0718756
Node: mpi4py MPI LONG_INT718869
Ref: reference/mpi4py MPI LONG_INT doc718993
Ref: 718718993
Ref: reference/mpi4py MPI LONG_INT mpi4py-mpi-long-int718993
Ref: 719718993
Ref: reference/mpi4py MPI LONG_INT mpi4py MPI LONG_INT719052
Ref: 1c1719052
Node: mpi4py MPI FLOAT_INT719171
Ref: reference/mpi4py MPI FLOAT_INT doc719299
Ref: 71a719299
Ref: reference/mpi4py MPI FLOAT_INT mpi4py-mpi-float-int719299
Ref: 71b719299
Ref: reference/mpi4py MPI FLOAT_INT mpi4py MPI FLOAT_INT719360
Ref: 1c2719360
Node: mpi4py MPI DOUBLE_INT719482
Ref: reference/mpi4py MPI DOUBLE_INT doc719617
Ref: 71c719617
Ref: reference/mpi4py MPI DOUBLE_INT mpi4py-mpi-double-int719617
Ref: 71d719617
Ref: reference/mpi4py MPI DOUBLE_INT mpi4py MPI DOUBLE_INT719680
Ref: 1c3719680
Node: mpi4py MPI LONG_DOUBLE_INT719805
Ref: reference/mpi4py MPI LONG_DOUBLE_INT doc719940
Ref: 71e719940
Ref: reference/mpi4py MPI LONG_DOUBLE_INT mpi4py-mpi-long-double-int719940
Ref: 71f719940
Ref: reference/mpi4py MPI LONG_DOUBLE_INT mpi4py MPI LONG_DOUBLE_INT720013
Ref: 1c4720013
Node: mpi4py MPI CHARACTER720163
Ref: reference/mpi4py MPI CHARACTER doc720295
Ref: 720720295
Ref: reference/mpi4py MPI CHARACTER mpi4py-mpi-character720295
Ref: 721720295
Ref: reference/mpi4py MPI CHARACTER mpi4py MPI CHARACTER720356
Ref: 1c5720356
Node: mpi4py MPI LOGICAL720478
Ref: reference/mpi4py MPI LOGICAL doc720602
Ref: 722720602
Ref: reference/mpi4py MPI LOGICAL mpi4py-mpi-logical720602
Ref: 723720602
Ref: reference/mpi4py MPI LOGICAL mpi4py MPI LOGICAL720659
Ref: 1c6720659
Node: mpi4py MPI INTEGER720775
Ref: reference/mpi4py MPI INTEGER doc720894
Ref: 724720894
Ref: reference/mpi4py MPI INTEGER mpi4py-mpi-integer720894
Ref: 725720894
Ref: reference/mpi4py MPI INTEGER mpi4py MPI INTEGER720951
Ref: 1c7720951
Node: mpi4py MPI REAL721067
Ref: reference/mpi4py MPI REAL doc721195
Ref: 726721195
Ref: reference/mpi4py MPI REAL mpi4py-mpi-real721195
Ref: 727721195
Ref: reference/mpi4py MPI REAL mpi4py MPI REAL721246
Ref: 1c8721246
Node: mpi4py MPI DOUBLE_PRECISION721353
Ref: reference/mpi4py MPI DOUBLE_PRECISION doc721481
Ref: 728721481
Ref: reference/mpi4py MPI DOUBLE_PRECISION mpi4py-mpi-double-precision721481
Ref: 729721481
Ref: reference/mpi4py MPI DOUBLE_PRECISION mpi4py MPI DOUBLE_PRECISION721556
Ref: 1c9721556
Node: mpi4py MPI COMPLEX721709
Ref: reference/mpi4py MPI COMPLEX doc721847
Ref: 72a721847
Ref: reference/mpi4py MPI COMPLEX mpi4py-mpi-complex721847
Ref: 72b721847
Ref: reference/mpi4py MPI COMPLEX mpi4py MPI COMPLEX721904
Ref: 1ca721904
Node: mpi4py MPI DOUBLE_COMPLEX722020
Ref: reference/mpi4py MPI DOUBLE_COMPLEX doc722150
Ref: 72c722150
Ref: reference/mpi4py MPI DOUBLE_COMPLEX mpi4py-mpi-double-complex722150
Ref: 72d722150
Ref: reference/mpi4py MPI DOUBLE_COMPLEX mpi4py MPI DOUBLE_COMPLEX722221
Ref: 1cb722221
Node: mpi4py MPI LOGICAL1722368
Ref: reference/mpi4py MPI LOGICAL1 doc722499
Ref: 72e722499
Ref: reference/mpi4py MPI LOGICAL1 mpi4py-mpi-logical1722499
Ref: 72f722499
Ref: reference/mpi4py MPI LOGICAL1 mpi4py MPI LOGICAL1722558
Ref: 1cc722558
Node: mpi4py MPI LOGICAL2722677
Ref: reference/mpi4py MPI LOGICAL2 doc722802
Ref: 730722802
Ref: reference/mpi4py MPI LOGICAL2 mpi4py-mpi-logical2722802
Ref: 731722802
Ref: reference/mpi4py MPI LOGICAL2 mpi4py MPI LOGICAL2722861
Ref: 1cd722861
Node: mpi4py MPI LOGICAL4722980
Ref: reference/mpi4py MPI LOGICAL4 doc723105
Ref: 732723105
Ref: reference/mpi4py MPI LOGICAL4 mpi4py-mpi-logical4723105
Ref: 733723105
Ref: reference/mpi4py MPI LOGICAL4 mpi4py MPI LOGICAL4723164
Ref: 1ce723164
Node: mpi4py MPI LOGICAL8723283
Ref: reference/mpi4py MPI LOGICAL8 doc723408
Ref: 734723408
Ref: reference/mpi4py MPI LOGICAL8 mpi4py-mpi-logical8723408
Ref: 735723408
Ref: reference/mpi4py MPI LOGICAL8 mpi4py MPI LOGICAL8723467
Ref: 1cf723467
Node: mpi4py MPI INTEGER1723586
Ref: reference/mpi4py MPI INTEGER1 doc723711
Ref: 736723711
Ref: reference/mpi4py MPI INTEGER1 mpi4py-mpi-integer1723711
Ref: 737723711
Ref: reference/mpi4py MPI INTEGER1 mpi4py MPI INTEGER1723770
Ref: 1d0723770
Node: mpi4py MPI INTEGER2723889
Ref: reference/mpi4py MPI INTEGER2 doc724014
Ref: 738724014
Ref: reference/mpi4py MPI INTEGER2 mpi4py-mpi-integer2724014
Ref: 739724014
Ref: reference/mpi4py MPI INTEGER2 mpi4py MPI INTEGER2724073
Ref: 1d1724073
Node: mpi4py MPI INTEGER4724192
Ref: reference/mpi4py MPI INTEGER4 doc724317
Ref: 73a724317
Ref: reference/mpi4py MPI INTEGER4 mpi4py-mpi-integer4724317
Ref: 73b724317
Ref: reference/mpi4py MPI INTEGER4 mpi4py MPI INTEGER4724376
Ref: 1d2724376
Node: mpi4py MPI INTEGER8724495
Ref: reference/mpi4py MPI INTEGER8 doc724621
Ref: 73c724621
Ref: reference/mpi4py MPI INTEGER8 mpi4py-mpi-integer8724621
Ref: 73d724621
Ref: reference/mpi4py MPI INTEGER8 mpi4py MPI INTEGER8724680
Ref: 1d3724680
Node: mpi4py MPI INTEGER16724799
Ref: reference/mpi4py MPI INTEGER16 doc724922
Ref: 73e724922
Ref: reference/mpi4py MPI INTEGER16 mpi4py-mpi-integer16724922
Ref: 73f724922
Ref: reference/mpi4py MPI INTEGER16 mpi4py MPI INTEGER16724983
Ref: 1d4724983
Node: mpi4py MPI REAL2725105
Ref: reference/mpi4py MPI REAL2 doc725225
Ref: 740725225
Ref: reference/mpi4py MPI REAL2 mpi4py-mpi-real2725225
Ref: 741725225
Ref: reference/mpi4py MPI REAL2 mpi4py MPI REAL2725278
Ref: 1d5725278
Node: mpi4py MPI REAL4725388
Ref: reference/mpi4py MPI REAL4 doc725504
Ref: 742725504
Ref: reference/mpi4py MPI REAL4 mpi4py-mpi-real4725504
Ref: 743725504
Ref: reference/mpi4py MPI REAL4 mpi4py MPI REAL4725557
Ref: 1d6725557
Node: mpi4py MPI REAL8725667
Ref: reference/mpi4py MPI REAL8 doc725784
Ref: 744725784
Ref: reference/mpi4py MPI REAL8 mpi4py-mpi-real8725784
Ref: 745725784
Ref: reference/mpi4py MPI REAL8 mpi4py MPI REAL8725837
Ref: 1d7725837
Node: mpi4py MPI REAL16725947
Ref: reference/mpi4py MPI REAL16 doc726067
Ref: 746726067
Ref: reference/mpi4py MPI REAL16 mpi4py-mpi-real16726067
Ref: 747726067
Ref: reference/mpi4py MPI REAL16 mpi4py MPI REAL16726122
Ref: 1d8726122
Node: mpi4py MPI COMPLEX4726235
Ref: reference/mpi4py MPI COMPLEX4 doc726358
Ref: 748726358
Ref: reference/mpi4py MPI COMPLEX4 mpi4py-mpi-complex4726358
Ref: 749726358
Ref: reference/mpi4py MPI COMPLEX4 mpi4py MPI COMPLEX4726417
Ref: 1d9726417
Node: mpi4py MPI COMPLEX8726536
Ref: reference/mpi4py MPI COMPLEX8 doc726662
Ref: 74a726662
Ref: reference/mpi4py MPI COMPLEX8 mpi4py-mpi-complex8726662
Ref: 74b726662
Ref: reference/mpi4py MPI COMPLEX8 mpi4py MPI COMPLEX8726721
Ref: 1da726721
Node: mpi4py MPI COMPLEX16726840
Ref: reference/mpi4py MPI COMPLEX16 doc726967
Ref: 74c726967
Ref: reference/mpi4py MPI COMPLEX16 mpi4py-mpi-complex16726967
Ref: 74d726967
Ref: reference/mpi4py MPI COMPLEX16 mpi4py MPI COMPLEX16727028
Ref: 1db727028
Node: mpi4py MPI COMPLEX32727150
Ref: reference/mpi4py MPI COMPLEX32 doc727281
Ref: 74e727281
Ref: reference/mpi4py MPI COMPLEX32 mpi4py-mpi-complex32727281
Ref: 74f727281
Ref: reference/mpi4py MPI COMPLEX32 mpi4py MPI COMPLEX32727342
Ref: 1dc727342
Node: mpi4py MPI UNSIGNED_INT727464
Ref: reference/mpi4py MPI UNSIGNED_INT doc727598
Ref: 750727598
Ref: reference/mpi4py MPI UNSIGNED_INT mpi4py-mpi-unsigned-int727598
Ref: 751727598
Ref: reference/mpi4py MPI UNSIGNED_INT mpi4py MPI UNSIGNED_INT727665
Ref: 1dd727665
Node: mpi4py MPI SIGNED_SHORT727796
Ref: reference/mpi4py MPI SIGNED_SHORT doc727931
Ref: 752727931
Ref: reference/mpi4py MPI SIGNED_SHORT mpi4py-mpi-signed-short727931
Ref: 753727931
Ref: reference/mpi4py MPI SIGNED_SHORT mpi4py MPI SIGNED_SHORT727998
Ref: 1de727998
Node: mpi4py MPI SIGNED_INT728129
Ref: reference/mpi4py MPI SIGNED_INT doc728263
Ref: 754728263
Ref: reference/mpi4py MPI SIGNED_INT mpi4py-mpi-signed-int728263
Ref: 755728263
Ref: reference/mpi4py MPI SIGNED_INT mpi4py MPI SIGNED_INT728326
Ref: 1df728326
Node: mpi4py MPI SIGNED_LONG728451
Ref: reference/mpi4py MPI SIGNED_LONG doc728589
Ref: 756728589
Ref: reference/mpi4py MPI SIGNED_LONG mpi4py-mpi-signed-long728589
Ref: 757728589
Ref: reference/mpi4py MPI SIGNED_LONG mpi4py MPI SIGNED_LONG728654
Ref: 1e0728654
Node: mpi4py MPI SIGNED_LONG_LONG728782
Ref: reference/mpi4py MPI SIGNED_LONG_LONG doc728914
Ref: 758728914
Ref: reference/mpi4py MPI SIGNED_LONG_LONG mpi4py-mpi-signed-long-long728914
Ref: 759728914
Ref: reference/mpi4py MPI SIGNED_LONG_LONG mpi4py MPI SIGNED_LONG_LONG728989
Ref: 1e1728989
Node: mpi4py MPI BOOL729142
Ref: reference/mpi4py MPI BOOL doc729270
Ref: 75a729270
Ref: reference/mpi4py MPI BOOL mpi4py-mpi-bool729270
Ref: 75b729270
Ref: reference/mpi4py MPI BOOL mpi4py MPI BOOL729321
Ref: 1e2729321
Node: mpi4py MPI SINT8_T729428
Ref: reference/mpi4py MPI SINT8_T doc729548
Ref: 75c729548
Ref: reference/mpi4py MPI SINT8_T mpi4py-mpi-sint8-t729548
Ref: 75d729548
Ref: reference/mpi4py MPI SINT8_T mpi4py MPI SINT8_T729605
Ref: 1e3729605
Node: mpi4py MPI SINT16_T729721
Ref: reference/mpi4py MPI SINT16_T doc729845
Ref: 75e729845
Ref: reference/mpi4py MPI SINT16_T mpi4py-mpi-sint16-t729845
Ref: 75f729845
Ref: reference/mpi4py MPI SINT16_T mpi4py MPI SINT16_T729904
Ref: 1e4729904
Node: mpi4py MPI SINT32_T730023
Ref: reference/mpi4py MPI SINT32_T doc730148
Ref: 760730148
Ref: reference/mpi4py MPI SINT32_T mpi4py-mpi-sint32-t730148
Ref: 761730148
Ref: reference/mpi4py MPI SINT32_T mpi4py MPI SINT32_T730207
Ref: 1e5730207
Node: mpi4py MPI SINT64_T730326
Ref: reference/mpi4py MPI SINT64_T doc730449
Ref: 762730449
Ref: reference/mpi4py MPI SINT64_T mpi4py-mpi-sint64-t730449
Ref: 763730449
Ref: reference/mpi4py MPI SINT64_T mpi4py MPI SINT64_T730508
Ref: 1e6730508
Node: mpi4py MPI F_BOOL730627
Ref: reference/mpi4py MPI F_BOOL doc730747
Ref: 764730747
Ref: reference/mpi4py MPI F_BOOL mpi4py-mpi-f-bool730747
Ref: 765730747
Ref: reference/mpi4py MPI F_BOOL mpi4py MPI F_BOOL730802
Ref: 1e7730802
Node: mpi4py MPI F_INT730915
Ref: reference/mpi4py MPI F_INT doc731034
Ref: 766731034
Ref: reference/mpi4py MPI F_INT mpi4py-mpi-f-int731034
Ref: 767731034
Ref: reference/mpi4py MPI F_INT mpi4py MPI F_INT731087
Ref: 1e8731087
Node: mpi4py MPI F_FLOAT731197
Ref: reference/mpi4py MPI F_FLOAT doc731318
Ref: 768731318
Ref: reference/mpi4py MPI F_FLOAT mpi4py-mpi-f-float731318
Ref: 769731318
Ref: reference/mpi4py MPI F_FLOAT mpi4py MPI F_FLOAT731375
Ref: 1e9731375
Node: mpi4py MPI F_DOUBLE731491
Ref: reference/mpi4py MPI F_DOUBLE doc731616
Ref: 76a731616
Ref: reference/mpi4py MPI F_DOUBLE mpi4py-mpi-f-double731616
Ref: 76b731616
Ref: reference/mpi4py MPI F_DOUBLE mpi4py MPI F_DOUBLE731675
Ref: 1ea731675
Node: mpi4py MPI F_COMPLEX731794
Ref: reference/mpi4py MPI F_COMPLEX doc731927
Ref: 76c731927
Ref: reference/mpi4py MPI F_COMPLEX mpi4py-mpi-f-complex731927
Ref: 76d731927
Ref: reference/mpi4py MPI F_COMPLEX mpi4py MPI F_COMPLEX731988
Ref: 1eb731988
Node: mpi4py MPI F_FLOAT_COMPLEX732110
Ref: reference/mpi4py MPI F_FLOAT_COMPLEX doc732251
Ref: 76e732251
Ref: reference/mpi4py MPI F_FLOAT_COMPLEX mpi4py-mpi-f-float-complex732251
Ref: 76f732251
Ref: reference/mpi4py MPI F_FLOAT_COMPLEX mpi4py MPI F_FLOAT_COMPLEX732324
Ref: 1ec732324
Node: mpi4py MPI F_DOUBLE_COMPLEX732474
Ref: reference/mpi4py MPI F_DOUBLE_COMPLEX doc732618
Ref: 770732618
Ref: reference/mpi4py MPI F_DOUBLE_COMPLEX mpi4py-mpi-f-double-complex732618
Ref: 771732618
Ref: reference/mpi4py MPI F_DOUBLE_COMPLEX mpi4py MPI F_DOUBLE_COMPLEX732693
Ref: 1ed732693
Node: mpi4py MPI REQUEST_NULL732846
Ref: reference/mpi4py MPI REQUEST_NULL doc732987
Ref: 772732987
Ref: reference/mpi4py MPI REQUEST_NULL mpi4py-mpi-request-null732987
Ref: 773732987
Ref: reference/mpi4py MPI REQUEST_NULL mpi4py MPI REQUEST_NULL733054
Ref: 1ee733054
Node: mpi4py MPI MESSAGE_NULL733183
Ref: reference/mpi4py MPI MESSAGE_NULL doc733323
Ref: 774733323
Ref: reference/mpi4py MPI MESSAGE_NULL mpi4py-mpi-message-null733323
Ref: 775733323
Ref: reference/mpi4py MPI MESSAGE_NULL mpi4py MPI MESSAGE_NULL733390
Ref: 1ef733390
Node: mpi4py MPI MESSAGE_NO_PROC733519
Ref: reference/mpi4py MPI MESSAGE_NO_PROC doc733654
Ref: 776733654
Ref: reference/mpi4py MPI MESSAGE_NO_PROC mpi4py-mpi-message-no-proc733654
Ref: 777733654
Ref: reference/mpi4py MPI MESSAGE_NO_PROC mpi4py MPI MESSAGE_NO_PROC733727
Ref: 1f0733727
Node: mpi4py MPI OP_NULL733875
Ref: reference/mpi4py MPI OP_NULL doc734001
Ref: 778734001
Ref: reference/mpi4py MPI OP_NULL mpi4py-mpi-op-null734001
Ref: 779734001
Ref: reference/mpi4py MPI OP_NULL mpi4py MPI OP_NULL734058
Ref: 1f1734058
Node: mpi4py MPI MAX734267
Ref: reference/mpi4py MPI MAX doc734381
Ref: 77a734381
Ref: reference/mpi4py MPI MAX mpi4py-mpi-max734381
Ref: 77b734381
Ref: reference/mpi4py MPI MAX mpi4py MPI MAX734430
Ref: 67734430
Node: mpi4py MPI MIN734627
Ref: reference/mpi4py MPI MIN doc734737
Ref: 77c734737
Ref: reference/mpi4py MPI MIN mpi4py-mpi-min734737
Ref: 77d734737
Ref: reference/mpi4py MPI MIN mpi4py MPI MIN734786
Ref: 1f2734786
Node: mpi4py MPI SUM734983
Ref: reference/mpi4py MPI SUM doc735094
Ref: 77e735094
Ref: reference/mpi4py MPI SUM mpi4py-mpi-sum735094
Ref: 77f735094
Ref: reference/mpi4py MPI SUM mpi4py MPI SUM735143
Ref: 65735143
Node: mpi4py MPI PROD735340
Ref: reference/mpi4py MPI PROD doc735452
Ref: 780735452
Ref: reference/mpi4py MPI PROD mpi4py-mpi-prod735452
Ref: 781735452
Ref: reference/mpi4py MPI PROD mpi4py MPI PROD735503
Ref: 66735503
Node: mpi4py MPI LAND735703
Ref: reference/mpi4py MPI LAND doc735816
Ref: 782735816
Ref: reference/mpi4py MPI LAND mpi4py-mpi-land735816
Ref: 783735816
Ref: reference/mpi4py MPI LAND mpi4py MPI LAND735867
Ref: 1f3735867
Node: mpi4py MPI BAND736067
Ref: reference/mpi4py MPI BAND doc736179
Ref: 784736179
Ref: reference/mpi4py MPI BAND mpi4py-mpi-band736179
Ref: 785736179
Ref: reference/mpi4py MPI BAND mpi4py MPI BAND736230
Ref: 1f4736230
Node: mpi4py MPI LOR736430
Ref: reference/mpi4py MPI LOR doc736541
Ref: 786736541
Ref: reference/mpi4py MPI LOR mpi4py-mpi-lor736541
Ref: 787736541
Ref: reference/mpi4py MPI LOR mpi4py MPI LOR736590
Ref: 1f5736590
Node: mpi4py MPI BOR736787
Ref: reference/mpi4py MPI BOR doc736898
Ref: 788736898
Ref: reference/mpi4py MPI BOR mpi4py-mpi-bor736898
Ref: 789736898
Ref: reference/mpi4py MPI BOR mpi4py MPI BOR736947
Ref: 1f6736947
Node: mpi4py MPI LXOR737144
Ref: reference/mpi4py MPI LXOR doc737256
Ref: 78a737256
Ref: reference/mpi4py MPI LXOR mpi4py-mpi-lxor737256
Ref: 78b737256
Ref: reference/mpi4py MPI LXOR mpi4py MPI LXOR737307
Ref: 1f7737307
Node: mpi4py MPI BXOR737507
Ref: reference/mpi4py MPI BXOR doc737622
Ref: 78c737622
Ref: reference/mpi4py MPI BXOR mpi4py-mpi-bxor737622
Ref: 78d737622
Ref: reference/mpi4py MPI BXOR mpi4py MPI BXOR737673
Ref: 1f8737673
Node: mpi4py MPI MAXLOC737873
Ref: reference/mpi4py MPI MAXLOC doc737990
Ref: 78e737990
Ref: reference/mpi4py MPI MAXLOC mpi4py-mpi-maxloc737990
Ref: 78f737990
Ref: reference/mpi4py MPI MAXLOC mpi4py MPI MAXLOC738045
Ref: 1f9738045
Node: mpi4py MPI MINLOC738251
Ref: reference/mpi4py MPI MINLOC doc738371
Ref: 790738371
Ref: reference/mpi4py MPI MINLOC mpi4py-mpi-minloc738371
Ref: 791738371
Ref: reference/mpi4py MPI MINLOC mpi4py MPI MINLOC738426
Ref: 1fa738426
Node: mpi4py MPI REPLACE738632
Ref: reference/mpi4py MPI REPLACE doc738751
Ref: 792738751
Ref: reference/mpi4py MPI REPLACE mpi4py-mpi-replace738751
Ref: 793738751
Ref: reference/mpi4py MPI REPLACE mpi4py MPI REPLACE738808
Ref: 1fb738808
Node: mpi4py MPI NO_OP739017
Ref: reference/mpi4py MPI NO_OP doc739140
Ref: 794739140
Ref: reference/mpi4py MPI NO_OP mpi4py-mpi-no-op739140
Ref: 795739140
Ref: reference/mpi4py MPI NO_OP mpi4py MPI NO_OP739193
Ref: 1fc739193
Node: mpi4py MPI GROUP_NULL739396
Ref: reference/mpi4py MPI GROUP_NULL doc739523
Ref: 796739523
Ref: reference/mpi4py MPI GROUP_NULL mpi4py-mpi-group-null739523
Ref: 797739523
Ref: reference/mpi4py MPI GROUP_NULL mpi4py MPI GROUP_NULL739586
Ref: 1fd739586
Node: mpi4py MPI GROUP_EMPTY739705
Ref: reference/mpi4py MPI GROUP_EMPTY doc739836
Ref: 798739836
Ref: reference/mpi4py MPI GROUP_EMPTY mpi4py-mpi-group-empty739836
Ref: 799739836
Ref: reference/mpi4py MPI GROUP_EMPTY mpi4py MPI GROUP_EMPTY739901
Ref: 1fe739901
Node: mpi4py MPI INFO_NULL740023
Ref: reference/mpi4py MPI INFO_NULL doc740152
Ref: 79a740152
Ref: reference/mpi4py MPI INFO_NULL mpi4py-mpi-info-null740152
Ref: 79b740152
Ref: reference/mpi4py MPI INFO_NULL mpi4py MPI INFO_NULL740213
Ref: 1ff740213
Node: mpi4py MPI INFO_ENV740327
Ref: reference/mpi4py MPI INFO_ENV doc740460
Ref: 79c740460
Ref: reference/mpi4py MPI INFO_ENV mpi4py-mpi-info-env740460
Ref: 79d740460
Ref: reference/mpi4py MPI INFO_ENV mpi4py MPI INFO_ENV740519
Ref: 200740519
Node: mpi4py MPI ERRHANDLER_NULL740630
Ref: reference/mpi4py MPI ERRHANDLER_NULL doc740767
Ref: 79e740767
Ref: reference/mpi4py MPI ERRHANDLER_NULL mpi4py-mpi-errhandler-null740767
Ref: 79f740767
Ref: reference/mpi4py MPI ERRHANDLER_NULL mpi4py MPI ERRHANDLER_NULL740840
Ref: 201740840
Node: mpi4py MPI ERRORS_RETURN740994
Ref: reference/mpi4py MPI ERRORS_RETURN doc741135
Ref: 7a0741135
Ref: reference/mpi4py MPI ERRORS_RETURN mpi4py-mpi-errors-return741135
Ref: 7a1741135
Ref: reference/mpi4py MPI ERRORS_RETURN mpi4py MPI ERRORS_RETURN741204
Ref: 99741204
Node: mpi4py MPI ERRORS_ABORT741352
Ref: reference/mpi4py MPI ERRORS_ABORT doc741494
Ref: 7a2741494
Ref: reference/mpi4py MPI ERRORS_ABORT mpi4py-mpi-errors-abort741494
Ref: 7a3741494
Ref: reference/mpi4py MPI ERRORS_ABORT mpi4py MPI ERRORS_ABORT741561
Ref: 566741561
Node: mpi4py MPI ERRORS_ARE_FATAL741696
Ref: reference/mpi4py MPI ERRORS_ARE_FATAL doc741837
Ref: 7a4741837
Ref: reference/mpi4py MPI ERRORS_ARE_FATAL mpi4py-mpi-errors-are-fatal741837
Ref: 7a5741837
Ref: reference/mpi4py MPI ERRORS_ARE_FATAL mpi4py MPI ERRORS_ARE_FATAL741912
Ref: 9a741912
Node: mpi4py MPI SESSION_NULL742069
Ref: reference/mpi4py MPI SESSION_NULL doc742207
Ref: 7a6742207
Ref: reference/mpi4py MPI SESSION_NULL mpi4py-mpi-session-null742207
Ref: 7a7742207
Ref: reference/mpi4py MPI SESSION_NULL mpi4py MPI SESSION_NULL742274
Ref: 567742274
Node: mpi4py MPI COMM_NULL742403
Ref: reference/mpi4py MPI COMM_NULL doc742534
Ref: 7a8742534
Ref: reference/mpi4py MPI COMM_NULL mpi4py-mpi-comm-null742534
Ref: 7a9742534
Ref: reference/mpi4py MPI COMM_NULL mpi4py MPI COMM_NULL742595
Ref: 202742595
Node: mpi4py MPI COMM_SELF742709
Ref: reference/mpi4py MPI COMM_SELF doc742838
Ref: 7aa742838
Ref: reference/mpi4py MPI COMM_SELF mpi4py-mpi-comm-self742838
Ref: 7ab742838
Ref: reference/mpi4py MPI COMM_SELF mpi4py MPI COMM_SELF742899
Ref: 23742899
Node: mpi4py MPI COMM_WORLD743023
Ref: reference/mpi4py MPI COMM_WORLD doc743151
Ref: 7ac743151
Ref: reference/mpi4py MPI COMM_WORLD mpi4py-mpi-comm-world743151
Ref: 7ad743151
Ref: reference/mpi4py MPI COMM_WORLD mpi4py MPI COMM_WORLD743214
Ref: 24743214
Node: mpi4py MPI WIN_NULL743341
Ref: reference/mpi4py MPI WIN_NULL doc743469
Ref: 7ae743469
Ref: reference/mpi4py MPI WIN_NULL mpi4py-mpi-win-null743469
Ref: 7af743469
Ref: reference/mpi4py MPI WIN_NULL mpi4py MPI WIN_NULL743528
Ref: 203743528
Node: mpi4py MPI FILE_NULL743637
Ref: reference/mpi4py MPI FILE_NULL doc743761
Ref: 7b0743761
Ref: reference/mpi4py MPI FILE_NULL mpi4py-mpi-file-null743761
Ref: 7b1743761
Ref: reference/mpi4py MPI FILE_NULL mpi4py MPI FILE_NULL743822
Ref: 204743822
Node: mpi4py MPI pickle743936
Ref: reference/mpi4py MPI pickle doc744032
Ref: 7b2744032
Ref: reference/mpi4py MPI pickle mpi4py-mpi-pickle744032
Ref: 7b3744032
Ref: reference/mpi4py MPI pickle mpi4py MPI pickle744087
Ref: a8744087
Node: Citation<2>744226
Ref: citation doc744316
Ref: 7b4744316
Ref: citation citation744316
Ref: 7b5744316
Node: Installation745602
Ref: install doc745694
Ref: 7b6745694
Ref: install installation745694
Ref: 7b7745694
Node: Build backends745818
Ref: install build-backends745899
Ref: 7b8745899
Ref: install envvar-MPI4PY_BUILD_BACKEND746196
Ref: 7b9746196
Ref: Build backends-Footnote-1746545
Ref: Build backends-Footnote-2746581
Ref: Build backends-Footnote-3746631
Ref: Build backends-Footnote-4746658
Ref: Build backends-Footnote-5746703
Node: Using setuptools746735
Ref: install using-setuptools746834
Ref: 7ba746834
Ref: install envvar-MPI4PY_BUILD_MPICC747234
Ref: 7bb747234
Ref: install envvar-MPI4PY_BUILD_MPILD747644
Ref: 7bc747644
Ref: install envvar-MPI4PY_BUILD_MPICFG747975
Ref: 7bd747975
Ref: install envvar-MPI4PY_BUILD_CONFIGURE748610
Ref: 7be748610
Ref: install envvar-MPICC749393
Ref: 7bf749393
Ref: install envvar-MPILD749485
Ref: 7c0749485
Ref: install envvar-MPICFG749577
Ref: 7c1749577
Ref: Using setuptools-Footnote-1749707
Ref: Using setuptools-Footnote-2749743
Node: Using scikit-build-core749779
Ref: install using-scikit-build-core749905
Ref: 7c2749905
Ref: Using scikit-build-core-Footnote-1750811
Ref: Using scikit-build-core-Footnote-2750861
Ref: Using scikit-build-core-Footnote-3750911
Ref: Using scikit-build-core-Footnote-4750938
Node: Using meson-python751002
Ref: install scikit-build-core751103
Ref: 7c3751103
Ref: install using-meson-python751103
Ref: 7c4751103
Ref: Using meson-python-Footnote-1751689
Ref: Using meson-python-Footnote-2751734
Ref: Using meson-python-Footnote-3751779
Ref: Using meson-python-Footnote-4751811
Ref: Using meson-python-Footnote-5751856
Node: Using pip751921
Ref: install meson-python752022
Ref: 7c5752022
Ref: install using-pip752022
Ref: 7c6752022
Ref: Using pip-Footnote-1753091
Node: Using conda753132
Ref: install using-conda753224
Ref: 7c7753224
Ref: Using conda-Footnote-1755282
Ref: Using conda-Footnote-2755315
Node: Linux755428
Ref: install cf-mpi-docs755516
Ref: 7c8755516
Ref: install linux755516
Ref: 7c9755516
Node: macOS756678
Ref: install macos756762
Ref: 7ca756762
Ref: macOS-Footnote-1757077
Node: Windows757102
Ref: install homebrew757172
Ref: 7cb757172
Ref: install windows757172
Ref: 7cc757172
Ref: Windows-Footnote-1757980
Ref: Windows-Footnote-2758033
Ref: Windows-Footnote-3758110
Node: Development758152
Ref: develop doc758243
Ref: 7cd758243
Ref: develop development758243
Ref: 7ce758243
Ref: develop impi-rt758243
Ref: 7cf758243
Node: Prerequisites758342
Ref: develop prerequisites758420
Ref: 7d0758420
Ref: Prerequisites-Footnote-1759311
Ref: Prerequisites-Footnote-2759343
Ref: Prerequisites-Footnote-3759371
Ref: Prerequisites-Footnote-4759406
Ref: Prerequisites-Footnote-5759437
Ref: Prerequisites-Footnote-6759471
Ref: Prerequisites-Footnote-7759498
Ref: Prerequisites-Footnote-8759524
Ref: Prerequisites-Footnote-9759560
Node: Building759610
Ref: develop building759707
Ref: 7d1759707
Ref: develop spin759707
Ref: 7d2759707
Ref: develop cmdoption-mpi759900
Ref: 7d3759900
Ref: develop cmdoption-mpicc760101
Ref: 7d4760101
Ref: develop cmdoption-mpild760269
Ref: 7d5760269
Ref: develop cmdoption-configure760505
Ref: 7d6760505
Node: Installing762465
Ref: develop installing762556
Ref: 7d7762556
Node: Testing762789
Ref: develop testing762863
Ref: 7d8762863
Ref: Testing-Footnote-1763880
Node: Guidelines763913
Ref: guidelines doc763999
Ref: 7d9763999
Ref: guidelines guidelines763999
Ref: 7da763999
Ref: guidelines pytest763999
Ref: 7db763999
Node: Fair play764052
Ref: guidelines fair-play764108
Ref: 7dc764108
Node: Summary764206
Ref: guidelines summary764278
Ref: 7dd764278
Ref: Summary-Footnote-1764886
Node: Motivation764941
Ref: guidelines motivation765027
Ref: 7de765027
Ref: guidelines numpy-nep-36765027
Ref: 7df765027
Ref: Motivation-Footnote-1765666
Node: Scope765718
Ref: guidelines mpi4py-mpi4py-508765812
Ref: 7e0765812
Ref: guidelines scope765812
Ref: 7e1765812
Ref: Scope-Footnote-1766427
Node: Fair play rules766481
Ref: guidelines fair-play-rules766556
Ref: 7e2766556
Ref: guidelines id1766556
Ref: 7e3766556
Ref: guidelines mpi-abi-paper768660
Ref: 7e4768660
Ref: guidelines mpi-abi-issue768973
Ref: 7e5768973
Node: LICENSE770100
Ref: license doc770182
Ref: 7e6770182
Ref: license id1770182
Ref: 7e7770182
Ref: license license770182
Ref: 7e8770182
Node: CHANGES771711
Ref: changes doc771802
Ref: 7e9771802
Ref: changes changes771802
Ref: 7ea771802
Ref: changes id1771802
Ref: 7eb771802
Node: Release 4 0 3 [2025-02-13]773161
Ref: changes release-4-0-3-2025-02-13773266
Ref: 7ec773266
Node: Release 4 0 2 [2025-02-01]773362
Ref: changes release-4-0-2-2025-02-01773502
Ref: 7ed773502
Node: Release 4 0 1 [2024-10-11]773735
Ref: changes release-4-0-1-2024-10-11773875
Ref: 7ee773875
Node: Release 4 0 0 [2024-07-28]774696
Ref: changes release-4-0-0-2024-07-28774836
Ref: 7ef774836
Ref: Release 4 0 0 [2024-07-28]-Footnote-1779836
Ref: Release 4 0 0 [2024-07-28]-Footnote-2779881
Node: Release 3 1 6 [2024-04-14]779926
Ref: changes release-3-1-6-2024-04-14780066
Ref: 7f0780066
Node: Release 3 1 5 [2023-10-04]780224
Ref: changes release-3-1-5-2023-10-04780364
Ref: 7f1780364
Node: Release 3 1 4 [2022-11-02]780558
Ref: changes release-3-1-4-2022-11-02780698
Ref: 7f2780698
Node: Release 3 1 3 [2021-11-25]781000
Ref: changes release-3-1-3-2021-11-25781140
Ref: 7f3781140
Node: Release 3 1 2 [2021-11-04]781357
Ref: changes release-3-1-2-2021-11-04781497
Ref: 7f4781497
Node: Release 3 1 1 [2021-08-14]782279
Ref: changes release-3-1-1-2021-08-14782419
Ref: 7f5782419
Node: Release 3 1 0 [2021-08-12]782647
Ref: changes release-3-1-0-2021-08-12782787
Ref: 7f6782787
Ref: Release 3 1 0 [2021-08-12]-Footnote-1784305
Ref: Release 3 1 0 [2021-08-12]-Footnote-2784344
Ref: Release 3 1 0 [2021-08-12]-Footnote-3784428
Ref: Release 3 1 0 [2021-08-12]-Footnote-4784507
Ref: Release 3 1 0 [2021-08-12]-Footnote-5784578
Node: Release 3 0 3 [2019-11-04]784628
Ref: changes doi784768
Ref: 7f7784768
Ref: changes release-3-0-3-2019-11-04784768
Ref: 7f8784768
Node: Release 3 0 2 [2019-06-11]784891
Ref: changes release-3-0-2-2019-06-11785031
Ref: 7f9785031
Node: Release 3 0 1 [2019-02-15]785563
Ref: changes release-3-0-1-2019-02-15785703
Ref: 7fa785703
Node: Release 3 0 0 [2017-11-08]786370
Ref: changes release-3-0-0-2017-11-08786510
Ref: 7fb786510
Node: Release 2 0 0 [2015-10-18]788615
Ref: changes release-2-0-0-2015-10-18788755
Ref: 7fc788755
Node: Release 1 3 1 [2013-08-07]792281
Ref: changes release-1-3-1-2013-08-07792419
Ref: 7fd792419
Node: Release 1 3 [2012-01-20]792940
Ref: changes release-1-3-2012-01-20793078
Ref: 7fe793078
Node: Release 1 2 2 [2010-09-13]793632
Ref: changes release-1-2-2-2010-09-13793770
Ref: 7ff793770
Node: Release 1 2 1 [2010-02-26]794658
Ref: changes release-1-2-1-2010-02-26794796
Ref: 800794796
Node: Release 1 2 [2009-12-29]795456
Ref: changes release-1-2-2009-12-29795594
Ref: 801795594
Ref: Release 1 2 [2009-12-29]-Footnote-1797242
Node: Release 1 1 0 [2009-06-06]797301
Ref: changes release-1-1-0-2009-06-06797439
Ref: 802797439
Node: Release 1 0 0 [2009-03-20]798439
Ref: changes release-1-0-0-2009-03-20798544
Ref: 803798544
Node: Python Module Index801600
Node: Index802370
Ref: mpi4py futures cpi-py940735
Ref: mpi4py futures julia-py940736
Ref: 22d940738
Ref: 234940740

End Tag Table


Local Variables:
coding: utf-8
End:
